//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ActionItem_OrganizationID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Organization), "ActionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ActionItem), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ActionItem_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Sport), "ActionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ActionItem), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_AffiliateTypeID", "AffiliateType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.AffiliateType), "ResourceAffiliate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceAffiliate), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_BenchmarkTierID", "BenchmarkTier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.BenchmarkTier), "BenchmarkResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.BenchmarkResource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_BenchmarkTypeID", "BenchmarkType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.BenchmarkType), "BenchmarkResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.BenchmarkResource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_ResourceSportID", "ResourceSport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.ResourceSport), "BenchmarkResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.BenchmarkResource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_YearID", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Year), "BenchmarkResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.BenchmarkResource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_BenchmarkTierID", "BenchmarkTier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.BenchmarkTier), "BenchmarkSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.BenchmarkSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_BenchmarkTypeID", "BenchmarkType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.BenchmarkType), "BenchmarkSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.BenchmarkSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "BenchmarkSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.BenchmarkSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_YearID", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Year), "BenchmarkSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.BenchmarkSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_BenchmarkTier_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "BenchmarkTier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.BenchmarkTier), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Competition_BenchmarkTypeID", "BenchmarkType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.BenchmarkType), "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Competition), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_BenchmarkTypeID", "BenchmarkType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.BenchmarkType), "DownloadStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.DownloadStaging), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_BenchmarkTypeID", "BenchmarkType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.BenchmarkType), "ResultStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResultStaging), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Competition_CompetitionTypeID", "CompetitionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.CompetitionType), "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Competition), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Competition_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Competition), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Competition_YearID", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Year), "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Competition), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_CompetitionSport_CompetitionID", "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Competition), "CompetitionSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.CompetitionSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_CompetitionID", "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Competition), "DownloadStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.DownloadStaging), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Result_CompetitionID", "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Competition), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Result), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_CompetitionID", "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Competition), "ResultStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResultStaging), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_CompetitionSport_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "CompetitionSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.CompetitionSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Resource_CountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Country), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Resource_HometownCountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Country), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Resource_MailingCountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Country), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Result_CountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Country), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Result), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_CountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Country), "ResultStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResultStaging), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Team_CountryID", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Country), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Team), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Decode_DecodeCategoryID", "DecodeCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.DecodeCategory), "Decode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Decode), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_DirectAthleteSupport_DirectAthleteSupportTypeID", "DirectAthleteSupportType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.DirectAthleteSupportType), "DirectAthleteSupport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.DirectAthleteSupport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceDirectAthleteSupport_DirectAthleteSupportID", "DirectAthleteSupport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.DirectAthleteSupport), "ResourceDirectAthleteSupport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceDirectAthleteSupport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_DownloadTemplateID", "DownloadTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.DownloadTemplate), "DownloadStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.DownloadStaging), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "DownloadStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.DownloadStaging), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_DownloadTemplate_TableTemplateID", "TableTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.TableTemplate), "DownloadTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.DownloadTemplate), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_DownloadTemplateMapping_DownloadTemplateID", "DownloadTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.DownloadTemplate), "DownloadTemplateMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.DownloadTemplateMapping), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_DownloadTemplateID", "DownloadTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.DownloadTemplate), "ResultStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResultStaging), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Evaluation_EvaluationVersionID", "EvaluationVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.EvaluationVersion), "Evaluation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Evaluation), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Evaluation_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "Evaluation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Evaluation), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationBestPractice_EvaluationID", "Evaluation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Evaluation), "EvaluationBestPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationBestPractice), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationQuestion_EvaluationID", "Evaluation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Evaluation), "EvaluationQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationQuestion), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationBestPractice_EvaluationMasterPillarID", "EvaluationMasterPillar", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.EvaluationMasterPillar), "EvaluationBestPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationBestPractice), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationMasterPillar_OrganizationTypeID", "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.OrganizationType), "EvaluationMasterPillar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationMasterPillar), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationMasterQuestion_EvaluationMasterPillarID", "EvaluationMasterPillar", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.EvaluationMasterPillar), "EvaluationMasterQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationMasterQuestion), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationMasterQuestion_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "EvaluationMasterQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationMasterQuestion), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersionQuestion_EvaluationMasterQuestionID", "EvaluationMasterQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.EvaluationMasterQuestion), "EvaluationVersionQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationVersionQuestion), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationQuestion_EvaluationVersionQuestionID", "EvaluationVersionQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.EvaluationVersionQuestion), "EvaluationQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationQuestion), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersion_OrganizationTypeID", "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.OrganizationType), "EvaluationVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationVersion), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersion_YearID", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Year), "EvaluationVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationVersion), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersionQuestion_EvaluationVersionID", "EvaluationVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.EvaluationVersion), "EvaluationVersionQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.EvaluationVersionQuestion), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingBlock_FundingBlockTypeID", "FundingBlockType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.FundingBlockType), "FundingBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingBlock), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingBlock_FundingSummaryID", "FundingSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.FundingSummary), "FundingBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingBlock), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingCategory_FundingBlockID", "FundingBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.FundingBlock), "FundingCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingCategory), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingBlockOrganizationType_FundingBlockTypeID", "FundingBlockType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.FundingBlockType), "FundingBlockOrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingBlockOrganizationType), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingBlockOrganizationType_OrganizationTypeID", "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.OrganizationType), "FundingBlockOrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingBlockOrganizationType), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingCategoryType_FundingBlockTypeID", "FundingBlockType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.FundingBlockType), "FundingCategoryType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingCategoryType), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingCategory_FundingCategoryTypeID", "FundingCategoryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.FundingCategoryType), "FundingCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingCategory), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingDetail_FundingCategoryID", "FundingCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.FundingCategory), "FundingDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingDetail), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingCategoryType_ResourceTypeID", "ResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.ResourceType), "FundingCategoryType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingCategoryType), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingDetail_OrganzitionID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Organization), "FundingDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingDetail), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingDetail_ResourceID", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Resource), "FundingDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingDetail), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingRevision_FundingDetailID", "FundingDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.FundingDetail), "FundingRevision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingRevision), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingRevision_FundingRevisionVersionID", "FundingRevisionVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.FundingRevisionVersion), "FundingRevision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingRevision), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_OrganizationID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Organization), "FundingSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingSummary), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_OrganizationTypeID", "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.OrganizationType), "FundingSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingSummary), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Sport), "FundingSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingSummary), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_YearID", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Year), "FundingSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingSummary), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_FundingTracking_FundingSummaryID", "FundingSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.FundingSummary), "FundingTracking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.FundingTracking), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Sport_HPAID", "HPA", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.HPA), "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Sport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Organization_MailingProvinceID", "Province", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Province), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Organization), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Organization_OrganizationTypeID", "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.OrganizationType), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Organization), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Resource_PrimaryCSCID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Organization), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Resource_SecondaryCSCID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Organization), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Sport_OrganizationID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Organization), "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Sport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Resource_HometownProvinceID", "Province", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Province), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Resource_MailingProvinceID", "Province", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Province), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceQualification_QualificationTypeID", "QualificationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.QualificationType), "ResourceQualification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceQualification), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Report_ReportViewID", "ReportView", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.ReportView), "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Report), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Report_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.Sport), "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Report), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ReportFilter_ReportID", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Report), "ReportFilter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ReportFilter), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ReportGroup_ReportID", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Report), "ReportGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ReportGroup), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ReportProcedure_ReportID", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Report), "ReportProcedure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ReportProcedure), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ReportSecurityGroupProfile_ReportID", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Report), "ReportSecurityGroupProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ReportSecurityGroupProfile), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ReportColumn_ReportGroupID", "ReportGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.ReportGroup), "ReportColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ReportColumn), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ReportParameter_ReportProcedureID", "ReportProcedure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.ReportProcedure), "ReportParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ReportParameter), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ReportParameter_ReportProcedureIDParameter", "ReportProcedure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.ReportProcedure), "ReportParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ReportParameter), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ReportSecurityGroupProfile_SecurityGroupProfileID", "SecurityGroupProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.SecurityGroupProfile), "ReportSecurityGroupProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ReportSecurityGroupProfile), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Resource_ResourceClassID", "ResourceClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.ResourceClass), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Resource_ResourceSpecialtyID", "ResourceSpecialty", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.ResourceSpecialty), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Resource_ResourceTypeID", "ResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.ResourceType), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_ResourceID", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Resource), "ResourceAffiliate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceAffiliate), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceDirectAthleteSupport_ResourceID", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Resource), "ResourceDirectAthleteSupport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceDirectAthleteSupport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourcePoolAssignment_ResourceIDAssignment", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Resource), "ResourcePoolAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourcePoolAssignment), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourcePoolAssignment_ResourceIDPool", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Resource), "ResourcePoolAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourcePoolAssignment), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceQualification_ResourceID", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Resource), "ResourceQualification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceQualification), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_ResourceID", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Resource), "ResourceSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_TeamResource_ResourceID", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Resource), "TeamResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.TeamResource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_YearFromID", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Year), "ResourceAffiliate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceAffiliate), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_YearToID", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Year), "ResourceAffiliate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceAffiliate), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_ResourceClassID", "ResourceClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.ResourceClass), "ResourceSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceDirectAthleteSupport_YearFrom", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Year), "ResourceDirectAthleteSupport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceDirectAthleteSupport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceSpecialty_ResourceTypeID", "ResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.ResourceType), "ResourceSpecialty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceSpecialty), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "ResourceSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_Year", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Year), "ResourceSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResourceSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Result_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Result), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Result_TeamID", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Team), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Result), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "ResultStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResultStaging), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResultStagingResource_ResultStagingID", "ResultStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.ResultStaging), "ResultStagingResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResultStagingResource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SecurityGroupPage_SecurityGroupProfileID", "SecurityGroupProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.SecurityGroupProfile), "SecurityGroupPage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SecurityGroupPage), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SecurityGroupPage_SecurityPageID", "SecurityPage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.SecurityPage), "SecurityGroupPage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SecurityGroupPage), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SecurityGroupProfile_SecurityPageIDHome", "SecurityPage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.SecurityPage), "SecurityGroupProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SecurityGroupProfile), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SecurityUserProfile_SecurityGroupProfileID", "SecurityGroupProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.SecurityGroupProfile), "SecurityUserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SecurityUserProfile), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SecurityPage_ParentSecurityPageID", "SecurityPage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OTP.Ring.Data.Models.SecurityPage), "SecurityPage1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SecurityPage), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SecurityUser_SecurityUserProfileID", "SecurityUserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.SecurityUserProfile), "SecurityUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SecurityUser), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SecurityUserSport_SecurityUserProfileID", "SecurityUserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.SecurityUserProfile), "SecurityUserSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SecurityUserSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SecurityUserSport_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "SecurityUserSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SecurityUserSport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Sport_ParentSportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "Sport1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Sport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Sport_SportLevelID", "SportLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.SportLevel), "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Sport), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SportRanking_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "SportRanking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SportRanking), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Team_SportID", "Sport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Sport), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Team), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SportRanking_SportRankingCategoryID", "SportRankingCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.SportRankingCategory), "SportRanking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SportRanking), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_SportRanking_YearID", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Year), "SportRanking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.SportRanking), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_TableTemplateField_TableTemplateID", "TableTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.TableTemplate), "TableTemplateField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.TableTemplateField), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_Team_TeamTypeID", "TeamType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.TeamType), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.Team), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_TeamResource_TeamID", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Team), "TeamResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.TeamResource), true)]
[assembly: EdmRelationshipAttribute("OTP.Ring.Data.Model", "FK_ResultResource_ResultID", "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OTP.Ring.Data.Models.Result), "ResultResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OTP.Ring.Data.Models.ResultResource), true)]

#endregion

namespace OTP.Ring.Data.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RingEntities object using the connection string found in the 'RingEntities' section of the application configuration file.
        /// </summary>
        public RingEntities() : base("name=RingEntities", "RingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RingEntities object.
        /// </summary>
        public RingEntities(string connectionString) : base(connectionString, "RingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RingEntities object.
        /// </summary>
        public RingEntities(EntityConnection connection) : base(connection, "RingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionItem> ActionItems
        {
            get
            {
                if ((_ActionItems == null))
                {
                    _ActionItems = base.CreateObjectSet<ActionItem>("ActionItems");
                }
                return _ActionItems;
            }
        }
        private ObjectSet<ActionItem> _ActionItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionItemType> ActionItemTypes
        {
            get
            {
                if ((_ActionItemTypes == null))
                {
                    _ActionItemTypes = base.CreateObjectSet<ActionItemType>("ActionItemTypes");
                }
                return _ActionItemTypes;
            }
        }
        private ObjectSet<ActionItemType> _ActionItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AffiliateType> AffiliateTypes
        {
            get
            {
                if ((_AffiliateTypes == null))
                {
                    _AffiliateTypes = base.CreateObjectSet<AffiliateType>("AffiliateTypes");
                }
                return _AffiliateTypes;
            }
        }
        private ObjectSet<AffiliateType> _AffiliateTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenchmarkResource> BenchmarkResources
        {
            get
            {
                if ((_BenchmarkResources == null))
                {
                    _BenchmarkResources = base.CreateObjectSet<BenchmarkResource>("BenchmarkResources");
                }
                return _BenchmarkResources;
            }
        }
        private ObjectSet<BenchmarkResource> _BenchmarkResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenchmarkSport> BenchmarkSports
        {
            get
            {
                if ((_BenchmarkSports == null))
                {
                    _BenchmarkSports = base.CreateObjectSet<BenchmarkSport>("BenchmarkSports");
                }
                return _BenchmarkSports;
            }
        }
        private ObjectSet<BenchmarkSport> _BenchmarkSports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenchmarkTier> BenchmarkTiers
        {
            get
            {
                if ((_BenchmarkTiers == null))
                {
                    _BenchmarkTiers = base.CreateObjectSet<BenchmarkTier>("BenchmarkTiers");
                }
                return _BenchmarkTiers;
            }
        }
        private ObjectSet<BenchmarkTier> _BenchmarkTiers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenchmarkType> BenchmarkTypes
        {
            get
            {
                if ((_BenchmarkTypes == null))
                {
                    _BenchmarkTypes = base.CreateObjectSet<BenchmarkType>("BenchmarkTypes");
                }
                return _BenchmarkTypes;
            }
        }
        private ObjectSet<BenchmarkType> _BenchmarkTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Competition> Competitions
        {
            get
            {
                if ((_Competitions == null))
                {
                    _Competitions = base.CreateObjectSet<Competition>("Competitions");
                }
                return _Competitions;
            }
        }
        private ObjectSet<Competition> _Competitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitionSport> CompetitionSports
        {
            get
            {
                if ((_CompetitionSports == null))
                {
                    _CompetitionSports = base.CreateObjectSet<CompetitionSport>("CompetitionSports");
                }
                return _CompetitionSports;
            }
        }
        private ObjectSet<CompetitionSport> _CompetitionSports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitionType> CompetitionTypes
        {
            get
            {
                if ((_CompetitionTypes == null))
                {
                    _CompetitionTypes = base.CreateObjectSet<CompetitionType>("CompetitionTypes");
                }
                return _CompetitionTypes;
            }
        }
        private ObjectSet<CompetitionType> _CompetitionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Decode> Decodes
        {
            get
            {
                if ((_Decodes == null))
                {
                    _Decodes = base.CreateObjectSet<Decode>("Decodes");
                }
                return _Decodes;
            }
        }
        private ObjectSet<Decode> _Decodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DecodeCategory> DecodeCategories
        {
            get
            {
                if ((_DecodeCategories == null))
                {
                    _DecodeCategories = base.CreateObjectSet<DecodeCategory>("DecodeCategories");
                }
                return _DecodeCategories;
            }
        }
        private ObjectSet<DecodeCategory> _DecodeCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectAthleteSupport> DirectAthleteSupports
        {
            get
            {
                if ((_DirectAthleteSupports == null))
                {
                    _DirectAthleteSupports = base.CreateObjectSet<DirectAthleteSupport>("DirectAthleteSupports");
                }
                return _DirectAthleteSupports;
            }
        }
        private ObjectSet<DirectAthleteSupport> _DirectAthleteSupports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectAthleteSupportType> DirectAthleteSupportTypes
        {
            get
            {
                if ((_DirectAthleteSupportTypes == null))
                {
                    _DirectAthleteSupportTypes = base.CreateObjectSet<DirectAthleteSupportType>("DirectAthleteSupportTypes");
                }
                return _DirectAthleteSupportTypes;
            }
        }
        private ObjectSet<DirectAthleteSupportType> _DirectAthleteSupportTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DownloadStaging> DownloadStagings
        {
            get
            {
                if ((_DownloadStagings == null))
                {
                    _DownloadStagings = base.CreateObjectSet<DownloadStaging>("DownloadStagings");
                }
                return _DownloadStagings;
            }
        }
        private ObjectSet<DownloadStaging> _DownloadStagings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DownloadTemplate> DownloadTemplates
        {
            get
            {
                if ((_DownloadTemplates == null))
                {
                    _DownloadTemplates = base.CreateObjectSet<DownloadTemplate>("DownloadTemplates");
                }
                return _DownloadTemplates;
            }
        }
        private ObjectSet<DownloadTemplate> _DownloadTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DownloadTemplateMapping> DownloadTemplateMappings
        {
            get
            {
                if ((_DownloadTemplateMappings == null))
                {
                    _DownloadTemplateMappings = base.CreateObjectSet<DownloadTemplateMapping>("DownloadTemplateMappings");
                }
                return _DownloadTemplateMappings;
            }
        }
        private ObjectSet<DownloadTemplateMapping> _DownloadTemplateMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Evaluation> Evaluations
        {
            get
            {
                if ((_Evaluations == null))
                {
                    _Evaluations = base.CreateObjectSet<Evaluation>("Evaluations");
                }
                return _Evaluations;
            }
        }
        private ObjectSet<Evaluation> _Evaluations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EvaluationBestPractice> EvaluationBestPractices
        {
            get
            {
                if ((_EvaluationBestPractices == null))
                {
                    _EvaluationBestPractices = base.CreateObjectSet<EvaluationBestPractice>("EvaluationBestPractices");
                }
                return _EvaluationBestPractices;
            }
        }
        private ObjectSet<EvaluationBestPractice> _EvaluationBestPractices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EvaluationMasterPillar> EvaluationMasterPillars
        {
            get
            {
                if ((_EvaluationMasterPillars == null))
                {
                    _EvaluationMasterPillars = base.CreateObjectSet<EvaluationMasterPillar>("EvaluationMasterPillars");
                }
                return _EvaluationMasterPillars;
            }
        }
        private ObjectSet<EvaluationMasterPillar> _EvaluationMasterPillars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EvaluationMasterQuestion> EvaluationMasterQuestions
        {
            get
            {
                if ((_EvaluationMasterQuestions == null))
                {
                    _EvaluationMasterQuestions = base.CreateObjectSet<EvaluationMasterQuestion>("EvaluationMasterQuestions");
                }
                return _EvaluationMasterQuestions;
            }
        }
        private ObjectSet<EvaluationMasterQuestion> _EvaluationMasterQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EvaluationQuestion> EvaluationQuestions
        {
            get
            {
                if ((_EvaluationQuestions == null))
                {
                    _EvaluationQuestions = base.CreateObjectSet<EvaluationQuestion>("EvaluationQuestions");
                }
                return _EvaluationQuestions;
            }
        }
        private ObjectSet<EvaluationQuestion> _EvaluationQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EvaluationVersion> EvaluationVersions
        {
            get
            {
                if ((_EvaluationVersions == null))
                {
                    _EvaluationVersions = base.CreateObjectSet<EvaluationVersion>("EvaluationVersions");
                }
                return _EvaluationVersions;
            }
        }
        private ObjectSet<EvaluationVersion> _EvaluationVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EvaluationVersionQuestion> EvaluationVersionQuestions
        {
            get
            {
                if ((_EvaluationVersionQuestions == null))
                {
                    _EvaluationVersionQuestions = base.CreateObjectSet<EvaluationVersionQuestion>("EvaluationVersionQuestions");
                }
                return _EvaluationVersionQuestions;
            }
        }
        private ObjectSet<EvaluationVersionQuestion> _EvaluationVersionQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingBlock> FundingBlocks
        {
            get
            {
                if ((_FundingBlocks == null))
                {
                    _FundingBlocks = base.CreateObjectSet<FundingBlock>("FundingBlocks");
                }
                return _FundingBlocks;
            }
        }
        private ObjectSet<FundingBlock> _FundingBlocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingBlockOrganizationType> FundingBlockOrganizationTypes
        {
            get
            {
                if ((_FundingBlockOrganizationTypes == null))
                {
                    _FundingBlockOrganizationTypes = base.CreateObjectSet<FundingBlockOrganizationType>("FundingBlockOrganizationTypes");
                }
                return _FundingBlockOrganizationTypes;
            }
        }
        private ObjectSet<FundingBlockOrganizationType> _FundingBlockOrganizationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingBlockType> FundingBlockTypes
        {
            get
            {
                if ((_FundingBlockTypes == null))
                {
                    _FundingBlockTypes = base.CreateObjectSet<FundingBlockType>("FundingBlockTypes");
                }
                return _FundingBlockTypes;
            }
        }
        private ObjectSet<FundingBlockType> _FundingBlockTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingCategory> FundingCategories
        {
            get
            {
                if ((_FundingCategories == null))
                {
                    _FundingCategories = base.CreateObjectSet<FundingCategory>("FundingCategories");
                }
                return _FundingCategories;
            }
        }
        private ObjectSet<FundingCategory> _FundingCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingCategoryType> FundingCategoryTypes
        {
            get
            {
                if ((_FundingCategoryTypes == null))
                {
                    _FundingCategoryTypes = base.CreateObjectSet<FundingCategoryType>("FundingCategoryTypes");
                }
                return _FundingCategoryTypes;
            }
        }
        private ObjectSet<FundingCategoryType> _FundingCategoryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingDetail> FundingDetails
        {
            get
            {
                if ((_FundingDetails == null))
                {
                    _FundingDetails = base.CreateObjectSet<FundingDetail>("FundingDetails");
                }
                return _FundingDetails;
            }
        }
        private ObjectSet<FundingDetail> _FundingDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingRevision> FundingRevisions
        {
            get
            {
                if ((_FundingRevisions == null))
                {
                    _FundingRevisions = base.CreateObjectSet<FundingRevision>("FundingRevisions");
                }
                return _FundingRevisions;
            }
        }
        private ObjectSet<FundingRevision> _FundingRevisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingRevisionVersion> FundingRevisionVersions
        {
            get
            {
                if ((_FundingRevisionVersions == null))
                {
                    _FundingRevisionVersions = base.CreateObjectSet<FundingRevisionVersion>("FundingRevisionVersions");
                }
                return _FundingRevisionVersions;
            }
        }
        private ObjectSet<FundingRevisionVersion> _FundingRevisionVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingSummary> FundingSummaries
        {
            get
            {
                if ((_FundingSummaries == null))
                {
                    _FundingSummaries = base.CreateObjectSet<FundingSummary>("FundingSummaries");
                }
                return _FundingSummaries;
            }
        }
        private ObjectSet<FundingSummary> _FundingSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingTracking> FundingTrackings
        {
            get
            {
                if ((_FundingTrackings == null))
                {
                    _FundingTrackings = base.CreateObjectSet<FundingTracking>("FundingTrackings");
                }
                return _FundingTrackings;
            }
        }
        private ObjectSet<FundingTracking> _FundingTrackings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HPA> HPAs
        {
            get
            {
                if ((_HPAs == null))
                {
                    _HPAs = base.CreateObjectSet<HPA>("HPAs");
                }
                return _HPAs;
            }
        }
        private ObjectSet<HPA> _HPAs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrganizationType> OrganizationTypes
        {
            get
            {
                if ((_OrganizationTypes == null))
                {
                    _OrganizationTypes = base.CreateObjectSet<OrganizationType>("OrganizationTypes");
                }
                return _OrganizationTypes;
            }
        }
        private ObjectSet<OrganizationType> _OrganizationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Province> Provinces
        {
            get
            {
                if ((_Provinces == null))
                {
                    _Provinces = base.CreateObjectSet<Province>("Provinces");
                }
                return _Provinces;
            }
        }
        private ObjectSet<Province> _Provinces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QualificationType> QualificationTypes
        {
            get
            {
                if ((_QualificationTypes == null))
                {
                    _QualificationTypes = base.CreateObjectSet<QualificationType>("QualificationTypes");
                }
                return _QualificationTypes;
            }
        }
        private ObjectSet<QualificationType> _QualificationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Report> Reports
        {
            get
            {
                if ((_Reports == null))
                {
                    _Reports = base.CreateObjectSet<Report>("Reports");
                }
                return _Reports;
            }
        }
        private ObjectSet<Report> _Reports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportAggregation> ReportAggregations
        {
            get
            {
                if ((_ReportAggregations == null))
                {
                    _ReportAggregations = base.CreateObjectSet<ReportAggregation>("ReportAggregations");
                }
                return _ReportAggregations;
            }
        }
        private ObjectSet<ReportAggregation> _ReportAggregations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportColumn> ReportColumns
        {
            get
            {
                if ((_ReportColumns == null))
                {
                    _ReportColumns = base.CreateObjectSet<ReportColumn>("ReportColumns");
                }
                return _ReportColumns;
            }
        }
        private ObjectSet<ReportColumn> _ReportColumns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportFilter> ReportFilters
        {
            get
            {
                if ((_ReportFilters == null))
                {
                    _ReportFilters = base.CreateObjectSet<ReportFilter>("ReportFilters");
                }
                return _ReportFilters;
            }
        }
        private ObjectSet<ReportFilter> _ReportFilters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportFormatString> ReportFormatStrings
        {
            get
            {
                if ((_ReportFormatStrings == null))
                {
                    _ReportFormatStrings = base.CreateObjectSet<ReportFormatString>("ReportFormatStrings");
                }
                return _ReportFormatStrings;
            }
        }
        private ObjectSet<ReportFormatString> _ReportFormatStrings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportGroup> ReportGroups
        {
            get
            {
                if ((_ReportGroups == null))
                {
                    _ReportGroups = base.CreateObjectSet<ReportGroup>("ReportGroups");
                }
                return _ReportGroups;
            }
        }
        private ObjectSet<ReportGroup> _ReportGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportParameter> ReportParameters
        {
            get
            {
                if ((_ReportParameters == null))
                {
                    _ReportParameters = base.CreateObjectSet<ReportParameter>("ReportParameters");
                }
                return _ReportParameters;
            }
        }
        private ObjectSet<ReportParameter> _ReportParameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportProcedure> ReportProcedures
        {
            get
            {
                if ((_ReportProcedures == null))
                {
                    _ReportProcedures = base.CreateObjectSet<ReportProcedure>("ReportProcedures");
                }
                return _ReportProcedures;
            }
        }
        private ObjectSet<ReportProcedure> _ReportProcedures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportSecurityGroupProfile> ReportSecurityGroupProfiles
        {
            get
            {
                if ((_ReportSecurityGroupProfiles == null))
                {
                    _ReportSecurityGroupProfiles = base.CreateObjectSet<ReportSecurityGroupProfile>("ReportSecurityGroupProfiles");
                }
                return _ReportSecurityGroupProfiles;
            }
        }
        private ObjectSet<ReportSecurityGroupProfile> _ReportSecurityGroupProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportView> ReportViews
        {
            get
            {
                if ((_ReportViews == null))
                {
                    _ReportViews = base.CreateObjectSet<ReportView>("ReportViews");
                }
                return _ReportViews;
            }
        }
        private ObjectSet<ReportView> _ReportViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Resource> Resources
        {
            get
            {
                if ((_Resources == null))
                {
                    _Resources = base.CreateObjectSet<Resource>("Resources");
                }
                return _Resources;
            }
        }
        private ObjectSet<Resource> _Resources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceAffiliate> ResourceAffiliates
        {
            get
            {
                if ((_ResourceAffiliates == null))
                {
                    _ResourceAffiliates = base.CreateObjectSet<ResourceAffiliate>("ResourceAffiliates");
                }
                return _ResourceAffiliates;
            }
        }
        private ObjectSet<ResourceAffiliate> _ResourceAffiliates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceClass> ResourceClasses
        {
            get
            {
                if ((_ResourceClasses == null))
                {
                    _ResourceClasses = base.CreateObjectSet<ResourceClass>("ResourceClasses");
                }
                return _ResourceClasses;
            }
        }
        private ObjectSet<ResourceClass> _ResourceClasses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceDirectAthleteSupport> ResourceDirectAthleteSupports
        {
            get
            {
                if ((_ResourceDirectAthleteSupports == null))
                {
                    _ResourceDirectAthleteSupports = base.CreateObjectSet<ResourceDirectAthleteSupport>("ResourceDirectAthleteSupports");
                }
                return _ResourceDirectAthleteSupports;
            }
        }
        private ObjectSet<ResourceDirectAthleteSupport> _ResourceDirectAthleteSupports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourcePoolAssignment> ResourcePoolAssignments
        {
            get
            {
                if ((_ResourcePoolAssignments == null))
                {
                    _ResourcePoolAssignments = base.CreateObjectSet<ResourcePoolAssignment>("ResourcePoolAssignments");
                }
                return _ResourcePoolAssignments;
            }
        }
        private ObjectSet<ResourcePoolAssignment> _ResourcePoolAssignments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceQualification> ResourceQualifications
        {
            get
            {
                if ((_ResourceQualifications == null))
                {
                    _ResourceQualifications = base.CreateObjectSet<ResourceQualification>("ResourceQualifications");
                }
                return _ResourceQualifications;
            }
        }
        private ObjectSet<ResourceQualification> _ResourceQualifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceSpecialty> ResourceSpecialties
        {
            get
            {
                if ((_ResourceSpecialties == null))
                {
                    _ResourceSpecialties = base.CreateObjectSet<ResourceSpecialty>("ResourceSpecialties");
                }
                return _ResourceSpecialties;
            }
        }
        private ObjectSet<ResourceSpecialty> _ResourceSpecialties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceSport> ResourceSports
        {
            get
            {
                if ((_ResourceSports == null))
                {
                    _ResourceSports = base.CreateObjectSet<ResourceSport>("ResourceSports");
                }
                return _ResourceSports;
            }
        }
        private ObjectSet<ResourceSport> _ResourceSports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceType> ResourceTypes
        {
            get
            {
                if ((_ResourceTypes == null))
                {
                    _ResourceTypes = base.CreateObjectSet<ResourceType>("ResourceTypes");
                }
                return _ResourceTypes;
            }
        }
        private ObjectSet<ResourceType> _ResourceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Result> Results
        {
            get
            {
                if ((_Results == null))
                {
                    _Results = base.CreateObjectSet<Result>("Results");
                }
                return _Results;
            }
        }
        private ObjectSet<Result> _Results;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResultPositionMapping> ResultPositionMappings
        {
            get
            {
                if ((_ResultPositionMappings == null))
                {
                    _ResultPositionMappings = base.CreateObjectSet<ResultPositionMapping>("ResultPositionMappings");
                }
                return _ResultPositionMappings;
            }
        }
        private ObjectSet<ResultPositionMapping> _ResultPositionMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResultStaging> ResultStagings
        {
            get
            {
                if ((_ResultStagings == null))
                {
                    _ResultStagings = base.CreateObjectSet<ResultStaging>("ResultStagings");
                }
                return _ResultStagings;
            }
        }
        private ObjectSet<ResultStaging> _ResultStagings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResultStagingResource> ResultStagingResources
        {
            get
            {
                if ((_ResultStagingResources == null))
                {
                    _ResultStagingResources = base.CreateObjectSet<ResultStagingResource>("ResultStagingResources");
                }
                return _ResultStagingResources;
            }
        }
        private ObjectSet<ResultStagingResource> _ResultStagingResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityGroupPage> SecurityGroupPages
        {
            get
            {
                if ((_SecurityGroupPages == null))
                {
                    _SecurityGroupPages = base.CreateObjectSet<SecurityGroupPage>("SecurityGroupPages");
                }
                return _SecurityGroupPages;
            }
        }
        private ObjectSet<SecurityGroupPage> _SecurityGroupPages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityGroupProfile> SecurityGroupProfiles
        {
            get
            {
                if ((_SecurityGroupProfiles == null))
                {
                    _SecurityGroupProfiles = base.CreateObjectSet<SecurityGroupProfile>("SecurityGroupProfiles");
                }
                return _SecurityGroupProfiles;
            }
        }
        private ObjectSet<SecurityGroupProfile> _SecurityGroupProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityPage> SecurityPages
        {
            get
            {
                if ((_SecurityPages == null))
                {
                    _SecurityPages = base.CreateObjectSet<SecurityPage>("SecurityPages");
                }
                return _SecurityPages;
            }
        }
        private ObjectSet<SecurityPage> _SecurityPages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityUser> SecurityUsers
        {
            get
            {
                if ((_SecurityUsers == null))
                {
                    _SecurityUsers = base.CreateObjectSet<SecurityUser>("SecurityUsers");
                }
                return _SecurityUsers;
            }
        }
        private ObjectSet<SecurityUser> _SecurityUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityUserProfile> SecurityUserProfiles
        {
            get
            {
                if ((_SecurityUserProfiles == null))
                {
                    _SecurityUserProfiles = base.CreateObjectSet<SecurityUserProfile>("SecurityUserProfiles");
                }
                return _SecurityUserProfiles;
            }
        }
        private ObjectSet<SecurityUserProfile> _SecurityUserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityUserSport> SecurityUserSports
        {
            get
            {
                if ((_SecurityUserSports == null))
                {
                    _SecurityUserSports = base.CreateObjectSet<SecurityUserSport>("SecurityUserSports");
                }
                return _SecurityUserSports;
            }
        }
        private ObjectSet<SecurityUserSport> _SecurityUserSports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sport> Sports
        {
            get
            {
                if ((_Sports == null))
                {
                    _Sports = base.CreateObjectSet<Sport>("Sports");
                }
                return _Sports;
            }
        }
        private ObjectSet<Sport> _Sports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportLevel> SportLevels
        {
            get
            {
                if ((_SportLevels == null))
                {
                    _SportLevels = base.CreateObjectSet<SportLevel>("SportLevels");
                }
                return _SportLevels;
            }
        }
        private ObjectSet<SportLevel> _SportLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportRanking> SportRankings
        {
            get
            {
                if ((_SportRankings == null))
                {
                    _SportRankings = base.CreateObjectSet<SportRanking>("SportRankings");
                }
                return _SportRankings;
            }
        }
        private ObjectSet<SportRanking> _SportRankings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportRankingCategory> SportRankingCategories
        {
            get
            {
                if ((_SportRankingCategories == null))
                {
                    _SportRankingCategories = base.CreateObjectSet<SportRankingCategory>("SportRankingCategories");
                }
                return _SportRankingCategories;
            }
        }
        private ObjectSet<SportRankingCategory> _SportRankingCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TableTemplate> TableTemplates
        {
            get
            {
                if ((_TableTemplates == null))
                {
                    _TableTemplates = base.CreateObjectSet<TableTemplate>("TableTemplates");
                }
                return _TableTemplates;
            }
        }
        private ObjectSet<TableTemplate> _TableTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TableTemplateField> TableTemplateFields
        {
            get
            {
                if ((_TableTemplateFields == null))
                {
                    _TableTemplateFields = base.CreateObjectSet<TableTemplateField>("TableTemplateFields");
                }
                return _TableTemplateFields;
            }
        }
        private ObjectSet<TableTemplateField> _TableTemplateFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamResource> TeamResources
        {
            get
            {
                if ((_TeamResources == null))
                {
                    _TeamResources = base.CreateObjectSet<TeamResource>("TeamResources");
                }
                return _TeamResources;
            }
        }
        private ObjectSet<TeamResource> _TeamResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamType> TeamTypes
        {
            get
            {
                if ((_TeamTypes == null))
                {
                    _TeamTypes = base.CreateObjectSet<TeamType>("TeamTypes");
                }
                return _TeamTypes;
            }
        }
        private ObjectSet<TeamType> _TeamTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Year> Years
        {
            get
            {
                if ((_Years == null))
                {
                    _Years = base.CreateObjectSet<Year>("Years");
                }
                return _Years;
            }
        }
        private ObjectSet<Year> _Years;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResultResource> ResultResources
        {
            get
            {
                if ((_ResultResources == null))
                {
                    _ResultResources = base.CreateObjectSet<ResultResource>("ResultResources");
                }
                return _ResultResources;
            }
        }
        private ObjectSet<ResultResource> _ResultResources;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionItems(ActionItem actionItem)
        {
            base.AddObject("ActionItems", actionItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionItemTypes(ActionItemType actionItemType)
        {
            base.AddObject("ActionItemTypes", actionItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AffiliateTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAffiliateTypes(AffiliateType affiliateType)
        {
            base.AddObject("AffiliateTypes", affiliateType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenchmarkResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenchmarkResources(BenchmarkResource benchmarkResource)
        {
            base.AddObject("BenchmarkResources", benchmarkResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenchmarkSports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenchmarkSports(BenchmarkSport benchmarkSport)
        {
            base.AddObject("BenchmarkSports", benchmarkSport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenchmarkTiers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenchmarkTiers(BenchmarkTier benchmarkTier)
        {
            base.AddObject("BenchmarkTiers", benchmarkTier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenchmarkTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenchmarkTypes(BenchmarkType benchmarkType)
        {
            base.AddObject("BenchmarkTypes", benchmarkType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Competitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitions(Competition competition)
        {
            base.AddObject("Competitions", competition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitionSports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitionSports(CompetitionSport competitionSport)
        {
            base.AddObject("CompetitionSports", competitionSport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitionTypes(CompetitionType competitionType)
        {
            base.AddObject("CompetitionTypes", competitionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Decodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDecodes(Decode decode)
        {
            base.AddObject("Decodes", decode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DecodeCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDecodeCategories(DecodeCategory decodeCategory)
        {
            base.AddObject("DecodeCategories", decodeCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectAthleteSupports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectAthleteSupports(DirectAthleteSupport directAthleteSupport)
        {
            base.AddObject("DirectAthleteSupports", directAthleteSupport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectAthleteSupportTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectAthleteSupportTypes(DirectAthleteSupportType directAthleteSupportType)
        {
            base.AddObject("DirectAthleteSupportTypes", directAthleteSupportType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DownloadStagings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDownloadStagings(DownloadStaging downloadStaging)
        {
            base.AddObject("DownloadStagings", downloadStaging);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DownloadTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDownloadTemplates(DownloadTemplate downloadTemplate)
        {
            base.AddObject("DownloadTemplates", downloadTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DownloadTemplateMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDownloadTemplateMappings(DownloadTemplateMapping downloadTemplateMapping)
        {
            base.AddObject("DownloadTemplateMappings", downloadTemplateMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Evaluations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvaluations(Evaluation evaluation)
        {
            base.AddObject("Evaluations", evaluation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EvaluationBestPractices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvaluationBestPractices(EvaluationBestPractice evaluationBestPractice)
        {
            base.AddObject("EvaluationBestPractices", evaluationBestPractice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EvaluationMasterPillars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvaluationMasterPillars(EvaluationMasterPillar evaluationMasterPillar)
        {
            base.AddObject("EvaluationMasterPillars", evaluationMasterPillar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EvaluationMasterQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvaluationMasterQuestions(EvaluationMasterQuestion evaluationMasterQuestion)
        {
            base.AddObject("EvaluationMasterQuestions", evaluationMasterQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EvaluationQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvaluationQuestions(EvaluationQuestion evaluationQuestion)
        {
            base.AddObject("EvaluationQuestions", evaluationQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EvaluationVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvaluationVersions(EvaluationVersion evaluationVersion)
        {
            base.AddObject("EvaluationVersions", evaluationVersion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EvaluationVersionQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvaluationVersionQuestions(EvaluationVersionQuestion evaluationVersionQuestion)
        {
            base.AddObject("EvaluationVersionQuestions", evaluationVersionQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingBlocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingBlocks(FundingBlock fundingBlock)
        {
            base.AddObject("FundingBlocks", fundingBlock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingBlockOrganizationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingBlockOrganizationTypes(FundingBlockOrganizationType fundingBlockOrganizationType)
        {
            base.AddObject("FundingBlockOrganizationTypes", fundingBlockOrganizationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingBlockTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingBlockTypes(FundingBlockType fundingBlockType)
        {
            base.AddObject("FundingBlockTypes", fundingBlockType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingCategories(FundingCategory fundingCategory)
        {
            base.AddObject("FundingCategories", fundingCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingCategoryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingCategoryTypes(FundingCategoryType fundingCategoryType)
        {
            base.AddObject("FundingCategoryTypes", fundingCategoryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingDetails(FundingDetail fundingDetail)
        {
            base.AddObject("FundingDetails", fundingDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingRevisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingRevisions(FundingRevision fundingRevision)
        {
            base.AddObject("FundingRevisions", fundingRevision);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingRevisionVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingRevisionVersions(FundingRevisionVersion fundingRevisionVersion)
        {
            base.AddObject("FundingRevisionVersions", fundingRevisionVersion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingSummaries(FundingSummary fundingSummary)
        {
            base.AddObject("FundingSummaries", fundingSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingTrackings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingTrackings(FundingTracking fundingTracking)
        {
            base.AddObject("FundingTrackings", fundingTracking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HPAs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHPAs(HPA hPA)
        {
            base.AddObject("HPAs", hPA);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrganizationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizationTypes(OrganizationType organizationType)
        {
            base.AddObject("OrganizationTypes", organizationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Provinces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProvinces(Province province)
        {
            base.AddObject("Provinces", province);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QualificationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQualificationTypes(QualificationType qualificationType)
        {
            base.AddObject("QualificationTypes", qualificationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReports(Report report)
        {
            base.AddObject("Reports", report);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportAggregations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportAggregations(ReportAggregation reportAggregation)
        {
            base.AddObject("ReportAggregations", reportAggregation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportColumns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportColumns(ReportColumn reportColumn)
        {
            base.AddObject("ReportColumns", reportColumn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportFilters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportFilters(ReportFilter reportFilter)
        {
            base.AddObject("ReportFilters", reportFilter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportFormatStrings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportFormatStrings(ReportFormatString reportFormatString)
        {
            base.AddObject("ReportFormatStrings", reportFormatString);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportGroups(ReportGroup reportGroup)
        {
            base.AddObject("ReportGroups", reportGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportParameters(ReportParameter reportParameter)
        {
            base.AddObject("ReportParameters", reportParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportProcedures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportProcedures(ReportProcedure reportProcedure)
        {
            base.AddObject("ReportProcedures", reportProcedure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportSecurityGroupProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportSecurityGroupProfiles(ReportSecurityGroupProfile reportSecurityGroupProfile)
        {
            base.AddObject("ReportSecurityGroupProfiles", reportSecurityGroupProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportViews(ReportView reportView)
        {
            base.AddObject("ReportViews", reportView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Resources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResources(Resource resource)
        {
            base.AddObject("Resources", resource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceAffiliates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceAffiliates(ResourceAffiliate resourceAffiliate)
        {
            base.AddObject("ResourceAffiliates", resourceAffiliate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceClasses(ResourceClass resourceClass)
        {
            base.AddObject("ResourceClasses", resourceClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceDirectAthleteSupports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceDirectAthleteSupports(ResourceDirectAthleteSupport resourceDirectAthleteSupport)
        {
            base.AddObject("ResourceDirectAthleteSupports", resourceDirectAthleteSupport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourcePoolAssignments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourcePoolAssignments(ResourcePoolAssignment resourcePoolAssignment)
        {
            base.AddObject("ResourcePoolAssignments", resourcePoolAssignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceQualifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceQualifications(ResourceQualification resourceQualification)
        {
            base.AddObject("ResourceQualifications", resourceQualification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceSpecialties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceSpecialties(ResourceSpecialty resourceSpecialty)
        {
            base.AddObject("ResourceSpecialties", resourceSpecialty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceSports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceSports(ResourceSport resourceSport)
        {
            base.AddObject("ResourceSports", resourceSport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceTypes(ResourceType resourceType)
        {
            base.AddObject("ResourceTypes", resourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Results EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResults(Result result)
        {
            base.AddObject("Results", result);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResultPositionMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResultPositionMappings(ResultPositionMapping resultPositionMapping)
        {
            base.AddObject("ResultPositionMappings", resultPositionMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResultStagings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResultStagings(ResultStaging resultStaging)
        {
            base.AddObject("ResultStagings", resultStaging);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResultStagingResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResultStagingResources(ResultStagingResource resultStagingResource)
        {
            base.AddObject("ResultStagingResources", resultStagingResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityGroupPages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityGroupPages(SecurityGroupPage securityGroupPage)
        {
            base.AddObject("SecurityGroupPages", securityGroupPage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityGroupProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityGroupProfiles(SecurityGroupProfile securityGroupProfile)
        {
            base.AddObject("SecurityGroupProfiles", securityGroupProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityPages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityPages(SecurityPage securityPage)
        {
            base.AddObject("SecurityPages", securityPage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityUsers(SecurityUser securityUser)
        {
            base.AddObject("SecurityUsers", securityUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityUserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityUserProfiles(SecurityUserProfile securityUserProfile)
        {
            base.AddObject("SecurityUserProfiles", securityUserProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityUserSports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityUserSports(SecurityUserSport securityUserSport)
        {
            base.AddObject("SecurityUserSports", securityUserSport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSports(Sport sport)
        {
            base.AddObject("Sports", sport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportLevels(SportLevel sportLevel)
        {
            base.AddObject("SportLevels", sportLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportRankings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportRankings(SportRanking sportRanking)
        {
            base.AddObject("SportRankings", sportRanking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportRankingCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportRankingCategories(SportRankingCategory sportRankingCategory)
        {
            base.AddObject("SportRankingCategories", sportRankingCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TableTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTableTemplates(TableTemplate tableTemplate)
        {
            base.AddObject("TableTemplates", tableTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TableTemplateFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTableTemplateFields(TableTemplateField tableTemplateField)
        {
            base.AddObject("TableTemplateFields", tableTemplateField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamResources(TeamResource teamResource)
        {
            base.AddObject("TeamResources", teamResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamTypes(TeamType teamType)
        {
            base.AddObject("TeamTypes", teamType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Years EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToYears(Year year)
        {
            base.AddObject("Years", year);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResultResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResultResources(ResultResource resultResource)
        {
            base.AddObject("ResultResources", resultResource);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="sportRankingCategoryID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddSportRanking(global::System.String sportID, global::System.String yearID, global::System.String sportRankingCategoryID, global::System.String comments)
        {
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter sportRankingCategoryIDParameter;
            if (sportRankingCategoryID != null)
            {
                sportRankingCategoryIDParameter = new ObjectParameter("SportRankingCategoryID", sportRankingCategoryID);
            }
            else
            {
                sportRankingCategoryIDParameter = new ObjectParameter("SportRankingCategoryID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddSportRanking", sportIDParameter, yearIDParameter, sportRankingCategoryIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sportRankingID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteSportRanking(Nullable<global::System.Int32> sportRankingID)
        {
            ObjectParameter sportRankingIDParameter;
            if (sportRankingID.HasValue)
            {
                sportRankingIDParameter = new ObjectParameter("SportRankingID", sportRankingID);
            }
            else
            {
                sportRankingIDParameter = new ObjectParameter("SportRankingID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteSportRanking", sportRankingIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="sportCode">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="organizationID">No Metadata Documentation available.</param>
        /// <param name="hPAID">No Metadata Documentation available.</param>
        /// <param name="benchmark">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="medalEvent">No Metadata Documentation available.</param>
        /// <param name="stylingCode">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="active">No Metadata Documentation available.</param>
        /// <param name="teamSport">No Metadata Documentation available.</param>
        /// <param name="resourceTracking">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateSport(global::System.String sportID, global::System.String sportCode, global::System.String name_EN, global::System.String name_FR, global::System.String organizationID, global::System.String hPAID, Nullable<global::System.Boolean> benchmark, global::System.String comments, Nullable<global::System.Boolean> medalEvent, Nullable<global::System.Int32> stylingCode, global::System.String gender, Nullable<global::System.Boolean> active, Nullable<global::System.Boolean> teamSport, Nullable<global::System.Boolean> resourceTracking)
        {
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter sportCodeParameter;
            if (sportCode != null)
            {
                sportCodeParameter = new ObjectParameter("SportCode", sportCode);
            }
            else
            {
                sportCodeParameter = new ObjectParameter("SportCode", typeof(global::System.String));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter organizationIDParameter;
            if (organizationID != null)
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", organizationID);
            }
            else
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", typeof(global::System.String));
            }
    
            ObjectParameter hPAIDParameter;
            if (hPAID != null)
            {
                hPAIDParameter = new ObjectParameter("HPAID", hPAID);
            }
            else
            {
                hPAIDParameter = new ObjectParameter("HPAID", typeof(global::System.String));
            }
    
            ObjectParameter benchmarkParameter;
            if (benchmark.HasValue)
            {
                benchmarkParameter = new ObjectParameter("Benchmark", benchmark);
            }
            else
            {
                benchmarkParameter = new ObjectParameter("Benchmark", typeof(global::System.Boolean));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter medalEventParameter;
            if (medalEvent.HasValue)
            {
                medalEventParameter = new ObjectParameter("MedalEvent", medalEvent);
            }
            else
            {
                medalEventParameter = new ObjectParameter("MedalEvent", typeof(global::System.Boolean));
            }
    
            ObjectParameter stylingCodeParameter;
            if (stylingCode.HasValue)
            {
                stylingCodeParameter = new ObjectParameter("StylingCode", stylingCode);
            }
            else
            {
                stylingCodeParameter = new ObjectParameter("StylingCode", typeof(global::System.Int32));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("Gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("Gender", typeof(global::System.String));
            }
    
            ObjectParameter activeParameter;
            if (active.HasValue)
            {
                activeParameter = new ObjectParameter("active", active);
            }
            else
            {
                activeParameter = new ObjectParameter("active", typeof(global::System.Boolean));
            }
    
            ObjectParameter teamSportParameter;
            if (teamSport.HasValue)
            {
                teamSportParameter = new ObjectParameter("TeamSport", teamSport);
            }
            else
            {
                teamSportParameter = new ObjectParameter("TeamSport", typeof(global::System.Boolean));
            }
    
            ObjectParameter resourceTrackingParameter;
            if (resourceTracking.HasValue)
            {
                resourceTrackingParameter = new ObjectParameter("ResourceTracking", resourceTracking);
            }
            else
            {
                resourceTrackingParameter = new ObjectParameter("ResourceTracking", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateSport", sportIDParameter, sportCodeParameter, name_ENParameter, name_FRParameter, organizationIDParameter, hPAIDParameter, benchmarkParameter, commentsParameter, medalEventParameter, stylingCodeParameter, genderParameter, activeParameter, teamSportParameter, resourceTrackingParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sportRankingID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="sportRankingCategoryID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateSportRanking(Nullable<global::System.Int32> sportRankingID, global::System.String sportID, global::System.String yearID, global::System.String sportRankingCategoryID, global::System.String comments)
        {
            ObjectParameter sportRankingIDParameter;
            if (sportRankingID.HasValue)
            {
                sportRankingIDParameter = new ObjectParameter("SportRankingID", sportRankingID);
            }
            else
            {
                sportRankingIDParameter = new ObjectParameter("SportRankingID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter sportRankingCategoryIDParameter;
            if (sportRankingCategoryID != null)
            {
                sportRankingCategoryIDParameter = new ObjectParameter("SportRankingCategoryID", sportRankingCategoryID);
            }
            else
            {
                sportRankingCategoryIDParameter = new ObjectParameter("SportRankingCategoryID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateSportRanking", sportRankingIDParameter, sportIDParameter, yearIDParameter, sportRankingCategoryIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="sportLevelID">No Metadata Documentation available.</param>
        /// <param name="sportCode">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="parentSportID">No Metadata Documentation available.</param>
        /// <param name="organizationID">No Metadata Documentation available.</param>
        /// <param name="hPAID">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="benchmark">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="medalEvent">No Metadata Documentation available.</param>
        /// <param name="stylingCode">No Metadata Documentation available.</param>
        /// <param name="active">No Metadata Documentation available.</param>
        /// <param name="teamSport">No Metadata Documentation available.</param>
        /// <param name="resourceTracking">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddSport(global::System.String sportID, Nullable<global::System.Int32> sportLevelID, global::System.String sportCode, global::System.String name_EN, global::System.String name_FR, global::System.String parentSportID, global::System.String organizationID, global::System.String hPAID, global::System.String gender, Nullable<global::System.Boolean> benchmark, global::System.String comments, Nullable<global::System.Boolean> medalEvent, Nullable<global::System.Int32> stylingCode, Nullable<global::System.Boolean> active, Nullable<global::System.Boolean> teamSport, Nullable<global::System.Boolean> resourceTracking)
        {
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter sportLevelIDParameter;
            if (sportLevelID.HasValue)
            {
                sportLevelIDParameter = new ObjectParameter("SportLevelID", sportLevelID);
            }
            else
            {
                sportLevelIDParameter = new ObjectParameter("SportLevelID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportCodeParameter;
            if (sportCode != null)
            {
                sportCodeParameter = new ObjectParameter("SportCode", sportCode);
            }
            else
            {
                sportCodeParameter = new ObjectParameter("SportCode", typeof(global::System.String));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter parentSportIDParameter;
            if (parentSportID != null)
            {
                parentSportIDParameter = new ObjectParameter("ParentSportID", parentSportID);
            }
            else
            {
                parentSportIDParameter = new ObjectParameter("ParentSportID", typeof(global::System.String));
            }
    
            ObjectParameter organizationIDParameter;
            if (organizationID != null)
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", organizationID);
            }
            else
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", typeof(global::System.String));
            }
    
            ObjectParameter hPAIDParameter;
            if (hPAID != null)
            {
                hPAIDParameter = new ObjectParameter("HPAID", hPAID);
            }
            else
            {
                hPAIDParameter = new ObjectParameter("HPAID", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("Gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("Gender", typeof(global::System.String));
            }
    
            ObjectParameter benchmarkParameter;
            if (benchmark.HasValue)
            {
                benchmarkParameter = new ObjectParameter("Benchmark", benchmark);
            }
            else
            {
                benchmarkParameter = new ObjectParameter("Benchmark", typeof(global::System.Boolean));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter medalEventParameter;
            if (medalEvent.HasValue)
            {
                medalEventParameter = new ObjectParameter("MedalEvent", medalEvent);
            }
            else
            {
                medalEventParameter = new ObjectParameter("MedalEvent", typeof(global::System.Boolean));
            }
    
            ObjectParameter stylingCodeParameter;
            if (stylingCode.HasValue)
            {
                stylingCodeParameter = new ObjectParameter("StylingCode", stylingCode);
            }
            else
            {
                stylingCodeParameter = new ObjectParameter("StylingCode", typeof(global::System.Int32));
            }
    
            ObjectParameter activeParameter;
            if (active.HasValue)
            {
                activeParameter = new ObjectParameter("active", active);
            }
            else
            {
                activeParameter = new ObjectParameter("active", typeof(global::System.Boolean));
            }
    
            ObjectParameter teamSportParameter;
            if (teamSport.HasValue)
            {
                teamSportParameter = new ObjectParameter("TeamSport", teamSport);
            }
            else
            {
                teamSportParameter = new ObjectParameter("TeamSport", typeof(global::System.Boolean));
            }
    
            ObjectParameter resourceTrackingParameter;
            if (resourceTracking.HasValue)
            {
                resourceTrackingParameter = new ObjectParameter("ResourceTracking", resourceTracking);
            }
            else
            {
                resourceTrackingParameter = new ObjectParameter("ResourceTracking", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddSport", sportIDParameter, sportLevelIDParameter, sportCodeParameter, name_ENParameter, name_FRParameter, parentSportIDParameter, organizationIDParameter, hPAIDParameter, genderParameter, benchmarkParameter, commentsParameter, medalEventParameter, stylingCodeParameter, activeParameter, teamSportParameter, resourceTrackingParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="resourceTypeID">No Metadata Documentation available.</param>
        /// <param name="resourceSpecialtyID">No Metadata Documentation available.</param>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="dateOfBirth">No Metadata Documentation available.</param>
        /// <param name="mailingAddress">No Metadata Documentation available.</param>
        /// <param name="mailingCity">No Metadata Documentation available.</param>
        /// <param name="mailingProvinceID">No Metadata Documentation available.</param>
        /// <param name="mailingCountryID">No Metadata Documentation available.</param>
        /// <param name="mailingPostalCode">No Metadata Documentation available.</param>
        /// <param name="homePhone">No Metadata Documentation available.</param>
        /// <param name="cellPhone">No Metadata Documentation available.</param>
        /// <param name="eMailAddress">No Metadata Documentation available.</param>
        /// <param name="skypeName">No Metadata Documentation available.</param>
        /// <param name="hometownCity">No Metadata Documentation available.</param>
        /// <param name="hometownProvinceID">No Metadata Documentation available.</param>
        /// <param name="hometownCountryID">No Metadata Documentation available.</param>
        /// <param name="primaryCSCID">No Metadata Documentation available.</param>
        /// <param name="secondaryCSCID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="tBD">No Metadata Documentation available.</param>
        /// <param name="pooled">No Metadata Documentation available.</param>
        /// <param name="isNew">No Metadata Documentation available.</param>
        /// <param name="active">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateResource(Nullable<global::System.Int32> resourceID, global::System.String resourceTypeID, global::System.String resourceSpecialtyID, global::System.String firstName, global::System.String lastName, global::System.String countryID, global::System.String gender, Nullable<global::System.DateTime> dateOfBirth, global::System.String mailingAddress, global::System.String mailingCity, global::System.String mailingProvinceID, global::System.String mailingCountryID, global::System.String mailingPostalCode, global::System.String homePhone, global::System.String cellPhone, global::System.String eMailAddress, global::System.String skypeName, global::System.String hometownCity, global::System.String hometownProvinceID, global::System.String hometownCountryID, global::System.String primaryCSCID, global::System.String secondaryCSCID, global::System.String comments, Nullable<global::System.Boolean> tBD, Nullable<global::System.Boolean> pooled, Nullable<global::System.Boolean> isNew, Nullable<global::System.Boolean> active)
        {
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter resourceTypeIDParameter;
            if (resourceTypeID != null)
            {
                resourceTypeIDParameter = new ObjectParameter("ResourceTypeID", resourceTypeID);
            }
            else
            {
                resourceTypeIDParameter = new ObjectParameter("ResourceTypeID", typeof(global::System.String));
            }
    
            ObjectParameter resourceSpecialtyIDParameter;
            if (resourceSpecialtyID != null)
            {
                resourceSpecialtyIDParameter = new ObjectParameter("ResourceSpecialtyID", resourceSpecialtyID);
            }
            else
            {
                resourceSpecialtyIDParameter = new ObjectParameter("ResourceSpecialtyID", typeof(global::System.String));
            }
    
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("LastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("LastName", typeof(global::System.String));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID != null)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("Gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("Gender", typeof(global::System.String));
            }
    
            ObjectParameter dateOfBirthParameter;
            if (dateOfBirth.HasValue)
            {
                dateOfBirthParameter = new ObjectParameter("DateOfBirth", dateOfBirth);
            }
            else
            {
                dateOfBirthParameter = new ObjectParameter("DateOfBirth", typeof(global::System.DateTime));
            }
    
            ObjectParameter mailingAddressParameter;
            if (mailingAddress != null)
            {
                mailingAddressParameter = new ObjectParameter("MailingAddress", mailingAddress);
            }
            else
            {
                mailingAddressParameter = new ObjectParameter("MailingAddress", typeof(global::System.String));
            }
    
            ObjectParameter mailingCityParameter;
            if (mailingCity != null)
            {
                mailingCityParameter = new ObjectParameter("MailingCity", mailingCity);
            }
            else
            {
                mailingCityParameter = new ObjectParameter("MailingCity", typeof(global::System.String));
            }
    
            ObjectParameter mailingProvinceIDParameter;
            if (mailingProvinceID != null)
            {
                mailingProvinceIDParameter = new ObjectParameter("MailingProvinceID", mailingProvinceID);
            }
            else
            {
                mailingProvinceIDParameter = new ObjectParameter("MailingProvinceID", typeof(global::System.String));
            }
    
            ObjectParameter mailingCountryIDParameter;
            if (mailingCountryID != null)
            {
                mailingCountryIDParameter = new ObjectParameter("MailingCountryID", mailingCountryID);
            }
            else
            {
                mailingCountryIDParameter = new ObjectParameter("MailingCountryID", typeof(global::System.String));
            }
    
            ObjectParameter mailingPostalCodeParameter;
            if (mailingPostalCode != null)
            {
                mailingPostalCodeParameter = new ObjectParameter("MailingPostalCode", mailingPostalCode);
            }
            else
            {
                mailingPostalCodeParameter = new ObjectParameter("MailingPostalCode", typeof(global::System.String));
            }
    
            ObjectParameter homePhoneParameter;
            if (homePhone != null)
            {
                homePhoneParameter = new ObjectParameter("HomePhone", homePhone);
            }
            else
            {
                homePhoneParameter = new ObjectParameter("HomePhone", typeof(global::System.String));
            }
    
            ObjectParameter cellPhoneParameter;
            if (cellPhone != null)
            {
                cellPhoneParameter = new ObjectParameter("CellPhone", cellPhone);
            }
            else
            {
                cellPhoneParameter = new ObjectParameter("CellPhone", typeof(global::System.String));
            }
    
            ObjectParameter eMailAddressParameter;
            if (eMailAddress != null)
            {
                eMailAddressParameter = new ObjectParameter("EMailAddress", eMailAddress);
            }
            else
            {
                eMailAddressParameter = new ObjectParameter("EMailAddress", typeof(global::System.String));
            }
    
            ObjectParameter skypeNameParameter;
            if (skypeName != null)
            {
                skypeNameParameter = new ObjectParameter("SkypeName", skypeName);
            }
            else
            {
                skypeNameParameter = new ObjectParameter("SkypeName", typeof(global::System.String));
            }
    
            ObjectParameter hometownCityParameter;
            if (hometownCity != null)
            {
                hometownCityParameter = new ObjectParameter("HometownCity", hometownCity);
            }
            else
            {
                hometownCityParameter = new ObjectParameter("HometownCity", typeof(global::System.String));
            }
    
            ObjectParameter hometownProvinceIDParameter;
            if (hometownProvinceID != null)
            {
                hometownProvinceIDParameter = new ObjectParameter("HometownProvinceID", hometownProvinceID);
            }
            else
            {
                hometownProvinceIDParameter = new ObjectParameter("HometownProvinceID", typeof(global::System.String));
            }
    
            ObjectParameter hometownCountryIDParameter;
            if (hometownCountryID != null)
            {
                hometownCountryIDParameter = new ObjectParameter("HometownCountryID", hometownCountryID);
            }
            else
            {
                hometownCountryIDParameter = new ObjectParameter("HometownCountryID", typeof(global::System.String));
            }
    
            ObjectParameter primaryCSCIDParameter;
            if (primaryCSCID != null)
            {
                primaryCSCIDParameter = new ObjectParameter("PrimaryCSCID", primaryCSCID);
            }
            else
            {
                primaryCSCIDParameter = new ObjectParameter("PrimaryCSCID", typeof(global::System.String));
            }
    
            ObjectParameter secondaryCSCIDParameter;
            if (secondaryCSCID != null)
            {
                secondaryCSCIDParameter = new ObjectParameter("SecondaryCSCID", secondaryCSCID);
            }
            else
            {
                secondaryCSCIDParameter = new ObjectParameter("SecondaryCSCID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter tBDParameter;
            if (tBD.HasValue)
            {
                tBDParameter = new ObjectParameter("TBD", tBD);
            }
            else
            {
                tBDParameter = new ObjectParameter("TBD", typeof(global::System.Boolean));
            }
    
            ObjectParameter pooledParameter;
            if (pooled.HasValue)
            {
                pooledParameter = new ObjectParameter("Pooled", pooled);
            }
            else
            {
                pooledParameter = new ObjectParameter("Pooled", typeof(global::System.Boolean));
            }
    
            ObjectParameter isNewParameter;
            if (isNew.HasValue)
            {
                isNewParameter = new ObjectParameter("IsNew", isNew);
            }
            else
            {
                isNewParameter = new ObjectParameter("IsNew", typeof(global::System.Boolean));
            }
    
            ObjectParameter activeParameter;
            if (active.HasValue)
            {
                activeParameter = new ObjectParameter("Active", active);
            }
            else
            {
                activeParameter = new ObjectParameter("Active", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateResource", resourceIDParameter, resourceTypeIDParameter, resourceSpecialtyIDParameter, firstNameParameter, lastNameParameter, countryIDParameter, genderParameter, dateOfBirthParameter, mailingAddressParameter, mailingCityParameter, mailingProvinceIDParameter, mailingCountryIDParameter, mailingPostalCodeParameter, homePhoneParameter, cellPhoneParameter, eMailAddressParameter, skypeNameParameter, hometownCityParameter, hometownProvinceIDParameter, hometownCountryIDParameter, primaryCSCIDParameter, secondaryCSCIDParameter, commentsParameter, tBDParameter, pooledParameter, isNewParameter, activeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="benchmarkTypeID">No Metadata Documentation available.</param>
        /// <param name="benchmarkTierID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="nSOValue">No Metadata Documentation available.</param>
        /// <param name="oTPValue">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="active">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddBenchmarkSport(global::System.String sportID, Nullable<global::System.Int32> benchmarkTypeID, Nullable<global::System.Int32> benchmarkTierID, global::System.String yearID, Nullable<global::System.Int32> nSOValue, Nullable<global::System.Int32> oTPValue, global::System.String comments, Nullable<global::System.Boolean> active)
        {
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter benchmarkTypeIDParameter;
            if (benchmarkTypeID.HasValue)
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", benchmarkTypeID);
            }
            else
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter benchmarkTierIDParameter;
            if (benchmarkTierID.HasValue)
            {
                benchmarkTierIDParameter = new ObjectParameter("BenchmarkTierID", benchmarkTierID);
            }
            else
            {
                benchmarkTierIDParameter = new ObjectParameter("BenchmarkTierID", typeof(global::System.Int32));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter nSOValueParameter;
            if (nSOValue.HasValue)
            {
                nSOValueParameter = new ObjectParameter("NSOValue", nSOValue);
            }
            else
            {
                nSOValueParameter = new ObjectParameter("NSOValue", typeof(global::System.Int32));
            }
    
            ObjectParameter oTPValueParameter;
            if (oTPValue.HasValue)
            {
                oTPValueParameter = new ObjectParameter("OTPValue", oTPValue);
            }
            else
            {
                oTPValueParameter = new ObjectParameter("OTPValue", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter activeParameter;
            if (active.HasValue)
            {
                activeParameter = new ObjectParameter("Active", active);
            }
            else
            {
                activeParameter = new ObjectParameter("Active", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddBenchmarkSport", sportIDParameter, benchmarkTypeIDParameter, benchmarkTierIDParameter, yearIDParameter, nSOValueParameter, oTPValueParameter, commentsParameter, activeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="positionStart">No Metadata Documentation available.</param>
        /// <param name="positionEnd">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddBenchmarkTier(global::System.String sportID, global::System.String name_EN, global::System.String name_FR, Nullable<global::System.Int32> positionStart, Nullable<global::System.Int32> positionEnd, global::System.String comments)
        {
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter positionStartParameter;
            if (positionStart.HasValue)
            {
                positionStartParameter = new ObjectParameter("PositionStart", positionStart);
            }
            else
            {
                positionStartParameter = new ObjectParameter("PositionStart", typeof(global::System.Int32));
            }
    
            ObjectParameter positionEndParameter;
            if (positionEnd.HasValue)
            {
                positionEndParameter = new ObjectParameter("PositionEnd", positionEnd);
            }
            else
            {
                positionEndParameter = new ObjectParameter("PositionEnd", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddBenchmarkTier", sportIDParameter, name_ENParameter, name_FRParameter, positionStartParameter, positionEndParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="benchmarkSportID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="benchmarkTypeID">No Metadata Documentation available.</param>
        /// <param name="benchmarkTierID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="nSOValue">No Metadata Documentation available.</param>
        /// <param name="oTPValue">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="active">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateBenchmarkSport(Nullable<global::System.Int32> benchmarkSportID, global::System.String sportID, Nullable<global::System.Int32> benchmarkTypeID, Nullable<global::System.Int32> benchmarkTierID, global::System.String yearID, Nullable<global::System.Int32> nSOValue, Nullable<global::System.Int32> oTPValue, global::System.String comments, Nullable<global::System.Boolean> active)
        {
            ObjectParameter benchmarkSportIDParameter;
            if (benchmarkSportID.HasValue)
            {
                benchmarkSportIDParameter = new ObjectParameter("BenchmarkSportID", benchmarkSportID);
            }
            else
            {
                benchmarkSportIDParameter = new ObjectParameter("BenchmarkSportID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter benchmarkTypeIDParameter;
            if (benchmarkTypeID.HasValue)
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", benchmarkTypeID);
            }
            else
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter benchmarkTierIDParameter;
            if (benchmarkTierID.HasValue)
            {
                benchmarkTierIDParameter = new ObjectParameter("BenchmarkTierID", benchmarkTierID);
            }
            else
            {
                benchmarkTierIDParameter = new ObjectParameter("BenchmarkTierID", typeof(global::System.Int32));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter nSOValueParameter;
            if (nSOValue.HasValue)
            {
                nSOValueParameter = new ObjectParameter("NSOValue", nSOValue);
            }
            else
            {
                nSOValueParameter = new ObjectParameter("NSOValue", typeof(global::System.Int32));
            }
    
            ObjectParameter oTPValueParameter;
            if (oTPValue.HasValue)
            {
                oTPValueParameter = new ObjectParameter("OTPValue", oTPValue);
            }
            else
            {
                oTPValueParameter = new ObjectParameter("OTPValue", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter activeParameter;
            if (active.HasValue)
            {
                activeParameter = new ObjectParameter("Active", active);
            }
            else
            {
                activeParameter = new ObjectParameter("Active", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateBenchmarkSport", benchmarkSportIDParameter, sportIDParameter, benchmarkTypeIDParameter, benchmarkTierIDParameter, yearIDParameter, nSOValueParameter, oTPValueParameter, commentsParameter, activeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceTypeID">No Metadata Documentation available.</param>
        /// <param name="resourceClassID">No Metadata Documentation available.</param>
        /// <param name="resourceSpecialtyID">No Metadata Documentation available.</param>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="dateOfBirth">No Metadata Documentation available.</param>
        /// <param name="mailingAddress">No Metadata Documentation available.</param>
        /// <param name="mailingCity">No Metadata Documentation available.</param>
        /// <param name="mailingProvinceID">No Metadata Documentation available.</param>
        /// <param name="eMailAddress">No Metadata Documentation available.</param>
        /// <param name="hometownCity">No Metadata Documentation available.</param>
        /// <param name="hometownProvinceID">No Metadata Documentation available.</param>
        /// <param name="primaryCSCID">No Metadata Documentation available.</param>
        /// <param name="secondaryCSCID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="active">No Metadata Documentation available.</param>
        /// <param name="tBD">No Metadata Documentation available.</param>
        /// <param name="pooled">No Metadata Documentation available.</param>
        /// <param name="isNew">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddResource(global::System.String resourceTypeID, global::System.String resourceClassID, global::System.String resourceSpecialtyID, global::System.String firstName, global::System.String lastName, global::System.String countryID, global::System.String gender, Nullable<global::System.DateTime> dateOfBirth, global::System.String mailingAddress, global::System.String mailingCity, global::System.String mailingProvinceID, global::System.String eMailAddress, global::System.String hometownCity, global::System.String hometownProvinceID, global::System.String primaryCSCID, global::System.String secondaryCSCID, global::System.String comments, Nullable<global::System.Boolean> active, Nullable<global::System.Boolean> tBD, Nullable<global::System.Boolean> pooled, Nullable<global::System.Boolean> isNew)
        {
            ObjectParameter resourceTypeIDParameter;
            if (resourceTypeID != null)
            {
                resourceTypeIDParameter = new ObjectParameter("ResourceTypeID", resourceTypeID);
            }
            else
            {
                resourceTypeIDParameter = new ObjectParameter("ResourceTypeID", typeof(global::System.String));
            }
    
            ObjectParameter resourceClassIDParameter;
            if (resourceClassID != null)
            {
                resourceClassIDParameter = new ObjectParameter("ResourceClassID", resourceClassID);
            }
            else
            {
                resourceClassIDParameter = new ObjectParameter("ResourceClassID", typeof(global::System.String));
            }
    
            ObjectParameter resourceSpecialtyIDParameter;
            if (resourceSpecialtyID != null)
            {
                resourceSpecialtyIDParameter = new ObjectParameter("ResourceSpecialtyID", resourceSpecialtyID);
            }
            else
            {
                resourceSpecialtyIDParameter = new ObjectParameter("ResourceSpecialtyID", typeof(global::System.String));
            }
    
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("LastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("LastName", typeof(global::System.String));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID != null)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("Gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("Gender", typeof(global::System.String));
            }
    
            ObjectParameter dateOfBirthParameter;
            if (dateOfBirth.HasValue)
            {
                dateOfBirthParameter = new ObjectParameter("DateOfBirth", dateOfBirth);
            }
            else
            {
                dateOfBirthParameter = new ObjectParameter("DateOfBirth", typeof(global::System.DateTime));
            }
    
            ObjectParameter mailingAddressParameter;
            if (mailingAddress != null)
            {
                mailingAddressParameter = new ObjectParameter("MailingAddress", mailingAddress);
            }
            else
            {
                mailingAddressParameter = new ObjectParameter("MailingAddress", typeof(global::System.String));
            }
    
            ObjectParameter mailingCityParameter;
            if (mailingCity != null)
            {
                mailingCityParameter = new ObjectParameter("MailingCity", mailingCity);
            }
            else
            {
                mailingCityParameter = new ObjectParameter("MailingCity", typeof(global::System.String));
            }
    
            ObjectParameter mailingProvinceIDParameter;
            if (mailingProvinceID != null)
            {
                mailingProvinceIDParameter = new ObjectParameter("MailingProvinceID", mailingProvinceID);
            }
            else
            {
                mailingProvinceIDParameter = new ObjectParameter("MailingProvinceID", typeof(global::System.String));
            }
    
            ObjectParameter eMailAddressParameter;
            if (eMailAddress != null)
            {
                eMailAddressParameter = new ObjectParameter("EMailAddress", eMailAddress);
            }
            else
            {
                eMailAddressParameter = new ObjectParameter("EMailAddress", typeof(global::System.String));
            }
    
            ObjectParameter hometownCityParameter;
            if (hometownCity != null)
            {
                hometownCityParameter = new ObjectParameter("HometownCity", hometownCity);
            }
            else
            {
                hometownCityParameter = new ObjectParameter("HometownCity", typeof(global::System.String));
            }
    
            ObjectParameter hometownProvinceIDParameter;
            if (hometownProvinceID != null)
            {
                hometownProvinceIDParameter = new ObjectParameter("HometownProvinceID", hometownProvinceID);
            }
            else
            {
                hometownProvinceIDParameter = new ObjectParameter("HometownProvinceID", typeof(global::System.String));
            }
    
            ObjectParameter primaryCSCIDParameter;
            if (primaryCSCID != null)
            {
                primaryCSCIDParameter = new ObjectParameter("PrimaryCSCID", primaryCSCID);
            }
            else
            {
                primaryCSCIDParameter = new ObjectParameter("PrimaryCSCID", typeof(global::System.String));
            }
    
            ObjectParameter secondaryCSCIDParameter;
            if (secondaryCSCID != null)
            {
                secondaryCSCIDParameter = new ObjectParameter("SecondaryCSCID", secondaryCSCID);
            }
            else
            {
                secondaryCSCIDParameter = new ObjectParameter("SecondaryCSCID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter activeParameter;
            if (active.HasValue)
            {
                activeParameter = new ObjectParameter("Active", active);
            }
            else
            {
                activeParameter = new ObjectParameter("Active", typeof(global::System.Boolean));
            }
    
            ObjectParameter tBDParameter;
            if (tBD.HasValue)
            {
                tBDParameter = new ObjectParameter("TBD", tBD);
            }
            else
            {
                tBDParameter = new ObjectParameter("TBD", typeof(global::System.Boolean));
            }
    
            ObjectParameter pooledParameter;
            if (pooled.HasValue)
            {
                pooledParameter = new ObjectParameter("Pooled", pooled);
            }
            else
            {
                pooledParameter = new ObjectParameter("Pooled", typeof(global::System.Boolean));
            }
    
            ObjectParameter isNewParameter;
            if (isNew.HasValue)
            {
                isNewParameter = new ObjectParameter("IsNew", isNew);
            }
            else
            {
                isNewParameter = new ObjectParameter("IsNew", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddResource", resourceTypeIDParameter, resourceClassIDParameter, resourceSpecialtyIDParameter, firstNameParameter, lastNameParameter, countryIDParameter, genderParameter, dateOfBirthParameter, mailingAddressParameter, mailingCityParameter, mailingProvinceIDParameter, eMailAddressParameter, hometownCityParameter, hometownProvinceIDParameter, primaryCSCIDParameter, secondaryCSCIDParameter, commentsParameter, activeParameter, tBDParameter, pooledParameter, isNewParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="affiliateTypeID">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="yearFromID">No Metadata Documentation available.</param>
        /// <param name="yearToID">No Metadata Documentation available.</param>
        /// <param name="affiliateName">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="affiliateContact">No Metadata Documentation available.</param>
        /// <param name="affiliateEmail">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddResourceAffiliate(global::System.String affiliateTypeID, Nullable<global::System.Int32> resourceID, global::System.String yearFromID, global::System.String yearToID, global::System.String affiliateName, global::System.String description, global::System.String affiliateContact, global::System.String affiliateEmail, global::System.String comments)
        {
            ObjectParameter affiliateTypeIDParameter;
            if (affiliateTypeID != null)
            {
                affiliateTypeIDParameter = new ObjectParameter("AffiliateTypeID", affiliateTypeID);
            }
            else
            {
                affiliateTypeIDParameter = new ObjectParameter("AffiliateTypeID", typeof(global::System.String));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter yearFromIDParameter;
            if (yearFromID != null)
            {
                yearFromIDParameter = new ObjectParameter("YearFromID", yearFromID);
            }
            else
            {
                yearFromIDParameter = new ObjectParameter("YearFromID", typeof(global::System.String));
            }
    
            ObjectParameter yearToIDParameter;
            if (yearToID != null)
            {
                yearToIDParameter = new ObjectParameter("YearToID", yearToID);
            }
            else
            {
                yearToIDParameter = new ObjectParameter("YearToID", typeof(global::System.String));
            }
    
            ObjectParameter affiliateNameParameter;
            if (affiliateName != null)
            {
                affiliateNameParameter = new ObjectParameter("AffiliateName", affiliateName);
            }
            else
            {
                affiliateNameParameter = new ObjectParameter("AffiliateName", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter affiliateContactParameter;
            if (affiliateContact != null)
            {
                affiliateContactParameter = new ObjectParameter("AffiliateContact", affiliateContact);
            }
            else
            {
                affiliateContactParameter = new ObjectParameter("AffiliateContact", typeof(global::System.String));
            }
    
            ObjectParameter affiliateEmailParameter;
            if (affiliateEmail != null)
            {
                affiliateEmailParameter = new ObjectParameter("AffiliateEmail", affiliateEmail);
            }
            else
            {
                affiliateEmailParameter = new ObjectParameter("AffiliateEmail", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddResourceAffiliate", affiliateTypeIDParameter, resourceIDParameter, yearFromIDParameter, yearToIDParameter, affiliateNameParameter, descriptionParameter, affiliateContactParameter, affiliateEmailParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingSummaryID">No Metadata Documentation available.</param>
        /// <param name="fundingBlockTypeID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddFundingBlock(Nullable<global::System.Int32> fundingSummaryID, global::System.String fundingBlockTypeID, global::System.String comments)
        {
            ObjectParameter fundingSummaryIDParameter;
            if (fundingSummaryID.HasValue)
            {
                fundingSummaryIDParameter = new ObjectParameter("FundingSummaryID", fundingSummaryID);
            }
            else
            {
                fundingSummaryIDParameter = new ObjectParameter("FundingSummaryID", typeof(global::System.Int32));
            }
    
            ObjectParameter fundingBlockTypeIDParameter;
            if (fundingBlockTypeID != null)
            {
                fundingBlockTypeIDParameter = new ObjectParameter("FundingBlockTypeID", fundingBlockTypeID);
            }
            else
            {
                fundingBlockTypeIDParameter = new ObjectParameter("FundingBlockTypeID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddFundingBlock", fundingSummaryIDParameter, fundingBlockTypeIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingBlockID">No Metadata Documentation available.</param>
        /// <param name="fundingCategoryTypeID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddFundingCategory(Nullable<global::System.Int32> fundingBlockID, global::System.String fundingCategoryTypeID, global::System.String comments)
        {
            ObjectParameter fundingBlockIDParameter;
            if (fundingBlockID.HasValue)
            {
                fundingBlockIDParameter = new ObjectParameter("FundingBlockID", fundingBlockID);
            }
            else
            {
                fundingBlockIDParameter = new ObjectParameter("FundingBlockID", typeof(global::System.Int32));
            }
    
            ObjectParameter fundingCategoryTypeIDParameter;
            if (fundingCategoryTypeID != null)
            {
                fundingCategoryTypeIDParameter = new ObjectParameter("FundingCategoryTypeID", fundingCategoryTypeID);
            }
            else
            {
                fundingCategoryTypeIDParameter = new ObjectParameter("FundingCategoryTypeID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddFundingCategory", fundingBlockIDParameter, fundingCategoryTypeIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingCategoryID">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="organizationID">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="percentCommitted">No Metadata Documentation available.</param>
        /// <param name="fundingPriority">No Metadata Documentation available.</param>
        /// <param name="requestTotal">No Metadata Documentation available.</param>
        /// <param name="actualTotal">No Metadata Documentation available.</param>
        /// <param name="requestNSO">No Metadata Documentation available.</param>
        /// <param name="requestSC">No Metadata Documentation available.</param>
        /// <param name="requestOTP">No Metadata Documentation available.</param>
        /// <param name="recommendHpa">No Metadata Documentation available.</param>
        /// <param name="recommendOtp">No Metadata Documentation available.</param>
        /// <param name="recommendTotal">No Metadata Documentation available.</param>
        /// <param name="recommendSC">No Metadata Documentation available.</param>
        /// <param name="recommendCOC">No Metadata Documentation available.</param>
        /// <param name="fundsTotal">No Metadata Documentation available.</param>
        /// <param name="fundsSC">No Metadata Documentation available.</param>
        /// <param name="fundsCOC">No Metadata Documentation available.</param>
        /// <param name="revisionTotal">No Metadata Documentation available.</param>
        /// <param name="revisionSC">No Metadata Documentation available.</param>
        /// <param name="revisionCOC">No Metadata Documentation available.</param>
        /// <param name="recurring">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddFundingDetail(Nullable<global::System.Int32> fundingCategoryID, global::System.String description, global::System.String organizationID, Nullable<global::System.Int32> resourceID, Nullable<global::System.Decimal> percentCommitted, global::System.String fundingPriority, Nullable<global::System.Decimal> requestTotal, Nullable<global::System.Decimal> actualTotal, Nullable<global::System.Decimal> requestNSO, Nullable<global::System.Decimal> requestSC, Nullable<global::System.Decimal> requestOTP, Nullable<global::System.Decimal> recommendHpa, Nullable<global::System.Decimal> recommendOtp, Nullable<global::System.Decimal> recommendTotal, Nullable<global::System.Decimal> recommendSC, Nullable<global::System.Decimal> recommendCOC, Nullable<global::System.Decimal> fundsTotal, Nullable<global::System.Decimal> fundsSC, Nullable<global::System.Decimal> fundsCOC, Nullable<global::System.Decimal> revisionTotal, Nullable<global::System.Decimal> revisionSC, Nullable<global::System.Decimal> revisionCOC, Nullable<global::System.Boolean> recurring, global::System.String comments)
        {
            ObjectParameter fundingCategoryIDParameter;
            if (fundingCategoryID.HasValue)
            {
                fundingCategoryIDParameter = new ObjectParameter("FundingCategoryID", fundingCategoryID);
            }
            else
            {
                fundingCategoryIDParameter = new ObjectParameter("FundingCategoryID", typeof(global::System.Int32));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter organizationIDParameter;
            if (organizationID != null)
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", organizationID);
            }
            else
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", typeof(global::System.String));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter percentCommittedParameter;
            if (percentCommitted.HasValue)
            {
                percentCommittedParameter = new ObjectParameter("PercentCommitted", percentCommitted);
            }
            else
            {
                percentCommittedParameter = new ObjectParameter("PercentCommitted", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundingPriorityParameter;
            if (fundingPriority != null)
            {
                fundingPriorityParameter = new ObjectParameter("FundingPriority", fundingPriority);
            }
            else
            {
                fundingPriorityParameter = new ObjectParameter("FundingPriority", typeof(global::System.String));
            }
    
            ObjectParameter requestTotalParameter;
            if (requestTotal.HasValue)
            {
                requestTotalParameter = new ObjectParameter("RequestTotal", requestTotal);
            }
            else
            {
                requestTotalParameter = new ObjectParameter("RequestTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter actualTotalParameter;
            if (actualTotal.HasValue)
            {
                actualTotalParameter = new ObjectParameter("ActualTotal", actualTotal);
            }
            else
            {
                actualTotalParameter = new ObjectParameter("ActualTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter requestNSOParameter;
            if (requestNSO.HasValue)
            {
                requestNSOParameter = new ObjectParameter("RequestNSO", requestNSO);
            }
            else
            {
                requestNSOParameter = new ObjectParameter("RequestNSO", typeof(global::System.Decimal));
            }
    
            ObjectParameter requestSCParameter;
            if (requestSC.HasValue)
            {
                requestSCParameter = new ObjectParameter("RequestSC", requestSC);
            }
            else
            {
                requestSCParameter = new ObjectParameter("RequestSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter requestOTPParameter;
            if (requestOTP.HasValue)
            {
                requestOTPParameter = new ObjectParameter("RequestOTP", requestOTP);
            }
            else
            {
                requestOTPParameter = new ObjectParameter("RequestOTP", typeof(global::System.Decimal));
            }
    
            ObjectParameter recommendHpaParameter;
            if (recommendHpa.HasValue)
            {
                recommendHpaParameter = new ObjectParameter("RecommendHpa", recommendHpa);
            }
            else
            {
                recommendHpaParameter = new ObjectParameter("RecommendHpa", typeof(global::System.Decimal));
            }
    
            ObjectParameter recommendOtpParameter;
            if (recommendOtp.HasValue)
            {
                recommendOtpParameter = new ObjectParameter("RecommendOtp", recommendOtp);
            }
            else
            {
                recommendOtpParameter = new ObjectParameter("RecommendOtp", typeof(global::System.Decimal));
            }
    
            ObjectParameter recommendTotalParameter;
            if (recommendTotal.HasValue)
            {
                recommendTotalParameter = new ObjectParameter("RecommendTotal", recommendTotal);
            }
            else
            {
                recommendTotalParameter = new ObjectParameter("RecommendTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter recommendSCParameter;
            if (recommendSC.HasValue)
            {
                recommendSCParameter = new ObjectParameter("RecommendSC", recommendSC);
            }
            else
            {
                recommendSCParameter = new ObjectParameter("RecommendSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter recommendCOCParameter;
            if (recommendCOC.HasValue)
            {
                recommendCOCParameter = new ObjectParameter("RecommendCOC", recommendCOC);
            }
            else
            {
                recommendCOCParameter = new ObjectParameter("RecommendCOC", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundsTotalParameter;
            if (fundsTotal.HasValue)
            {
                fundsTotalParameter = new ObjectParameter("FundsTotal", fundsTotal);
            }
            else
            {
                fundsTotalParameter = new ObjectParameter("FundsTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundsSCParameter;
            if (fundsSC.HasValue)
            {
                fundsSCParameter = new ObjectParameter("FundsSC", fundsSC);
            }
            else
            {
                fundsSCParameter = new ObjectParameter("FundsSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundsCOCParameter;
            if (fundsCOC.HasValue)
            {
                fundsCOCParameter = new ObjectParameter("FundsCOC", fundsCOC);
            }
            else
            {
                fundsCOCParameter = new ObjectParameter("FundsCOC", typeof(global::System.Decimal));
            }
    
            ObjectParameter revisionTotalParameter;
            if (revisionTotal.HasValue)
            {
                revisionTotalParameter = new ObjectParameter("RevisionTotal", revisionTotal);
            }
            else
            {
                revisionTotalParameter = new ObjectParameter("RevisionTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter revisionSCParameter;
            if (revisionSC.HasValue)
            {
                revisionSCParameter = new ObjectParameter("RevisionSC", revisionSC);
            }
            else
            {
                revisionSCParameter = new ObjectParameter("RevisionSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter revisionCOCParameter;
            if (revisionCOC.HasValue)
            {
                revisionCOCParameter = new ObjectParameter("RevisionCOC", revisionCOC);
            }
            else
            {
                revisionCOCParameter = new ObjectParameter("RevisionCOC", typeof(global::System.Decimal));
            }
    
            ObjectParameter recurringParameter;
            if (recurring.HasValue)
            {
                recurringParameter = new ObjectParameter("Recurring", recurring);
            }
            else
            {
                recurringParameter = new ObjectParameter("Recurring", typeof(global::System.Boolean));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddFundingDetail", fundingCategoryIDParameter, descriptionParameter, organizationIDParameter, resourceIDParameter, percentCommittedParameter, fundingPriorityParameter, requestTotalParameter, actualTotalParameter, requestNSOParameter, requestSCParameter, requestOTPParameter, recommendHpaParameter, recommendOtpParameter, recommendTotalParameter, recommendSCParameter, recommendCOCParameter, fundsTotalParameter, fundsSCParameter, fundsCOCParameter, revisionTotalParameter, revisionSCParameter, revisionCOCParameter, recurringParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="organizationTypeID">No Metadata Documentation available.</param>
        /// <param name="organizationID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="fundingStatus">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="fundingSC">No Metadata Documentation available.</param>
        /// <param name="fundingCOC">No Metadata Documentation available.</param>
        /// <param name="fundingOther">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddFundingSummary(global::System.String organizationTypeID, global::System.String organizationID, global::System.String sportID, global::System.String fundingStatus, global::System.String comments, global::System.String yearID, Nullable<global::System.Decimal> fundingSC, Nullable<global::System.Decimal> fundingCOC, Nullable<global::System.Decimal> fundingOther)
        {
            ObjectParameter organizationTypeIDParameter;
            if (organizationTypeID != null)
            {
                organizationTypeIDParameter = new ObjectParameter("OrganizationTypeID", organizationTypeID);
            }
            else
            {
                organizationTypeIDParameter = new ObjectParameter("OrganizationTypeID", typeof(global::System.String));
            }
    
            ObjectParameter organizationIDParameter;
            if (organizationID != null)
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", organizationID);
            }
            else
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", typeof(global::System.String));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter fundingStatusParameter;
            if (fundingStatus != null)
            {
                fundingStatusParameter = new ObjectParameter("FundingStatus", fundingStatus);
            }
            else
            {
                fundingStatusParameter = new ObjectParameter("FundingStatus", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter fundingSCParameter;
            if (fundingSC.HasValue)
            {
                fundingSCParameter = new ObjectParameter("FundingSC", fundingSC);
            }
            else
            {
                fundingSCParameter = new ObjectParameter("FundingSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundingCOCParameter;
            if (fundingCOC.HasValue)
            {
                fundingCOCParameter = new ObjectParameter("FundingCOC", fundingCOC);
            }
            else
            {
                fundingCOCParameter = new ObjectParameter("FundingCOC", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundingOtherParameter;
            if (fundingOther.HasValue)
            {
                fundingOtherParameter = new ObjectParameter("FundingOther", fundingOther);
            }
            else
            {
                fundingOtherParameter = new ObjectParameter("FundingOther", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddFundingSummary", organizationTypeIDParameter, organizationIDParameter, sportIDParameter, fundingStatusParameter, commentsParameter, yearIDParameter, fundingSCParameter, fundingCOCParameter, fundingOtherParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingBlockID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateFundingBlock(Nullable<global::System.Int32> fundingBlockID, global::System.String comments)
        {
            ObjectParameter fundingBlockIDParameter;
            if (fundingBlockID.HasValue)
            {
                fundingBlockIDParameter = new ObjectParameter("FundingBlockID", fundingBlockID);
            }
            else
            {
                fundingBlockIDParameter = new ObjectParameter("FundingBlockID", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateFundingBlock", fundingBlockIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingCategoryID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateFundingCategory(Nullable<global::System.Int32> fundingCategoryID, global::System.String comments)
        {
            ObjectParameter fundingCategoryIDParameter;
            if (fundingCategoryID.HasValue)
            {
                fundingCategoryIDParameter = new ObjectParameter("FundingCategoryID", fundingCategoryID);
            }
            else
            {
                fundingCategoryIDParameter = new ObjectParameter("FundingCategoryID", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateFundingCategory", fundingCategoryIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingDetailID">No Metadata Documentation available.</param>
        /// <param name="fundingCategoryID">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="organizationID">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="percentCommitted">No Metadata Documentation available.</param>
        /// <param name="fundingPriority">No Metadata Documentation available.</param>
        /// <param name="requestTotal">No Metadata Documentation available.</param>
        /// <param name="actualTotal">No Metadata Documentation available.</param>
        /// <param name="requestNSO">No Metadata Documentation available.</param>
        /// <param name="requestSC">No Metadata Documentation available.</param>
        /// <param name="requestOTP">No Metadata Documentation available.</param>
        /// <param name="recommendHpa">No Metadata Documentation available.</param>
        /// <param name="recommendOtp">No Metadata Documentation available.</param>
        /// <param name="recommendTotal">No Metadata Documentation available.</param>
        /// <param name="recommendSC">No Metadata Documentation available.</param>
        /// <param name="recommendCOC">No Metadata Documentation available.</param>
        /// <param name="fundsTotal">No Metadata Documentation available.</param>
        /// <param name="fundsSC">No Metadata Documentation available.</param>
        /// <param name="fundsCOC">No Metadata Documentation available.</param>
        /// <param name="revisionTotal">No Metadata Documentation available.</param>
        /// <param name="revisionSC">No Metadata Documentation available.</param>
        /// <param name="revisionCOC">No Metadata Documentation available.</param>
        /// <param name="recurring">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateFundingDetail(Nullable<global::System.Int32> fundingDetailID, Nullable<global::System.Int32> fundingCategoryID, global::System.String description, global::System.String organizationID, Nullable<global::System.Int32> resourceID, Nullable<global::System.Decimal> percentCommitted, global::System.String fundingPriority, Nullable<global::System.Decimal> requestTotal, Nullable<global::System.Decimal> actualTotal, Nullable<global::System.Decimal> requestNSO, Nullable<global::System.Decimal> requestSC, Nullable<global::System.Decimal> requestOTP, Nullable<global::System.Decimal> recommendHpa, Nullable<global::System.Decimal> recommendOtp, Nullable<global::System.Decimal> recommendTotal, Nullable<global::System.Decimal> recommendSC, Nullable<global::System.Decimal> recommendCOC, Nullable<global::System.Decimal> fundsTotal, Nullable<global::System.Decimal> fundsSC, Nullable<global::System.Decimal> fundsCOC, Nullable<global::System.Decimal> revisionTotal, Nullable<global::System.Decimal> revisionSC, Nullable<global::System.Decimal> revisionCOC, Nullable<global::System.Boolean> recurring, global::System.String comments)
        {
            ObjectParameter fundingDetailIDParameter;
            if (fundingDetailID.HasValue)
            {
                fundingDetailIDParameter = new ObjectParameter("FundingDetailID", fundingDetailID);
            }
            else
            {
                fundingDetailIDParameter = new ObjectParameter("FundingDetailID", typeof(global::System.Int32));
            }
    
            ObjectParameter fundingCategoryIDParameter;
            if (fundingCategoryID.HasValue)
            {
                fundingCategoryIDParameter = new ObjectParameter("FundingCategoryID", fundingCategoryID);
            }
            else
            {
                fundingCategoryIDParameter = new ObjectParameter("FundingCategoryID", typeof(global::System.Int32));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter organizationIDParameter;
            if (organizationID != null)
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", organizationID);
            }
            else
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", typeof(global::System.String));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter percentCommittedParameter;
            if (percentCommitted.HasValue)
            {
                percentCommittedParameter = new ObjectParameter("PercentCommitted", percentCommitted);
            }
            else
            {
                percentCommittedParameter = new ObjectParameter("PercentCommitted", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundingPriorityParameter;
            if (fundingPriority != null)
            {
                fundingPriorityParameter = new ObjectParameter("FundingPriority", fundingPriority);
            }
            else
            {
                fundingPriorityParameter = new ObjectParameter("FundingPriority", typeof(global::System.String));
            }
    
            ObjectParameter requestTotalParameter;
            if (requestTotal.HasValue)
            {
                requestTotalParameter = new ObjectParameter("RequestTotal", requestTotal);
            }
            else
            {
                requestTotalParameter = new ObjectParameter("RequestTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter actualTotalParameter;
            if (actualTotal.HasValue)
            {
                actualTotalParameter = new ObjectParameter("ActualTotal", actualTotal);
            }
            else
            {
                actualTotalParameter = new ObjectParameter("ActualTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter requestNSOParameter;
            if (requestNSO.HasValue)
            {
                requestNSOParameter = new ObjectParameter("RequestNSO", requestNSO);
            }
            else
            {
                requestNSOParameter = new ObjectParameter("RequestNSO", typeof(global::System.Decimal));
            }
    
            ObjectParameter requestSCParameter;
            if (requestSC.HasValue)
            {
                requestSCParameter = new ObjectParameter("RequestSC", requestSC);
            }
            else
            {
                requestSCParameter = new ObjectParameter("RequestSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter requestOTPParameter;
            if (requestOTP.HasValue)
            {
                requestOTPParameter = new ObjectParameter("RequestOTP", requestOTP);
            }
            else
            {
                requestOTPParameter = new ObjectParameter("RequestOTP", typeof(global::System.Decimal));
            }
    
            ObjectParameter recommendHpaParameter;
            if (recommendHpa.HasValue)
            {
                recommendHpaParameter = new ObjectParameter("RecommendHpa", recommendHpa);
            }
            else
            {
                recommendHpaParameter = new ObjectParameter("RecommendHpa", typeof(global::System.Decimal));
            }
    
            ObjectParameter recommendOtpParameter;
            if (recommendOtp.HasValue)
            {
                recommendOtpParameter = new ObjectParameter("RecommendOtp", recommendOtp);
            }
            else
            {
                recommendOtpParameter = new ObjectParameter("RecommendOtp", typeof(global::System.Decimal));
            }
    
            ObjectParameter recommendTotalParameter;
            if (recommendTotal.HasValue)
            {
                recommendTotalParameter = new ObjectParameter("RecommendTotal", recommendTotal);
            }
            else
            {
                recommendTotalParameter = new ObjectParameter("RecommendTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter recommendSCParameter;
            if (recommendSC.HasValue)
            {
                recommendSCParameter = new ObjectParameter("RecommendSC", recommendSC);
            }
            else
            {
                recommendSCParameter = new ObjectParameter("RecommendSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter recommendCOCParameter;
            if (recommendCOC.HasValue)
            {
                recommendCOCParameter = new ObjectParameter("RecommendCOC", recommendCOC);
            }
            else
            {
                recommendCOCParameter = new ObjectParameter("RecommendCOC", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundsTotalParameter;
            if (fundsTotal.HasValue)
            {
                fundsTotalParameter = new ObjectParameter("FundsTotal", fundsTotal);
            }
            else
            {
                fundsTotalParameter = new ObjectParameter("FundsTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundsSCParameter;
            if (fundsSC.HasValue)
            {
                fundsSCParameter = new ObjectParameter("FundsSC", fundsSC);
            }
            else
            {
                fundsSCParameter = new ObjectParameter("FundsSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundsCOCParameter;
            if (fundsCOC.HasValue)
            {
                fundsCOCParameter = new ObjectParameter("FundsCOC", fundsCOC);
            }
            else
            {
                fundsCOCParameter = new ObjectParameter("FundsCOC", typeof(global::System.Decimal));
            }
    
            ObjectParameter revisionTotalParameter;
            if (revisionTotal.HasValue)
            {
                revisionTotalParameter = new ObjectParameter("RevisionTotal", revisionTotal);
            }
            else
            {
                revisionTotalParameter = new ObjectParameter("RevisionTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter revisionSCParameter;
            if (revisionSC.HasValue)
            {
                revisionSCParameter = new ObjectParameter("RevisionSC", revisionSC);
            }
            else
            {
                revisionSCParameter = new ObjectParameter("RevisionSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter revisionCOCParameter;
            if (revisionCOC.HasValue)
            {
                revisionCOCParameter = new ObjectParameter("RevisionCOC", revisionCOC);
            }
            else
            {
                revisionCOCParameter = new ObjectParameter("RevisionCOC", typeof(global::System.Decimal));
            }
    
            ObjectParameter recurringParameter;
            if (recurring.HasValue)
            {
                recurringParameter = new ObjectParameter("Recurring", recurring);
            }
            else
            {
                recurringParameter = new ObjectParameter("Recurring", typeof(global::System.Boolean));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateFundingDetail", fundingDetailIDParameter, fundingCategoryIDParameter, descriptionParameter, organizationIDParameter, resourceIDParameter, percentCommittedParameter, fundingPriorityParameter, requestTotalParameter, actualTotalParameter, requestNSOParameter, requestSCParameter, requestOTPParameter, recommendHpaParameter, recommendOtpParameter, recommendTotalParameter, recommendSCParameter, recommendCOCParameter, fundsTotalParameter, fundsSCParameter, fundsCOCParameter, revisionTotalParameter, revisionSCParameter, revisionCOCParameter, recurringParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingSummaryID">No Metadata Documentation available.</param>
        /// <param name="fundingStatus">No Metadata Documentation available.</param>
        /// <param name="fundingSC">No Metadata Documentation available.</param>
        /// <param name="fundingCOC">No Metadata Documentation available.</param>
        /// <param name="fundingOther">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateFundingSummary(Nullable<global::System.Int32> fundingSummaryID, global::System.String fundingStatus, Nullable<global::System.Decimal> fundingSC, Nullable<global::System.Decimal> fundingCOC, Nullable<global::System.Decimal> fundingOther)
        {
            ObjectParameter fundingSummaryIDParameter;
            if (fundingSummaryID.HasValue)
            {
                fundingSummaryIDParameter = new ObjectParameter("FundingSummaryID", fundingSummaryID);
            }
            else
            {
                fundingSummaryIDParameter = new ObjectParameter("FundingSummaryID", typeof(global::System.Int32));
            }
    
            ObjectParameter fundingStatusParameter;
            if (fundingStatus != null)
            {
                fundingStatusParameter = new ObjectParameter("FundingStatus", fundingStatus);
            }
            else
            {
                fundingStatusParameter = new ObjectParameter("FundingStatus", typeof(global::System.String));
            }
    
            ObjectParameter fundingSCParameter;
            if (fundingSC.HasValue)
            {
                fundingSCParameter = new ObjectParameter("FundingSC", fundingSC);
            }
            else
            {
                fundingSCParameter = new ObjectParameter("FundingSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundingCOCParameter;
            if (fundingCOC.HasValue)
            {
                fundingCOCParameter = new ObjectParameter("FundingCOC", fundingCOC);
            }
            else
            {
                fundingCOCParameter = new ObjectParameter("FundingCOC", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundingOtherParameter;
            if (fundingOther.HasValue)
            {
                fundingOtherParameter = new ObjectParameter("FundingOther", fundingOther);
            }
            else
            {
                fundingOtherParameter = new ObjectParameter("FundingOther", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateFundingSummary", fundingSummaryIDParameter, fundingStatusParameter, fundingSCParameter, fundingCOCParameter, fundingOtherParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceAffiliateID">No Metadata Documentation available.</param>
        /// <param name="affiliateTypeID">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="yearFromID">No Metadata Documentation available.</param>
        /// <param name="yearToID">No Metadata Documentation available.</param>
        /// <param name="affiliateName">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="affiliateContact">No Metadata Documentation available.</param>
        /// <param name="affiliateEmail">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateResourceAffiliate(Nullable<global::System.Int32> resourceAffiliateID, global::System.String affiliateTypeID, Nullable<global::System.Int32> resourceID, global::System.String yearFromID, global::System.String yearToID, global::System.String affiliateName, global::System.String description, global::System.String affiliateContact, global::System.String affiliateEmail, global::System.String comments)
        {
            ObjectParameter resourceAffiliateIDParameter;
            if (resourceAffiliateID.HasValue)
            {
                resourceAffiliateIDParameter = new ObjectParameter("ResourceAffiliateID", resourceAffiliateID);
            }
            else
            {
                resourceAffiliateIDParameter = new ObjectParameter("ResourceAffiliateID", typeof(global::System.Int32));
            }
    
            ObjectParameter affiliateTypeIDParameter;
            if (affiliateTypeID != null)
            {
                affiliateTypeIDParameter = new ObjectParameter("AffiliateTypeID", affiliateTypeID);
            }
            else
            {
                affiliateTypeIDParameter = new ObjectParameter("AffiliateTypeID", typeof(global::System.String));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter yearFromIDParameter;
            if (yearFromID != null)
            {
                yearFromIDParameter = new ObjectParameter("YearFromID", yearFromID);
            }
            else
            {
                yearFromIDParameter = new ObjectParameter("YearFromID", typeof(global::System.String));
            }
    
            ObjectParameter yearToIDParameter;
            if (yearToID != null)
            {
                yearToIDParameter = new ObjectParameter("YearToID", yearToID);
            }
            else
            {
                yearToIDParameter = new ObjectParameter("YearToID", typeof(global::System.String));
            }
    
            ObjectParameter affiliateNameParameter;
            if (affiliateName != null)
            {
                affiliateNameParameter = new ObjectParameter("AffiliateName", affiliateName);
            }
            else
            {
                affiliateNameParameter = new ObjectParameter("AffiliateName", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter affiliateContactParameter;
            if (affiliateContact != null)
            {
                affiliateContactParameter = new ObjectParameter("AffiliateContact", affiliateContact);
            }
            else
            {
                affiliateContactParameter = new ObjectParameter("AffiliateContact", typeof(global::System.String));
            }
    
            ObjectParameter affiliateEmailParameter;
            if (affiliateEmail != null)
            {
                affiliateEmailParameter = new ObjectParameter("AffiliateEmail", affiliateEmail);
            }
            else
            {
                affiliateEmailParameter = new ObjectParameter("AffiliateEmail", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateResourceAffiliate", resourceAffiliateIDParameter, affiliateTypeIDParameter, resourceIDParameter, yearFromIDParameter, yearToIDParameter, affiliateNameParameter, descriptionParameter, affiliateContactParameter, affiliateEmailParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="directAthleteSupportID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="supportName">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="supportContact">No Metadata Documentation available.</param>
        /// <param name="supportEmail">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddResourceDirectAthleteSupport(Nullable<global::System.Int32> resourceID, global::System.String directAthleteSupportID, global::System.String yearID, global::System.String supportName, global::System.String description, global::System.String supportContact, global::System.String supportEmail, Nullable<global::System.Decimal> amount, global::System.String comments)
        {
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter directAthleteSupportIDParameter;
            if (directAthleteSupportID != null)
            {
                directAthleteSupportIDParameter = new ObjectParameter("DirectAthleteSupportID", directAthleteSupportID);
            }
            else
            {
                directAthleteSupportIDParameter = new ObjectParameter("DirectAthleteSupportID", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter supportNameParameter;
            if (supportName != null)
            {
                supportNameParameter = new ObjectParameter("SupportName", supportName);
            }
            else
            {
                supportNameParameter = new ObjectParameter("SupportName", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter supportContactParameter;
            if (supportContact != null)
            {
                supportContactParameter = new ObjectParameter("SupportContact", supportContact);
            }
            else
            {
                supportContactParameter = new ObjectParameter("SupportContact", typeof(global::System.String));
            }
    
            ObjectParameter supportEmailParameter;
            if (supportEmail != null)
            {
                supportEmailParameter = new ObjectParameter("SupportEmail", supportEmail);
            }
            else
            {
                supportEmailParameter = new ObjectParameter("SupportEmail", typeof(global::System.String));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddResourceDirectAthleteSupport", resourceIDParameter, directAthleteSupportIDParameter, yearIDParameter, supportNameParameter, descriptionParameter, supportContactParameter, supportEmailParameter, amountParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceDirectAthleteSupportID">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="directAthleteSupportID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="supportName">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="supportContact">No Metadata Documentation available.</param>
        /// <param name="supportEmail">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateResourceDirectAthleteSupport(Nullable<global::System.Int32> resourceDirectAthleteSupportID, Nullable<global::System.Int32> resourceID, global::System.String directAthleteSupportID, global::System.String yearID, global::System.String supportName, global::System.String description, global::System.String supportContact, global::System.String supportEmail, Nullable<global::System.Decimal> amount, global::System.String comments)
        {
            ObjectParameter resourceDirectAthleteSupportIDParameter;
            if (resourceDirectAthleteSupportID.HasValue)
            {
                resourceDirectAthleteSupportIDParameter = new ObjectParameter("ResourceDirectAthleteSupportID", resourceDirectAthleteSupportID);
            }
            else
            {
                resourceDirectAthleteSupportIDParameter = new ObjectParameter("ResourceDirectAthleteSupportID", typeof(global::System.Int32));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter directAthleteSupportIDParameter;
            if (directAthleteSupportID != null)
            {
                directAthleteSupportIDParameter = new ObjectParameter("DirectAthleteSupportID", directAthleteSupportID);
            }
            else
            {
                directAthleteSupportIDParameter = new ObjectParameter("DirectAthleteSupportID", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter supportNameParameter;
            if (supportName != null)
            {
                supportNameParameter = new ObjectParameter("SupportName", supportName);
            }
            else
            {
                supportNameParameter = new ObjectParameter("SupportName", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter supportContactParameter;
            if (supportContact != null)
            {
                supportContactParameter = new ObjectParameter("SupportContact", supportContact);
            }
            else
            {
                supportContactParameter = new ObjectParameter("SupportContact", typeof(global::System.String));
            }
    
            ObjectParameter supportEmailParameter;
            if (supportEmail != null)
            {
                supportEmailParameter = new ObjectParameter("SupportEmail", supportEmail);
            }
            else
            {
                supportEmailParameter = new ObjectParameter("SupportEmail", typeof(global::System.String));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateResourceDirectAthleteSupport", resourceDirectAthleteSupportIDParameter, resourceIDParameter, directAthleteSupportIDParameter, yearIDParameter, supportNameParameter, descriptionParameter, supportContactParameter, supportEmailParameter, amountParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceSportID">No Metadata Documentation available.</param>
        /// <param name="benchmarkTypeID">No Metadata Documentation available.</param>
        /// <param name="benchmarkTierID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="nSOValue">No Metadata Documentation available.</param>
        /// <param name="oTPValue">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="active">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddBenchmarkResource(Nullable<global::System.Int32> resourceSportID, Nullable<global::System.Int32> benchmarkTypeID, Nullable<global::System.Int32> benchmarkTierID, global::System.String yearID, Nullable<global::System.Int32> nSOValue, Nullable<global::System.Int32> oTPValue, global::System.String comments, Nullable<global::System.Boolean> active)
        {
            ObjectParameter resourceSportIDParameter;
            if (resourceSportID.HasValue)
            {
                resourceSportIDParameter = new ObjectParameter("ResourceSportID", resourceSportID);
            }
            else
            {
                resourceSportIDParameter = new ObjectParameter("ResourceSportID", typeof(global::System.Int32));
            }
    
            ObjectParameter benchmarkTypeIDParameter;
            if (benchmarkTypeID.HasValue)
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", benchmarkTypeID);
            }
            else
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter benchmarkTierIDParameter;
            if (benchmarkTierID.HasValue)
            {
                benchmarkTierIDParameter = new ObjectParameter("BenchmarkTierID", benchmarkTierID);
            }
            else
            {
                benchmarkTierIDParameter = new ObjectParameter("BenchmarkTierID", typeof(global::System.Int32));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter nSOValueParameter;
            if (nSOValue.HasValue)
            {
                nSOValueParameter = new ObjectParameter("NSOValue", nSOValue);
            }
            else
            {
                nSOValueParameter = new ObjectParameter("NSOValue", typeof(global::System.Int32));
            }
    
            ObjectParameter oTPValueParameter;
            if (oTPValue.HasValue)
            {
                oTPValueParameter = new ObjectParameter("OTPValue", oTPValue);
            }
            else
            {
                oTPValueParameter = new ObjectParameter("OTPValue", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter activeParameter;
            if (active.HasValue)
            {
                activeParameter = new ObjectParameter("Active", active);
            }
            else
            {
                activeParameter = new ObjectParameter("Active", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddBenchmarkResource", resourceSportIDParameter, benchmarkTypeIDParameter, benchmarkTierIDParameter, yearIDParameter, nSOValueParameter, oTPValueParameter, commentsParameter, activeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="benchmarkResourceID">No Metadata Documentation available.</param>
        /// <param name="resourceSportID">No Metadata Documentation available.</param>
        /// <param name="benchmarkTypeID">No Metadata Documentation available.</param>
        /// <param name="benchmarkTierID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="nSOValue">No Metadata Documentation available.</param>
        /// <param name="oTPValue">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="active">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateBenchmarkResource(Nullable<global::System.Int32> benchmarkResourceID, Nullable<global::System.Int32> resourceSportID, Nullable<global::System.Int32> benchmarkTypeID, Nullable<global::System.Int32> benchmarkTierID, global::System.String yearID, Nullable<global::System.Int32> nSOValue, Nullable<global::System.Int32> oTPValue, global::System.String comments, Nullable<global::System.Boolean> active)
        {
            ObjectParameter benchmarkResourceIDParameter;
            if (benchmarkResourceID.HasValue)
            {
                benchmarkResourceIDParameter = new ObjectParameter("BenchmarkResourceID", benchmarkResourceID);
            }
            else
            {
                benchmarkResourceIDParameter = new ObjectParameter("BenchmarkResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter resourceSportIDParameter;
            if (resourceSportID.HasValue)
            {
                resourceSportIDParameter = new ObjectParameter("ResourceSportID", resourceSportID);
            }
            else
            {
                resourceSportIDParameter = new ObjectParameter("ResourceSportID", typeof(global::System.Int32));
            }
    
            ObjectParameter benchmarkTypeIDParameter;
            if (benchmarkTypeID.HasValue)
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", benchmarkTypeID);
            }
            else
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter benchmarkTierIDParameter;
            if (benchmarkTierID.HasValue)
            {
                benchmarkTierIDParameter = new ObjectParameter("BenchmarkTierID", benchmarkTierID);
            }
            else
            {
                benchmarkTierIDParameter = new ObjectParameter("BenchmarkTierID", typeof(global::System.Int32));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter nSOValueParameter;
            if (nSOValue.HasValue)
            {
                nSOValueParameter = new ObjectParameter("NSOValue", nSOValue);
            }
            else
            {
                nSOValueParameter = new ObjectParameter("NSOValue", typeof(global::System.Int32));
            }
    
            ObjectParameter oTPValueParameter;
            if (oTPValue.HasValue)
            {
                oTPValueParameter = new ObjectParameter("OTPValue", oTPValue);
            }
            else
            {
                oTPValueParameter = new ObjectParameter("OTPValue", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter activeParameter;
            if (active.HasValue)
            {
                activeParameter = new ObjectParameter("Active", active);
            }
            else
            {
                activeParameter = new ObjectParameter("Active", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateBenchmarkResource", benchmarkResourceIDParameter, resourceSportIDParameter, benchmarkTypeIDParameter, benchmarkTierIDParameter, yearIDParameter, nSOValueParameter, oTPValueParameter, commentsParameter, activeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="resourceClassID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="sportTrackingRef">No Metadata Documentation available.</param>
        /// <param name="coachResourceID">No Metadata Documentation available.</param>
        /// <param name="iSTCrossCompetency">No Metadata Documentation available.</param>
        /// <param name="iSTPrimary">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddResourceSport(Nullable<global::System.Int32> resourceID, global::System.String sportID, global::System.String yearID, global::System.String resourceClassID, global::System.String comments, global::System.String sportTrackingRef, Nullable<global::System.Int32> coachResourceID, Nullable<global::System.Boolean> iSTCrossCompetency, Nullable<global::System.Boolean> iSTPrimary)
        {
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter resourceClassIDParameter;
            if (resourceClassID != null)
            {
                resourceClassIDParameter = new ObjectParameter("ResourceClassID", resourceClassID);
            }
            else
            {
                resourceClassIDParameter = new ObjectParameter("ResourceClassID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter sportTrackingRefParameter;
            if (sportTrackingRef != null)
            {
                sportTrackingRefParameter = new ObjectParameter("SportTrackingRef", sportTrackingRef);
            }
            else
            {
                sportTrackingRefParameter = new ObjectParameter("SportTrackingRef", typeof(global::System.String));
            }
    
            ObjectParameter coachResourceIDParameter;
            if (coachResourceID.HasValue)
            {
                coachResourceIDParameter = new ObjectParameter("CoachResourceID", coachResourceID);
            }
            else
            {
                coachResourceIDParameter = new ObjectParameter("CoachResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter iSTCrossCompetencyParameter;
            if (iSTCrossCompetency.HasValue)
            {
                iSTCrossCompetencyParameter = new ObjectParameter("ISTCrossCompetency", iSTCrossCompetency);
            }
            else
            {
                iSTCrossCompetencyParameter = new ObjectParameter("ISTCrossCompetency", typeof(global::System.Boolean));
            }
    
            ObjectParameter iSTPrimaryParameter;
            if (iSTPrimary.HasValue)
            {
                iSTPrimaryParameter = new ObjectParameter("ISTPrimary", iSTPrimary);
            }
            else
            {
                iSTPrimaryParameter = new ObjectParameter("ISTPrimary", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddResourceSport", resourceIDParameter, sportIDParameter, yearIDParameter, resourceClassIDParameter, commentsParameter, sportTrackingRefParameter, coachResourceIDParameter, iSTCrossCompetencyParameter, iSTPrimaryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceSportID">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="resourceClassID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="sportTrackingRef">No Metadata Documentation available.</param>
        /// <param name="coachResourceID">No Metadata Documentation available.</param>
        /// <param name="iSTCrossCompetency">No Metadata Documentation available.</param>
        /// <param name="iSTPrimary">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateResourceSport(Nullable<global::System.Int32> resourceSportID, Nullable<global::System.Int32> resourceID, global::System.String sportID, global::System.String yearID, global::System.String resourceClassID, global::System.String comments, global::System.String sportTrackingRef, Nullable<global::System.Int32> coachResourceID, Nullable<global::System.Boolean> iSTCrossCompetency, Nullable<global::System.Boolean> iSTPrimary)
        {
            ObjectParameter resourceSportIDParameter;
            if (resourceSportID.HasValue)
            {
                resourceSportIDParameter = new ObjectParameter("ResourceSportID", resourceSportID);
            }
            else
            {
                resourceSportIDParameter = new ObjectParameter("ResourceSportID", typeof(global::System.Int32));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter resourceClassIDParameter;
            if (resourceClassID != null)
            {
                resourceClassIDParameter = new ObjectParameter("ResourceClassID", resourceClassID);
            }
            else
            {
                resourceClassIDParameter = new ObjectParameter("ResourceClassID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter sportTrackingRefParameter;
            if (sportTrackingRef != null)
            {
                sportTrackingRefParameter = new ObjectParameter("SportTrackingRef", sportTrackingRef);
            }
            else
            {
                sportTrackingRefParameter = new ObjectParameter("SportTrackingRef", typeof(global::System.String));
            }
    
            ObjectParameter coachResourceIDParameter;
            if (coachResourceID.HasValue)
            {
                coachResourceIDParameter = new ObjectParameter("CoachResourceID", coachResourceID);
            }
            else
            {
                coachResourceIDParameter = new ObjectParameter("CoachResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter iSTCrossCompetencyParameter;
            if (iSTCrossCompetency.HasValue)
            {
                iSTCrossCompetencyParameter = new ObjectParameter("ISTCrossCompetency", iSTCrossCompetency);
            }
            else
            {
                iSTCrossCompetencyParameter = new ObjectParameter("ISTCrossCompetency", typeof(global::System.Boolean));
            }
    
            ObjectParameter iSTPrimaryParameter;
            if (iSTPrimary.HasValue)
            {
                iSTPrimaryParameter = new ObjectParameter("ISTPrimary", iSTPrimary);
            }
            else
            {
                iSTPrimaryParameter = new ObjectParameter("ISTPrimary", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateResourceSport", resourceSportIDParameter, resourceIDParameter, sportIDParameter, yearIDParameter, resourceClassIDParameter, commentsParameter, sportTrackingRefParameter, coachResourceIDParameter, iSTCrossCompetencyParameter, iSTPrimaryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="qualificationTypeID">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="qualified">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddResourceQualification(Nullable<global::System.Int32> resourceID, global::System.String qualificationTypeID, global::System.String description, Nullable<global::System.Boolean> qualified, global::System.String comments)
        {
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter qualificationTypeIDParameter;
            if (qualificationTypeID != null)
            {
                qualificationTypeIDParameter = new ObjectParameter("QualificationTypeID", qualificationTypeID);
            }
            else
            {
                qualificationTypeIDParameter = new ObjectParameter("QualificationTypeID", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter qualifiedParameter;
            if (qualified.HasValue)
            {
                qualifiedParameter = new ObjectParameter("Qualified", qualified);
            }
            else
            {
                qualifiedParameter = new ObjectParameter("Qualified", typeof(global::System.Boolean));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddResourceQualification", resourceIDParameter, qualificationTypeIDParameter, descriptionParameter, qualifiedParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceQualificationID">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="qualificationTypeID">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="qualified">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateResourceQualification(Nullable<global::System.Int32> resourceQualificationID, Nullable<global::System.Int32> resourceID, global::System.String qualificationTypeID, global::System.String description, Nullable<global::System.Boolean> qualified, global::System.String comments)
        {
            ObjectParameter resourceQualificationIDParameter;
            if (resourceQualificationID.HasValue)
            {
                resourceQualificationIDParameter = new ObjectParameter("ResourceQualificationID", resourceQualificationID);
            }
            else
            {
                resourceQualificationIDParameter = new ObjectParameter("ResourceQualificationID", typeof(global::System.Int32));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter qualificationTypeIDParameter;
            if (qualificationTypeID != null)
            {
                qualificationTypeIDParameter = new ObjectParameter("QualificationTypeID", qualificationTypeID);
            }
            else
            {
                qualificationTypeIDParameter = new ObjectParameter("QualificationTypeID", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter qualifiedParameter;
            if (qualified.HasValue)
            {
                qualifiedParameter = new ObjectParameter("Qualified", qualified);
            }
            else
            {
                qualifiedParameter = new ObjectParameter("Qualified", typeof(global::System.Boolean));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateResourceQualification", resourceQualificationIDParameter, resourceIDParameter, qualificationTypeIDParameter, descriptionParameter, qualifiedParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tableName">No Metadata Documentation available.</param>
        /// <param name="primaryKey">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> uspGetComments(global::System.String tableName, global::System.String primaryKey)
        {
            ObjectParameter tableNameParameter;
            if (tableName != null)
            {
                tableNameParameter = new ObjectParameter("TableName", tableName);
            }
            else
            {
                tableNameParameter = new ObjectParameter("TableName", typeof(global::System.String));
            }
    
            ObjectParameter primaryKeyParameter;
            if (primaryKey != null)
            {
                primaryKeyParameter = new ObjectParameter("PrimaryKey", primaryKey);
            }
            else
            {
                primaryKeyParameter = new ObjectParameter("PrimaryKey", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("uspGetComments", tableNameParameter, primaryKeyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tableName">No Metadata Documentation available.</param>
        /// <param name="primaryKey">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public int uspUpdateComments(global::System.String tableName, global::System.String primaryKey, global::System.String comments)
        {
            ObjectParameter tableNameParameter;
            if (tableName != null)
            {
                tableNameParameter = new ObjectParameter("TableName", tableName);
            }
            else
            {
                tableNameParameter = new ObjectParameter("TableName", typeof(global::System.String));
            }
    
            ObjectParameter primaryKeyParameter;
            if (primaryKey != null)
            {
                primaryKeyParameter = new ObjectParameter("PrimaryKey", primaryKey);
            }
            else
            {
                primaryKeyParameter = new ObjectParameter("PrimaryKey", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("uspUpdateComments", tableNameParameter, primaryKeyParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="actionItemTypeID">No Metadata Documentation available.</param>
        /// <param name="referenceID">No Metadata Documentation available.</param>
        /// <param name="organizationID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="dueDate">No Metadata Documentation available.</param>
        /// <param name="actionItemStatus">No Metadata Documentation available.</param>
        /// <param name="actionItemPriority">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddActionItem(global::System.String actionItemTypeID, global::System.String referenceID, global::System.String organizationID, global::System.String sportID, global::System.String description, Nullable<global::System.DateTime> dueDate, global::System.String actionItemStatus, global::System.String actionItemPriority, global::System.String comments)
        {
            ObjectParameter actionItemTypeIDParameter;
            if (actionItemTypeID != null)
            {
                actionItemTypeIDParameter = new ObjectParameter("ActionItemTypeID", actionItemTypeID);
            }
            else
            {
                actionItemTypeIDParameter = new ObjectParameter("ActionItemTypeID", typeof(global::System.String));
            }
    
            ObjectParameter referenceIDParameter;
            if (referenceID != null)
            {
                referenceIDParameter = new ObjectParameter("ReferenceID", referenceID);
            }
            else
            {
                referenceIDParameter = new ObjectParameter("ReferenceID", typeof(global::System.String));
            }
    
            ObjectParameter organizationIDParameter;
            if (organizationID != null)
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", organizationID);
            }
            else
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", typeof(global::System.String));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter dueDateParameter;
            if (dueDate.HasValue)
            {
                dueDateParameter = new ObjectParameter("DueDate", dueDate);
            }
            else
            {
                dueDateParameter = new ObjectParameter("DueDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter actionItemStatusParameter;
            if (actionItemStatus != null)
            {
                actionItemStatusParameter = new ObjectParameter("ActionItemStatus", actionItemStatus);
            }
            else
            {
                actionItemStatusParameter = new ObjectParameter("ActionItemStatus", typeof(global::System.String));
            }
    
            ObjectParameter actionItemPriorityParameter;
            if (actionItemPriority != null)
            {
                actionItemPriorityParameter = new ObjectParameter("ActionItemPriority", actionItemPriority);
            }
            else
            {
                actionItemPriorityParameter = new ObjectParameter("ActionItemPriority", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddActionItem", actionItemTypeIDParameter, referenceIDParameter, organizationIDParameter, sportIDParameter, descriptionParameter, dueDateParameter, actionItemStatusParameter, actionItemPriorityParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="actionItemID">No Metadata Documentation available.</param>
        /// <param name="actionItemTypeID">No Metadata Documentation available.</param>
        /// <param name="referenceID">No Metadata Documentation available.</param>
        /// <param name="organizationID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="dueDate">No Metadata Documentation available.</param>
        /// <param name="actionItemStatus">No Metadata Documentation available.</param>
        /// <param name="actionItemPriority">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateActionItem(Nullable<global::System.Int32> actionItemID, global::System.String actionItemTypeID, global::System.String referenceID, global::System.String organizationID, global::System.String sportID, global::System.String description, Nullable<global::System.DateTime> dueDate, global::System.String actionItemStatus, global::System.String actionItemPriority, global::System.String comments)
        {
            ObjectParameter actionItemIDParameter;
            if (actionItemID.HasValue)
            {
                actionItemIDParameter = new ObjectParameter("ActionItemID", actionItemID);
            }
            else
            {
                actionItemIDParameter = new ObjectParameter("ActionItemID", typeof(global::System.Int32));
            }
    
            ObjectParameter actionItemTypeIDParameter;
            if (actionItemTypeID != null)
            {
                actionItemTypeIDParameter = new ObjectParameter("ActionItemTypeID", actionItemTypeID);
            }
            else
            {
                actionItemTypeIDParameter = new ObjectParameter("ActionItemTypeID", typeof(global::System.String));
            }
    
            ObjectParameter referenceIDParameter;
            if (referenceID != null)
            {
                referenceIDParameter = new ObjectParameter("ReferenceID", referenceID);
            }
            else
            {
                referenceIDParameter = new ObjectParameter("ReferenceID", typeof(global::System.String));
            }
    
            ObjectParameter organizationIDParameter;
            if (organizationID != null)
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", organizationID);
            }
            else
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", typeof(global::System.String));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter dueDateParameter;
            if (dueDate.HasValue)
            {
                dueDateParameter = new ObjectParameter("DueDate", dueDate);
            }
            else
            {
                dueDateParameter = new ObjectParameter("DueDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter actionItemStatusParameter;
            if (actionItemStatus != null)
            {
                actionItemStatusParameter = new ObjectParameter("ActionItemStatus", actionItemStatus);
            }
            else
            {
                actionItemStatusParameter = new ObjectParameter("ActionItemStatus", typeof(global::System.String));
            }
    
            ObjectParameter actionItemPriorityParameter;
            if (actionItemPriority != null)
            {
                actionItemPriorityParameter = new ObjectParameter("ActionItemPriority", actionItemPriority);
            }
            else
            {
                actionItemPriorityParameter = new ObjectParameter("ActionItemPriority", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateActionItem", actionItemIDParameter, actionItemTypeIDParameter, referenceIDParameter, organizationIDParameter, sportIDParameter, descriptionParameter, dueDateParameter, actionItemStatusParameter, actionItemPriorityParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingDetailID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteFundingDetail(Nullable<global::System.Int32> fundingDetailID)
        {
            ObjectParameter fundingDetailIDParameter;
            if (fundingDetailID.HasValue)
            {
                fundingDetailIDParameter = new ObjectParameter("FundingDetailID", fundingDetailID);
            }
            else
            {
                fundingDetailIDParameter = new ObjectParameter("FundingDetailID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteFundingDetail", fundingDetailIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="liveId">No Metadata Documentation available.</param>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddUser(global::System.String liveId, global::System.String firstName, global::System.String lastName, global::System.String comments)
        {
            ObjectParameter liveIdParameter;
            if (liveId != null)
            {
                liveIdParameter = new ObjectParameter("LiveId", liveId);
            }
            else
            {
                liveIdParameter = new ObjectParameter("LiveId", typeof(global::System.String));
            }
    
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("LastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("LastName", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddUser", liveIdParameter, firstNameParameter, lastNameParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="liveId">No Metadata Documentation available.</param>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateUser(global::System.String liveId, global::System.String firstName, global::System.String lastName, global::System.String comments)
        {
            ObjectParameter liveIdParameter;
            if (liveId != null)
            {
                liveIdParameter = new ObjectParameter("LiveId", liveId);
            }
            else
            {
                liveIdParameter = new ObjectParameter("LiveId", typeof(global::System.String));
            }
    
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("LastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("LastName", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateUser", liveIdParameter, firstNameParameter, lastNameParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingRevisionVersionID">No Metadata Documentation available.</param>
        /// <param name="fundingDetailID">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="organizationID">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="percentCommitted">No Metadata Documentation available.</param>
        /// <param name="fundingPriority">No Metadata Documentation available.</param>
        /// <param name="recurring">No Metadata Documentation available.</param>
        /// <param name="fundsTotal">No Metadata Documentation available.</param>
        /// <param name="fundsSC">No Metadata Documentation available.</param>
        /// <param name="fundsCOC">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddFundingRevision(Nullable<global::System.Int32> fundingRevisionVersionID, Nullable<global::System.Int32> fundingDetailID, global::System.String description, global::System.String organizationID, Nullable<global::System.Int32> resourceID, Nullable<global::System.Decimal> percentCommitted, global::System.String fundingPriority, Nullable<global::System.Boolean> recurring, Nullable<global::System.Decimal> fundsTotal, Nullable<global::System.Decimal> fundsSC, Nullable<global::System.Decimal> fundsCOC)
        {
            ObjectParameter fundingRevisionVersionIDParameter;
            if (fundingRevisionVersionID.HasValue)
            {
                fundingRevisionVersionIDParameter = new ObjectParameter("FundingRevisionVersionID", fundingRevisionVersionID);
            }
            else
            {
                fundingRevisionVersionIDParameter = new ObjectParameter("FundingRevisionVersionID", typeof(global::System.Int32));
            }
    
            ObjectParameter fundingDetailIDParameter;
            if (fundingDetailID.HasValue)
            {
                fundingDetailIDParameter = new ObjectParameter("FundingDetailID", fundingDetailID);
            }
            else
            {
                fundingDetailIDParameter = new ObjectParameter("FundingDetailID", typeof(global::System.Int32));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter organizationIDParameter;
            if (organizationID != null)
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", organizationID);
            }
            else
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", typeof(global::System.String));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter percentCommittedParameter;
            if (percentCommitted.HasValue)
            {
                percentCommittedParameter = new ObjectParameter("PercentCommitted", percentCommitted);
            }
            else
            {
                percentCommittedParameter = new ObjectParameter("PercentCommitted", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundingPriorityParameter;
            if (fundingPriority != null)
            {
                fundingPriorityParameter = new ObjectParameter("FundingPriority", fundingPriority);
            }
            else
            {
                fundingPriorityParameter = new ObjectParameter("FundingPriority", typeof(global::System.String));
            }
    
            ObjectParameter recurringParameter;
            if (recurring.HasValue)
            {
                recurringParameter = new ObjectParameter("Recurring", recurring);
            }
            else
            {
                recurringParameter = new ObjectParameter("Recurring", typeof(global::System.Boolean));
            }
    
            ObjectParameter fundsTotalParameter;
            if (fundsTotal.HasValue)
            {
                fundsTotalParameter = new ObjectParameter("FundsTotal", fundsTotal);
            }
            else
            {
                fundsTotalParameter = new ObjectParameter("FundsTotal", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundsSCParameter;
            if (fundsSC.HasValue)
            {
                fundsSCParameter = new ObjectParameter("FundsSC", fundsSC);
            }
            else
            {
                fundsSCParameter = new ObjectParameter("FundsSC", typeof(global::System.Decimal));
            }
    
            ObjectParameter fundsCOCParameter;
            if (fundsCOC.HasValue)
            {
                fundsCOCParameter = new ObjectParameter("FundsCOC", fundsCOC);
            }
            else
            {
                fundsCOCParameter = new ObjectParameter("FundsCOC", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddFundingRevision", fundingRevisionVersionIDParameter, fundingDetailIDParameter, descriptionParameter, organizationIDParameter, resourceIDParameter, percentCommittedParameter, fundingPriorityParameter, recurringParameter, fundsTotalParameter, fundsSCParameter, fundsCOCParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingRevisionVersion">No Metadata Documentation available.</param>
        /// <param name="fundingSummaryID">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="revisionDate">No Metadata Documentation available.</param>
        /// <param name="revisionTime">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddFundingRevisionVersion(global::System.String fundingRevisionVersion, Nullable<global::System.Int32> fundingSummaryID, global::System.String name_EN, global::System.String name_FR, Nullable<global::System.DateTime> revisionDate, Nullable<global::System.TimeSpan> revisionTime, global::System.String comments)
        {
            ObjectParameter fundingRevisionVersionParameter;
            if (fundingRevisionVersion != null)
            {
                fundingRevisionVersionParameter = new ObjectParameter("FundingRevisionVersion", fundingRevisionVersion);
            }
            else
            {
                fundingRevisionVersionParameter = new ObjectParameter("FundingRevisionVersion", typeof(global::System.String));
            }
    
            ObjectParameter fundingSummaryIDParameter;
            if (fundingSummaryID.HasValue)
            {
                fundingSummaryIDParameter = new ObjectParameter("FundingSummaryID", fundingSummaryID);
            }
            else
            {
                fundingSummaryIDParameter = new ObjectParameter("FundingSummaryID", typeof(global::System.Int32));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter revisionDateParameter;
            if (revisionDate.HasValue)
            {
                revisionDateParameter = new ObjectParameter("RevisionDate", revisionDate);
            }
            else
            {
                revisionDateParameter = new ObjectParameter("RevisionDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter revisionTimeParameter;
            if (revisionTime.HasValue)
            {
                revisionTimeParameter = new ObjectParameter("RevisionTime", revisionTime);
            }
            else
            {
                revisionTimeParameter = new ObjectParameter("RevisionTime", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddFundingRevisionVersion", fundingRevisionVersionParameter, fundingSummaryIDParameter, name_ENParameter, name_FRParameter, revisionDateParameter, revisionTimeParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceAffiliateID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteResourceAffiliate(Nullable<global::System.Int32> resourceAffiliateID)
        {
            ObjectParameter resourceAffiliateIDParameter;
            if (resourceAffiliateID.HasValue)
            {
                resourceAffiliateIDParameter = new ObjectParameter("ResourceAffiliateID", resourceAffiliateID);
            }
            else
            {
                resourceAffiliateIDParameter = new ObjectParameter("ResourceAffiliateID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteResourceAffiliate", resourceAffiliateIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceDirectAthleteSupportID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteResourceDirectAthleteSupport(Nullable<global::System.Int32> resourceDirectAthleteSupportID)
        {
            ObjectParameter resourceDirectAthleteSupportIDParameter;
            if (resourceDirectAthleteSupportID.HasValue)
            {
                resourceDirectAthleteSupportIDParameter = new ObjectParameter("ResourceDirectAthleteSupportID", resourceDirectAthleteSupportID);
            }
            else
            {
                resourceDirectAthleteSupportIDParameter = new ObjectParameter("ResourceDirectAthleteSupportID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteResourceDirectAthleteSupport", resourceDirectAthleteSupportIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceQualificationID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteResourceQualification(Nullable<global::System.Int32> resourceQualificationID)
        {
            ObjectParameter resourceQualificationIDParameter;
            if (resourceQualificationID.HasValue)
            {
                resourceQualificationIDParameter = new ObjectParameter("ResourceQualificationID", resourceQualificationID);
            }
            else
            {
                resourceQualificationIDParameter = new ObjectParameter("ResourceQualificationID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteResourceQualification", resourceQualificationIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceSportID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteResourceSport(Nullable<global::System.Int32> resourceSportID)
        {
            ObjectParameter resourceSportIDParameter;
            if (resourceSportID.HasValue)
            {
                resourceSportIDParameter = new ObjectParameter("ResourceSportID", resourceSportID);
            }
            else
            {
                resourceSportIDParameter = new ObjectParameter("ResourceSportID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteResourceSport", resourceSportIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="benchmarkSportID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteBenchmarkSport(Nullable<global::System.Int32> benchmarkSportID)
        {
            ObjectParameter benchmarkSportIDParameter;
            if (benchmarkSportID.HasValue)
            {
                benchmarkSportIDParameter = new ObjectParameter("BenchmarkSportID", benchmarkSportID);
            }
            else
            {
                benchmarkSportIDParameter = new ObjectParameter("BenchmarkSportID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteBenchmarkSport", benchmarkSportIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="benchmarkResourceID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteBenchmarkResource(Nullable<global::System.Int32> benchmarkResourceID)
        {
            ObjectParameter benchmarkResourceIDParameter;
            if (benchmarkResourceID.HasValue)
            {
                benchmarkResourceIDParameter = new ObjectParameter("BenchmarkResourceID", benchmarkResourceID);
            }
            else
            {
                benchmarkResourceIDParameter = new ObjectParameter("BenchmarkResourceID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteBenchmarkResource", benchmarkResourceIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="competitionTypeID">No Metadata Documentation available.</param>
        /// <param name="benchmarkTypeID">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="competitionDate">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddCompetition(global::System.String sportID, global::System.String yearID, global::System.String competitionTypeID, Nullable<global::System.Int32> benchmarkTypeID, global::System.String name, Nullable<global::System.DateTime> competitionDate, global::System.String countryID, global::System.String location, global::System.String comments)
        {
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter competitionTypeIDParameter;
            if (competitionTypeID != null)
            {
                competitionTypeIDParameter = new ObjectParameter("CompetitionTypeID", competitionTypeID);
            }
            else
            {
                competitionTypeIDParameter = new ObjectParameter("CompetitionTypeID", typeof(global::System.String));
            }
    
            ObjectParameter benchmarkTypeIDParameter;
            if (benchmarkTypeID.HasValue)
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", benchmarkTypeID);
            }
            else
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter competitionDateParameter;
            if (competitionDate.HasValue)
            {
                competitionDateParameter = new ObjectParameter("CompetitionDate", competitionDate);
            }
            else
            {
                competitionDateParameter = new ObjectParameter("CompetitionDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID != null)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("Location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("Location", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddCompetition", sportIDParameter, yearIDParameter, competitionTypeIDParameter, benchmarkTypeIDParameter, nameParameter, competitionDateParameter, countryIDParameter, locationParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="fieldSize">No Metadata Documentation available.</param>
        /// <param name="cancelled">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddCompetitionEvent(Nullable<global::System.Int32> competitionID, global::System.String sportID, Nullable<global::System.Int32> fieldSize, Nullable<global::System.Boolean> cancelled, global::System.String comments)
        {
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter fieldSizeParameter;
            if (fieldSize.HasValue)
            {
                fieldSizeParameter = new ObjectParameter("FieldSize", fieldSize);
            }
            else
            {
                fieldSizeParameter = new ObjectParameter("FieldSize", typeof(global::System.Int32));
            }
    
            ObjectParameter cancelledParameter;
            if (cancelled.HasValue)
            {
                cancelledParameter = new ObjectParameter("Cancelled", cancelled);
            }
            else
            {
                cancelledParameter = new ObjectParameter("Cancelled", typeof(global::System.Boolean));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddCompetitionEvent", competitionIDParameter, sportIDParameter, fieldSizeParameter, cancelledParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteCompetition(Nullable<global::System.Int32> competitionID)
        {
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteCompetition", competitionIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="competitionSportID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteCompetitionEvent(Nullable<global::System.Int32> competitionSportID)
        {
            ObjectParameter competitionSportIDParameter;
            if (competitionSportID.HasValue)
            {
                competitionSportIDParameter = new ObjectParameter("CompetitionSportID", competitionSportID);
            }
            else
            {
                competitionSportIDParameter = new ObjectParameter("CompetitionSportID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteCompetitionEvent", competitionSportIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="competitionTypeID">No Metadata Documentation available.</param>
        /// <param name="benchmarkTypeID">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="competitionDate">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateCompetition(Nullable<global::System.Int32> competitionID, global::System.String sportID, global::System.String yearID, global::System.String competitionTypeID, Nullable<global::System.Int32> benchmarkTypeID, global::System.String name, Nullable<global::System.DateTime> competitionDate, global::System.String countryID, global::System.String location, global::System.String comments)
        {
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter competitionTypeIDParameter;
            if (competitionTypeID != null)
            {
                competitionTypeIDParameter = new ObjectParameter("CompetitionTypeID", competitionTypeID);
            }
            else
            {
                competitionTypeIDParameter = new ObjectParameter("CompetitionTypeID", typeof(global::System.String));
            }
    
            ObjectParameter benchmarkTypeIDParameter;
            if (benchmarkTypeID.HasValue)
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", benchmarkTypeID);
            }
            else
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter competitionDateParameter;
            if (competitionDate.HasValue)
            {
                competitionDateParameter = new ObjectParameter("CompetitionDate", competitionDate);
            }
            else
            {
                competitionDateParameter = new ObjectParameter("CompetitionDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID != null)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("Location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("Location", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateCompetition", competitionIDParameter, sportIDParameter, yearIDParameter, competitionTypeIDParameter, benchmarkTypeIDParameter, nameParameter, competitionDateParameter, countryIDParameter, locationParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="competitionSportID">No Metadata Documentation available.</param>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="fieldSize">No Metadata Documentation available.</param>
        /// <param name="cancelled">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateCompetitionEvent(Nullable<global::System.Int32> competitionSportID, Nullable<global::System.Int32> competitionID, global::System.String sportID, Nullable<global::System.Int32> fieldSize, Nullable<global::System.Boolean> cancelled, global::System.String comments)
        {
            ObjectParameter competitionSportIDParameter;
            if (competitionSportID.HasValue)
            {
                competitionSportIDParameter = new ObjectParameter("CompetitionSportID", competitionSportID);
            }
            else
            {
                competitionSportIDParameter = new ObjectParameter("CompetitionSportID", typeof(global::System.Int32));
            }
    
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter fieldSizeParameter;
            if (fieldSize.HasValue)
            {
                fieldSizeParameter = new ObjectParameter("FieldSize", fieldSize);
            }
            else
            {
                fieldSizeParameter = new ObjectParameter("FieldSize", typeof(global::System.Int32));
            }
    
            ObjectParameter cancelledParameter;
            if (cancelled.HasValue)
            {
                cancelledParameter = new ObjectParameter("Cancelled", cancelled);
            }
            else
            {
                cancelledParameter = new ObjectParameter("Cancelled", typeof(global::System.Boolean));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateCompetitionEvent", competitionSportIDParameter, competitionIDParameter, sportIDParameter, fieldSizeParameter, cancelledParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="downloadTemplateID">No Metadata Documentation available.</param>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        /// <param name="sourceRow">No Metadata Documentation available.</param>
        /// <param name="columnA">No Metadata Documentation available.</param>
        /// <param name="columnB">No Metadata Documentation available.</param>
        /// <param name="columnC">No Metadata Documentation available.</param>
        /// <param name="columnD">No Metadata Documentation available.</param>
        /// <param name="columnE">No Metadata Documentation available.</param>
        /// <param name="columnF">No Metadata Documentation available.</param>
        /// <param name="columnG">No Metadata Documentation available.</param>
        /// <param name="columnH">No Metadata Documentation available.</param>
        /// <param name="columnI">No Metadata Documentation available.</param>
        /// <param name="columnJ">No Metadata Documentation available.</param>
        /// <param name="columnK">No Metadata Documentation available.</param>
        /// <param name="columnL">No Metadata Documentation available.</param>
        /// <param name="columnM">No Metadata Documentation available.</param>
        /// <param name="columnN">No Metadata Documentation available.</param>
        /// <param name="columnO">No Metadata Documentation available.</param>
        /// <param name="columnP">No Metadata Documentation available.</param>
        /// <param name="columnQ">No Metadata Documentation available.</param>
        /// <param name="columnR">No Metadata Documentation available.</param>
        /// <param name="columnS">No Metadata Documentation available.</param>
        /// <param name="columnT">No Metadata Documentation available.</param>
        /// <param name="columnU">No Metadata Documentation available.</param>
        /// <param name="columnV">No Metadata Documentation available.</param>
        /// <param name="columnW">No Metadata Documentation available.</param>
        /// <param name="columnX">No Metadata Documentation available.</param>
        /// <param name="columnY">No Metadata Documentation available.</param>
        /// <param name="columnZ">No Metadata Documentation available.</param>
        /// <param name="benchmarkTypeID">No Metadata Documentation available.</param>
        /// <param name="eventDate">No Metadata Documentation available.</param>
        /// <param name="eventDescription">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddDownloadStaging(Nullable<global::System.Int32> downloadTemplateID, Nullable<global::System.Int32> competitionID, Nullable<global::System.Int32> sourceRow, global::System.String columnA, global::System.String columnB, global::System.String columnC, global::System.String columnD, global::System.String columnE, global::System.String columnF, global::System.String columnG, global::System.String columnH, global::System.String columnI, global::System.String columnJ, global::System.String columnK, global::System.String columnL, global::System.String columnM, global::System.String columnN, global::System.String columnO, global::System.String columnP, global::System.String columnQ, global::System.String columnR, global::System.String columnS, global::System.String columnT, global::System.String columnU, global::System.String columnV, global::System.String columnW, global::System.String columnX, global::System.String columnY, global::System.String columnZ, Nullable<global::System.Int32> benchmarkTypeID, Nullable<global::System.DateTime> eventDate, global::System.String eventDescription, global::System.String sportID)
        {
            ObjectParameter downloadTemplateIDParameter;
            if (downloadTemplateID.HasValue)
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", downloadTemplateID);
            }
            else
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", typeof(global::System.Int32));
            }
    
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceRowParameter;
            if (sourceRow.HasValue)
            {
                sourceRowParameter = new ObjectParameter("SourceRow", sourceRow);
            }
            else
            {
                sourceRowParameter = new ObjectParameter("SourceRow", typeof(global::System.Int32));
            }
    
            ObjectParameter columnAParameter;
            if (columnA != null)
            {
                columnAParameter = new ObjectParameter("ColumnA", columnA);
            }
            else
            {
                columnAParameter = new ObjectParameter("ColumnA", typeof(global::System.String));
            }
    
            ObjectParameter columnBParameter;
            if (columnB != null)
            {
                columnBParameter = new ObjectParameter("ColumnB", columnB);
            }
            else
            {
                columnBParameter = new ObjectParameter("ColumnB", typeof(global::System.String));
            }
    
            ObjectParameter columnCParameter;
            if (columnC != null)
            {
                columnCParameter = new ObjectParameter("ColumnC", columnC);
            }
            else
            {
                columnCParameter = new ObjectParameter("ColumnC", typeof(global::System.String));
            }
    
            ObjectParameter columnDParameter;
            if (columnD != null)
            {
                columnDParameter = new ObjectParameter("ColumnD", columnD);
            }
            else
            {
                columnDParameter = new ObjectParameter("ColumnD", typeof(global::System.String));
            }
    
            ObjectParameter columnEParameter;
            if (columnE != null)
            {
                columnEParameter = new ObjectParameter("ColumnE", columnE);
            }
            else
            {
                columnEParameter = new ObjectParameter("ColumnE", typeof(global::System.String));
            }
    
            ObjectParameter columnFParameter;
            if (columnF != null)
            {
                columnFParameter = new ObjectParameter("ColumnF", columnF);
            }
            else
            {
                columnFParameter = new ObjectParameter("ColumnF", typeof(global::System.String));
            }
    
            ObjectParameter columnGParameter;
            if (columnG != null)
            {
                columnGParameter = new ObjectParameter("ColumnG", columnG);
            }
            else
            {
                columnGParameter = new ObjectParameter("ColumnG", typeof(global::System.String));
            }
    
            ObjectParameter columnHParameter;
            if (columnH != null)
            {
                columnHParameter = new ObjectParameter("ColumnH", columnH);
            }
            else
            {
                columnHParameter = new ObjectParameter("ColumnH", typeof(global::System.String));
            }
    
            ObjectParameter columnIParameter;
            if (columnI != null)
            {
                columnIParameter = new ObjectParameter("ColumnI", columnI);
            }
            else
            {
                columnIParameter = new ObjectParameter("ColumnI", typeof(global::System.String));
            }
    
            ObjectParameter columnJParameter;
            if (columnJ != null)
            {
                columnJParameter = new ObjectParameter("ColumnJ", columnJ);
            }
            else
            {
                columnJParameter = new ObjectParameter("ColumnJ", typeof(global::System.String));
            }
    
            ObjectParameter columnKParameter;
            if (columnK != null)
            {
                columnKParameter = new ObjectParameter("ColumnK", columnK);
            }
            else
            {
                columnKParameter = new ObjectParameter("ColumnK", typeof(global::System.String));
            }
    
            ObjectParameter columnLParameter;
            if (columnL != null)
            {
                columnLParameter = new ObjectParameter("ColumnL", columnL);
            }
            else
            {
                columnLParameter = new ObjectParameter("ColumnL", typeof(global::System.String));
            }
    
            ObjectParameter columnMParameter;
            if (columnM != null)
            {
                columnMParameter = new ObjectParameter("ColumnM", columnM);
            }
            else
            {
                columnMParameter = new ObjectParameter("ColumnM", typeof(global::System.String));
            }
    
            ObjectParameter columnNParameter;
            if (columnN != null)
            {
                columnNParameter = new ObjectParameter("ColumnN", columnN);
            }
            else
            {
                columnNParameter = new ObjectParameter("ColumnN", typeof(global::System.String));
            }
    
            ObjectParameter columnOParameter;
            if (columnO != null)
            {
                columnOParameter = new ObjectParameter("ColumnO", columnO);
            }
            else
            {
                columnOParameter = new ObjectParameter("ColumnO", typeof(global::System.String));
            }
    
            ObjectParameter columnPParameter;
            if (columnP != null)
            {
                columnPParameter = new ObjectParameter("ColumnP", columnP);
            }
            else
            {
                columnPParameter = new ObjectParameter("ColumnP", typeof(global::System.String));
            }
    
            ObjectParameter columnQParameter;
            if (columnQ != null)
            {
                columnQParameter = new ObjectParameter("ColumnQ", columnQ);
            }
            else
            {
                columnQParameter = new ObjectParameter("ColumnQ", typeof(global::System.String));
            }
    
            ObjectParameter columnRParameter;
            if (columnR != null)
            {
                columnRParameter = new ObjectParameter("ColumnR", columnR);
            }
            else
            {
                columnRParameter = new ObjectParameter("ColumnR", typeof(global::System.String));
            }
    
            ObjectParameter columnSParameter;
            if (columnS != null)
            {
                columnSParameter = new ObjectParameter("ColumnS", columnS);
            }
            else
            {
                columnSParameter = new ObjectParameter("ColumnS", typeof(global::System.String));
            }
    
            ObjectParameter columnTParameter;
            if (columnT != null)
            {
                columnTParameter = new ObjectParameter("ColumnT", columnT);
            }
            else
            {
                columnTParameter = new ObjectParameter("ColumnT", typeof(global::System.String));
            }
    
            ObjectParameter columnUParameter;
            if (columnU != null)
            {
                columnUParameter = new ObjectParameter("ColumnU", columnU);
            }
            else
            {
                columnUParameter = new ObjectParameter("ColumnU", typeof(global::System.String));
            }
    
            ObjectParameter columnVParameter;
            if (columnV != null)
            {
                columnVParameter = new ObjectParameter("ColumnV", columnV);
            }
            else
            {
                columnVParameter = new ObjectParameter("ColumnV", typeof(global::System.String));
            }
    
            ObjectParameter columnWParameter;
            if (columnW != null)
            {
                columnWParameter = new ObjectParameter("ColumnW", columnW);
            }
            else
            {
                columnWParameter = new ObjectParameter("ColumnW", typeof(global::System.String));
            }
    
            ObjectParameter columnXParameter;
            if (columnX != null)
            {
                columnXParameter = new ObjectParameter("ColumnX", columnX);
            }
            else
            {
                columnXParameter = new ObjectParameter("ColumnX", typeof(global::System.String));
            }
    
            ObjectParameter columnYParameter;
            if (columnY != null)
            {
                columnYParameter = new ObjectParameter("ColumnY", columnY);
            }
            else
            {
                columnYParameter = new ObjectParameter("ColumnY", typeof(global::System.String));
            }
    
            ObjectParameter columnZParameter;
            if (columnZ != null)
            {
                columnZParameter = new ObjectParameter("ColumnZ", columnZ);
            }
            else
            {
                columnZParameter = new ObjectParameter("ColumnZ", typeof(global::System.String));
            }
    
            ObjectParameter benchmarkTypeIDParameter;
            if (benchmarkTypeID.HasValue)
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", benchmarkTypeID);
            }
            else
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter eventDateParameter;
            if (eventDate.HasValue)
            {
                eventDateParameter = new ObjectParameter("EventDate", eventDate);
            }
            else
            {
                eventDateParameter = new ObjectParameter("EventDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter eventDescriptionParameter;
            if (eventDescription != null)
            {
                eventDescriptionParameter = new ObjectParameter("EventDescription", eventDescription);
            }
            else
            {
                eventDescriptionParameter = new ObjectParameter("EventDescription", typeof(global::System.String));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddDownloadStaging", downloadTemplateIDParameter, competitionIDParameter, sourceRowParameter, columnAParameter, columnBParameter, columnCParameter, columnDParameter, columnEParameter, columnFParameter, columnGParameter, columnHParameter, columnIParameter, columnJParameter, columnKParameter, columnLParameter, columnMParameter, columnNParameter, columnOParameter, columnPParameter, columnQParameter, columnRParameter, columnSParameter, columnTParameter, columnUParameter, columnVParameter, columnWParameter, columnXParameter, columnYParameter, columnZParameter, benchmarkTypeIDParameter, eventDateParameter, eventDescriptionParameter, sportIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="downloadTemplateID">No Metadata Documentation available.</param>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteDownloadStaging(Nullable<global::System.Int32> downloadTemplateID, Nullable<global::System.Int32> competitionID)
        {
            ObjectParameter downloadTemplateIDParameter;
            if (downloadTemplateID.HasValue)
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", downloadTemplateID);
            }
            else
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", typeof(global::System.Int32));
            }
    
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteDownloadStaging", downloadTemplateIDParameter, competitionIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tableTemplateID">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="instructions">No Metadata Documentation available.</param>
        /// <param name="uRL">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="teamSport">No Metadata Documentation available.</param>
        /// <param name="resourceTracking">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddDownloadTemplate(global::System.String tableTemplateID, global::System.String name_EN, global::System.String name_FR, global::System.String instructions, global::System.String uRL, global::System.String comments, Nullable<global::System.Boolean> teamSport, Nullable<global::System.Boolean> resourceTracking)
        {
            ObjectParameter tableTemplateIDParameter;
            if (tableTemplateID != null)
            {
                tableTemplateIDParameter = new ObjectParameter("TableTemplateID", tableTemplateID);
            }
            else
            {
                tableTemplateIDParameter = new ObjectParameter("TableTemplateID", typeof(global::System.String));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter instructionsParameter;
            if (instructions != null)
            {
                instructionsParameter = new ObjectParameter("Instructions", instructions);
            }
            else
            {
                instructionsParameter = new ObjectParameter("Instructions", typeof(global::System.String));
            }
    
            ObjectParameter uRLParameter;
            if (uRL != null)
            {
                uRLParameter = new ObjectParameter("URL", uRL);
            }
            else
            {
                uRLParameter = new ObjectParameter("URL", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter teamSportParameter;
            if (teamSport.HasValue)
            {
                teamSportParameter = new ObjectParameter("TeamSport", teamSport);
            }
            else
            {
                teamSportParameter = new ObjectParameter("TeamSport", typeof(global::System.Boolean));
            }
    
            ObjectParameter resourceTrackingParameter;
            if (resourceTracking.HasValue)
            {
                resourceTrackingParameter = new ObjectParameter("ResourceTracking", resourceTracking);
            }
            else
            {
                resourceTrackingParameter = new ObjectParameter("ResourceTracking", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddDownloadTemplate", tableTemplateIDParameter, name_ENParameter, name_FRParameter, instructionsParameter, uRLParameter, commentsParameter, teamSportParameter, resourceTrackingParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="downloadTemplateID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteDownloadTemplate(Nullable<global::System.Int32> downloadTemplateID)
        {
            ObjectParameter downloadTemplateIDParameter;
            if (downloadTemplateID.HasValue)
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", downloadTemplateID);
            }
            else
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteDownloadTemplate", downloadTemplateIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="downloadTemplateID">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="instructions">No Metadata Documentation available.</param>
        /// <param name="uRL">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="teamSport">No Metadata Documentation available.</param>
        /// <param name="resourceTracking">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateDownloadTemplate(Nullable<global::System.Int32> downloadTemplateID, global::System.String name_EN, global::System.String name_FR, global::System.String instructions, global::System.String uRL, global::System.String comments, Nullable<global::System.Boolean> teamSport, Nullable<global::System.Boolean> resourceTracking)
        {
            ObjectParameter downloadTemplateIDParameter;
            if (downloadTemplateID.HasValue)
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", downloadTemplateID);
            }
            else
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", typeof(global::System.Int32));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter instructionsParameter;
            if (instructions != null)
            {
                instructionsParameter = new ObjectParameter("Instructions", instructions);
            }
            else
            {
                instructionsParameter = new ObjectParameter("Instructions", typeof(global::System.String));
            }
    
            ObjectParameter uRLParameter;
            if (uRL != null)
            {
                uRLParameter = new ObjectParameter("URL", uRL);
            }
            else
            {
                uRLParameter = new ObjectParameter("URL", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter teamSportParameter;
            if (teamSport.HasValue)
            {
                teamSportParameter = new ObjectParameter("TeamSport", teamSport);
            }
            else
            {
                teamSportParameter = new ObjectParameter("TeamSport", typeof(global::System.Boolean));
            }
    
            ObjectParameter resourceTrackingParameter;
            if (resourceTracking.HasValue)
            {
                resourceTrackingParameter = new ObjectParameter("ResourceTracking", resourceTracking);
            }
            else
            {
                resourceTrackingParameter = new ObjectParameter("ResourceTracking", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateDownloadTemplate", downloadTemplateIDParameter, name_ENParameter, name_FRParameter, instructionsParameter, uRLParameter, commentsParameter, teamSportParameter, resourceTrackingParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="downloadTemplateMappingID">No Metadata Documentation available.</param>
        /// <param name="sourceColumnName">No Metadata Documentation available.</param>
        /// <param name="sourceColumn">No Metadata Documentation available.</param>
        /// <param name="sourceDefault">No Metadata Documentation available.</param>
        /// <param name="nameFormat">No Metadata Documentation available.</param>
        /// <param name="dateFormat">No Metadata Documentation available.</param>
        /// <param name="timeFormat">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="teamMember">No Metadata Documentation available.</param>
        /// <param name="sourceRowOffset">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateDownloadTemplateMapping(Nullable<global::System.Int32> downloadTemplateMappingID, global::System.String sourceColumnName, global::System.String sourceColumn, global::System.String sourceDefault, global::System.String nameFormat, global::System.String dateFormat, global::System.String timeFormat, global::System.String comments, Nullable<global::System.Int32> teamMember, Nullable<global::System.Int32> sourceRowOffset)
        {
            ObjectParameter downloadTemplateMappingIDParameter;
            if (downloadTemplateMappingID.HasValue)
            {
                downloadTemplateMappingIDParameter = new ObjectParameter("DownloadTemplateMappingID", downloadTemplateMappingID);
            }
            else
            {
                downloadTemplateMappingIDParameter = new ObjectParameter("DownloadTemplateMappingID", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceColumnNameParameter;
            if (sourceColumnName != null)
            {
                sourceColumnNameParameter = new ObjectParameter("SourceColumnName", sourceColumnName);
            }
            else
            {
                sourceColumnNameParameter = new ObjectParameter("SourceColumnName", typeof(global::System.String));
            }
    
            ObjectParameter sourceColumnParameter;
            if (sourceColumn != null)
            {
                sourceColumnParameter = new ObjectParameter("SourceColumn", sourceColumn);
            }
            else
            {
                sourceColumnParameter = new ObjectParameter("SourceColumn", typeof(global::System.String));
            }
    
            ObjectParameter sourceDefaultParameter;
            if (sourceDefault != null)
            {
                sourceDefaultParameter = new ObjectParameter("SourceDefault", sourceDefault);
            }
            else
            {
                sourceDefaultParameter = new ObjectParameter("SourceDefault", typeof(global::System.String));
            }
    
            ObjectParameter nameFormatParameter;
            if (nameFormat != null)
            {
                nameFormatParameter = new ObjectParameter("NameFormat", nameFormat);
            }
            else
            {
                nameFormatParameter = new ObjectParameter("NameFormat", typeof(global::System.String));
            }
    
            ObjectParameter dateFormatParameter;
            if (dateFormat != null)
            {
                dateFormatParameter = new ObjectParameter("DateFormat", dateFormat);
            }
            else
            {
                dateFormatParameter = new ObjectParameter("DateFormat", typeof(global::System.String));
            }
    
            ObjectParameter timeFormatParameter;
            if (timeFormat != null)
            {
                timeFormatParameter = new ObjectParameter("TimeFormat", timeFormat);
            }
            else
            {
                timeFormatParameter = new ObjectParameter("TimeFormat", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter teamMemberParameter;
            if (teamMember.HasValue)
            {
                teamMemberParameter = new ObjectParameter("TeamMember", teamMember);
            }
            else
            {
                teamMemberParameter = new ObjectParameter("TeamMember", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceRowOffsetParameter;
            if (sourceRowOffset.HasValue)
            {
                sourceRowOffsetParameter = new ObjectParameter("SourceRowOffset", sourceRowOffset);
            }
            else
            {
                sourceRowOffsetParameter = new ObjectParameter("SourceRowOffset", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateDownloadTemplateMapping", downloadTemplateMappingIDParameter, sourceColumnNameParameter, sourceColumnParameter, sourceDefaultParameter, nameFormatParameter, dateFormatParameter, timeFormatParameter, commentsParameter, teamMemberParameter, sourceRowOffsetParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="downloadSourceType">No Metadata Documentation available.</param>
        /// <param name="downloadTemplateID">No Metadata Documentation available.</param>
        /// <param name="downloadSourceID">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="approved">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        /// <param name="eventDate">No Metadata Documentation available.</param>
        /// <param name="eventDescription">No Metadata Documentation available.</param>
        /// <param name="benchmarkTypeID">No Metadata Documentation available.</param>
        /// <param name="sourceRow">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="teamName">No Metadata Documentation available.</param>
        /// <param name="teamID">No Metadata Documentation available.</param>
        /// <param name="position">No Metadata Documentation available.</param>
        /// <param name="perfValue">No Metadata Documentation available.</param>
        /// <param name="perfTime">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddResultStaging(global::System.String downloadSourceType, Nullable<global::System.Int32> downloadTemplateID, Nullable<global::System.Int32> downloadSourceID, global::System.String status, Nullable<global::System.Boolean> approved, global::System.String sportID, Nullable<global::System.Int32> competitionID, Nullable<global::System.DateTime> eventDate, global::System.String eventDescription, Nullable<global::System.Int32> benchmarkTypeID, Nullable<global::System.Int32> sourceRow, global::System.String countryID, global::System.String teamName, Nullable<global::System.Int32> teamID, Nullable<global::System.Int32> position, Nullable<global::System.Decimal> perfValue, Nullable<global::System.TimeSpan> perfTime, global::System.String comments)
        {
            ObjectParameter downloadSourceTypeParameter;
            if (downloadSourceType != null)
            {
                downloadSourceTypeParameter = new ObjectParameter("DownloadSourceType", downloadSourceType);
            }
            else
            {
                downloadSourceTypeParameter = new ObjectParameter("DownloadSourceType", typeof(global::System.String));
            }
    
            ObjectParameter downloadTemplateIDParameter;
            if (downloadTemplateID.HasValue)
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", downloadTemplateID);
            }
            else
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", typeof(global::System.Int32));
            }
    
            ObjectParameter downloadSourceIDParameter;
            if (downloadSourceID.HasValue)
            {
                downloadSourceIDParameter = new ObjectParameter("DownloadSourceID", downloadSourceID);
            }
            else
            {
                downloadSourceIDParameter = new ObjectParameter("DownloadSourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter approvedParameter;
            if (approved.HasValue)
            {
                approvedParameter = new ObjectParameter("Approved", approved);
            }
            else
            {
                approvedParameter = new ObjectParameter("Approved", typeof(global::System.Boolean));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            ObjectParameter eventDateParameter;
            if (eventDate.HasValue)
            {
                eventDateParameter = new ObjectParameter("EventDate", eventDate);
            }
            else
            {
                eventDateParameter = new ObjectParameter("EventDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter eventDescriptionParameter;
            if (eventDescription != null)
            {
                eventDescriptionParameter = new ObjectParameter("EventDescription", eventDescription);
            }
            else
            {
                eventDescriptionParameter = new ObjectParameter("EventDescription", typeof(global::System.String));
            }
    
            ObjectParameter benchmarkTypeIDParameter;
            if (benchmarkTypeID.HasValue)
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", benchmarkTypeID);
            }
            else
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceRowParameter;
            if (sourceRow.HasValue)
            {
                sourceRowParameter = new ObjectParameter("SourceRow", sourceRow);
            }
            else
            {
                sourceRowParameter = new ObjectParameter("SourceRow", typeof(global::System.Int32));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID != null)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.String));
            }
    
            ObjectParameter teamNameParameter;
            if (teamName != null)
            {
                teamNameParameter = new ObjectParameter("TeamName", teamName);
            }
            else
            {
                teamNameParameter = new ObjectParameter("TeamName", typeof(global::System.String));
            }
    
            ObjectParameter teamIDParameter;
            if (teamID.HasValue)
            {
                teamIDParameter = new ObjectParameter("TeamID", teamID);
            }
            else
            {
                teamIDParameter = new ObjectParameter("TeamID", typeof(global::System.Int32));
            }
    
            ObjectParameter positionParameter;
            if (position.HasValue)
            {
                positionParameter = new ObjectParameter("Position", position);
            }
            else
            {
                positionParameter = new ObjectParameter("Position", typeof(global::System.Int32));
            }
    
            ObjectParameter perfValueParameter;
            if (perfValue.HasValue)
            {
                perfValueParameter = new ObjectParameter("PerfValue", perfValue);
            }
            else
            {
                perfValueParameter = new ObjectParameter("PerfValue", typeof(global::System.Decimal));
            }
    
            ObjectParameter perfTimeParameter;
            if (perfTime.HasValue)
            {
                perfTimeParameter = new ObjectParameter("PerfTime", perfTime);
            }
            else
            {
                perfTimeParameter = new ObjectParameter("PerfTime", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddResultStaging", downloadSourceTypeParameter, downloadTemplateIDParameter, downloadSourceIDParameter, statusParameter, approvedParameter, sportIDParameter, competitionIDParameter, eventDateParameter, eventDescriptionParameter, benchmarkTypeIDParameter, sourceRowParameter, countryIDParameter, teamNameParameter, teamIDParameter, positionParameter, perfValueParameter, perfTimeParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resultStagingID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteResultStaging(Nullable<global::System.Int32> resultStagingID)
        {
            ObjectParameter resultStagingIDParameter;
            if (resultStagingID.HasValue)
            {
                resultStagingIDParameter = new ObjectParameter("ResultStagingID", resultStagingID);
            }
            else
            {
                resultStagingIDParameter = new ObjectParameter("ResultStagingID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteResultStaging", resultStagingIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resultStagingID">No Metadata Documentation available.</param>
        /// <param name="downloadSourceType">No Metadata Documentation available.</param>
        /// <param name="downloadTemplateID">No Metadata Documentation available.</param>
        /// <param name="downloadSourceID">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="approved">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        /// <param name="eventDate">No Metadata Documentation available.</param>
        /// <param name="eventDescription">No Metadata Documentation available.</param>
        /// <param name="benchmarkTypeID">No Metadata Documentation available.</param>
        /// <param name="sourceRow">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="teamName">No Metadata Documentation available.</param>
        /// <param name="teamID">No Metadata Documentation available.</param>
        /// <param name="position">No Metadata Documentation available.</param>
        /// <param name="perfValue">No Metadata Documentation available.</param>
        /// <param name="perfTime">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateResultStaging(Nullable<global::System.Int32> resultStagingID, global::System.String downloadSourceType, Nullable<global::System.Int32> downloadTemplateID, Nullable<global::System.Int32> downloadSourceID, global::System.String status, Nullable<global::System.Boolean> approved, global::System.String sportID, Nullable<global::System.Int32> competitionID, Nullable<global::System.DateTime> eventDate, global::System.String eventDescription, Nullable<global::System.Int32> benchmarkTypeID, Nullable<global::System.Int32> sourceRow, global::System.String countryID, global::System.String teamName, Nullable<global::System.Int32> teamID, Nullable<global::System.Int32> position, Nullable<global::System.Decimal> perfValue, Nullable<global::System.TimeSpan> perfTime, global::System.String comments)
        {
            ObjectParameter resultStagingIDParameter;
            if (resultStagingID.HasValue)
            {
                resultStagingIDParameter = new ObjectParameter("ResultStagingID", resultStagingID);
            }
            else
            {
                resultStagingIDParameter = new ObjectParameter("ResultStagingID", typeof(global::System.Int32));
            }
    
            ObjectParameter downloadSourceTypeParameter;
            if (downloadSourceType != null)
            {
                downloadSourceTypeParameter = new ObjectParameter("DownloadSourceType", downloadSourceType);
            }
            else
            {
                downloadSourceTypeParameter = new ObjectParameter("DownloadSourceType", typeof(global::System.String));
            }
    
            ObjectParameter downloadTemplateIDParameter;
            if (downloadTemplateID.HasValue)
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", downloadTemplateID);
            }
            else
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", typeof(global::System.Int32));
            }
    
            ObjectParameter downloadSourceIDParameter;
            if (downloadSourceID.HasValue)
            {
                downloadSourceIDParameter = new ObjectParameter("DownloadSourceID", downloadSourceID);
            }
            else
            {
                downloadSourceIDParameter = new ObjectParameter("DownloadSourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter approvedParameter;
            if (approved.HasValue)
            {
                approvedParameter = new ObjectParameter("Approved", approved);
            }
            else
            {
                approvedParameter = new ObjectParameter("Approved", typeof(global::System.Boolean));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            ObjectParameter eventDateParameter;
            if (eventDate.HasValue)
            {
                eventDateParameter = new ObjectParameter("EventDate", eventDate);
            }
            else
            {
                eventDateParameter = new ObjectParameter("EventDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter eventDescriptionParameter;
            if (eventDescription != null)
            {
                eventDescriptionParameter = new ObjectParameter("EventDescription", eventDescription);
            }
            else
            {
                eventDescriptionParameter = new ObjectParameter("EventDescription", typeof(global::System.String));
            }
    
            ObjectParameter benchmarkTypeIDParameter;
            if (benchmarkTypeID.HasValue)
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", benchmarkTypeID);
            }
            else
            {
                benchmarkTypeIDParameter = new ObjectParameter("BenchmarkTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceRowParameter;
            if (sourceRow.HasValue)
            {
                sourceRowParameter = new ObjectParameter("SourceRow", sourceRow);
            }
            else
            {
                sourceRowParameter = new ObjectParameter("SourceRow", typeof(global::System.Int32));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID != null)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.String));
            }
    
            ObjectParameter teamNameParameter;
            if (teamName != null)
            {
                teamNameParameter = new ObjectParameter("TeamName", teamName);
            }
            else
            {
                teamNameParameter = new ObjectParameter("TeamName", typeof(global::System.String));
            }
    
            ObjectParameter teamIDParameter;
            if (teamID.HasValue)
            {
                teamIDParameter = new ObjectParameter("TeamID", teamID);
            }
            else
            {
                teamIDParameter = new ObjectParameter("TeamID", typeof(global::System.Int32));
            }
    
            ObjectParameter positionParameter;
            if (position.HasValue)
            {
                positionParameter = new ObjectParameter("Position", position);
            }
            else
            {
                positionParameter = new ObjectParameter("Position", typeof(global::System.Int32));
            }
    
            ObjectParameter perfValueParameter;
            if (perfValue.HasValue)
            {
                perfValueParameter = new ObjectParameter("PerfValue", perfValue);
            }
            else
            {
                perfValueParameter = new ObjectParameter("PerfValue", typeof(global::System.Decimal));
            }
    
            ObjectParameter perfTimeParameter;
            if (perfTime.HasValue)
            {
                perfTimeParameter = new ObjectParameter("PerfTime", perfTime);
            }
            else
            {
                perfTimeParameter = new ObjectParameter("PerfTime", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateResultStaging", resultStagingIDParameter, downloadSourceTypeParameter, downloadTemplateIDParameter, downloadSourceIDParameter, statusParameter, approvedParameter, sportIDParameter, competitionIDParameter, eventDateParameter, eventDescriptionParameter, benchmarkTypeIDParameter, sourceRowParameter, countryIDParameter, teamNameParameter, teamIDParameter, positionParameter, perfValueParameter, perfTimeParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="downloadTemplateID">No Metadata Documentation available.</param>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        public ObjectResult<uspLoadDownloadStagingResults_Result> uspLoadDownloadStagingResults(Nullable<global::System.Int32> downloadTemplateID, Nullable<global::System.Int32> competitionID)
        {
            ObjectParameter downloadTemplateIDParameter;
            if (downloadTemplateID.HasValue)
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", downloadTemplateID);
            }
            else
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", typeof(global::System.Int32));
            }
    
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<uspLoadDownloadStagingResults_Result>("uspLoadDownloadStagingResults", downloadTemplateIDParameter, competitionIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="teamTypeID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddTeam(global::System.String teamTypeID, global::System.String sportID, global::System.String countryID, global::System.String name_EN, global::System.String name_FR, global::System.String comments)
        {
            ObjectParameter teamTypeIDParameter;
            if (teamTypeID != null)
            {
                teamTypeIDParameter = new ObjectParameter("TeamTypeID", teamTypeID);
            }
            else
            {
                teamTypeIDParameter = new ObjectParameter("TeamTypeID", typeof(global::System.String));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID != null)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.String));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddTeam", teamTypeIDParameter, sportIDParameter, countryIDParameter, name_ENParameter, name_FRParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="teamID">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddTeamMember(Nullable<global::System.Int32> teamID, Nullable<global::System.Int32> resourceID, global::System.String comments)
        {
            ObjectParameter teamIDParameter;
            if (teamID.HasValue)
            {
                teamIDParameter = new ObjectParameter("TeamID", teamID);
            }
            else
            {
                teamIDParameter = new ObjectParameter("TeamID", typeof(global::System.Int32));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddTeamMember", teamIDParameter, resourceIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="teamID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteTeam(Nullable<global::System.Int32> teamID)
        {
            ObjectParameter teamIDParameter;
            if (teamID.HasValue)
            {
                teamIDParameter = new ObjectParameter("TeamID", teamID);
            }
            else
            {
                teamIDParameter = new ObjectParameter("TeamID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteTeam", teamIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="teamResourceID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteTeamMember(Nullable<global::System.Int32> teamResourceID)
        {
            ObjectParameter teamResourceIDParameter;
            if (teamResourceID.HasValue)
            {
                teamResourceIDParameter = new ObjectParameter("TeamResourceID", teamResourceID);
            }
            else
            {
                teamResourceIDParameter = new ObjectParameter("TeamResourceID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteTeamMember", teamResourceIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="teamID">No Metadata Documentation available.</param>
        /// <param name="teamTypeID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="countryID">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateTeam(Nullable<global::System.Int32> teamID, global::System.String teamTypeID, global::System.String sportID, global::System.String countryID, global::System.String name_EN, global::System.String name_FR, global::System.String comments)
        {
            ObjectParameter teamIDParameter;
            if (teamID.HasValue)
            {
                teamIDParameter = new ObjectParameter("TeamID", teamID);
            }
            else
            {
                teamIDParameter = new ObjectParameter("TeamID", typeof(global::System.Int32));
            }
    
            ObjectParameter teamTypeIDParameter;
            if (teamTypeID != null)
            {
                teamTypeIDParameter = new ObjectParameter("TeamTypeID", teamTypeID);
            }
            else
            {
                teamTypeIDParameter = new ObjectParameter("TeamTypeID", typeof(global::System.String));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter countryIDParameter;
            if (countryID != null)
            {
                countryIDParameter = new ObjectParameter("CountryID", countryID);
            }
            else
            {
                countryIDParameter = new ObjectParameter("CountryID", typeof(global::System.String));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateTeam", teamIDParameter, teamTypeIDParameter, sportIDParameter, countryIDParameter, name_ENParameter, name_FRParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="teamResourceID">No Metadata Documentation available.</param>
        /// <param name="teamID">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateTeamMember(Nullable<global::System.Int32> teamResourceID, Nullable<global::System.Int32> teamID, Nullable<global::System.Int32> resourceID, global::System.String comments)
        {
            ObjectParameter teamResourceIDParameter;
            if (teamResourceID.HasValue)
            {
                teamResourceIDParameter = new ObjectParameter("TeamResourceID", teamResourceID);
            }
            else
            {
                teamResourceIDParameter = new ObjectParameter("TeamResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter teamIDParameter;
            if (teamID.HasValue)
            {
                teamIDParameter = new ObjectParameter("TeamID", teamID);
            }
            else
            {
                teamIDParameter = new ObjectParameter("TeamID", typeof(global::System.Int32));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateTeamMember", teamResourceIDParameter, teamIDParameter, resourceIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        /// <param name="sportIDSelect">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> uspLoadResultStagingResults(Nullable<global::System.Int32> competitionID, global::System.String sportIDSelect)
        {
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportIDSelectParameter;
            if (sportIDSelect != null)
            {
                sportIDSelectParameter = new ObjectParameter("SportIDSelect", sportIDSelect);
            }
            else
            {
                sportIDSelectParameter = new ObjectParameter("SportIDSelect", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("uspLoadResultStagingResults", competitionIDParameter, sportIDSelectParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        /// <param name="fromStatus">No Metadata Documentation available.</param>
        /// <param name="toStatus">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateResultStagingStatus(global::System.String sportID, Nullable<global::System.Int32> competitionID, global::System.String fromStatus, global::System.String toStatus)
        {
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            ObjectParameter fromStatusParameter;
            if (fromStatus != null)
            {
                fromStatusParameter = new ObjectParameter("FromStatus", fromStatus);
            }
            else
            {
                fromStatusParameter = new ObjectParameter("FromStatus", typeof(global::System.String));
            }
    
            ObjectParameter toStatusParameter;
            if (toStatus != null)
            {
                toStatusParameter = new ObjectParameter("ToStatus", toStatus);
            }
            else
            {
                toStatusParameter = new ObjectParameter("ToStatus", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateResultStagingStatus", sportIDParameter, competitionIDParameter, fromStatusParameter, toStatusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUnloadResultStagingResults(Nullable<global::System.Int32> competitionID)
        {
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUnloadResultStagingResults", competitionIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="organizationTypeID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="versionID">No Metadata Documentation available.</param>
        /// <param name="versionPhase">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddEvaluationVersion(global::System.String organizationTypeID, global::System.String yearID, global::System.String versionID, global::System.String versionPhase, global::System.String name_EN, global::System.String name_FR, global::System.String comments)
        {
            ObjectParameter organizationTypeIDParameter;
            if (organizationTypeID != null)
            {
                organizationTypeIDParameter = new ObjectParameter("OrganizationTypeID", organizationTypeID);
            }
            else
            {
                organizationTypeIDParameter = new ObjectParameter("OrganizationTypeID", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter versionIDParameter;
            if (versionID != null)
            {
                versionIDParameter = new ObjectParameter("VersionID", versionID);
            }
            else
            {
                versionIDParameter = new ObjectParameter("VersionID", typeof(global::System.String));
            }
    
            ObjectParameter versionPhaseParameter;
            if (versionPhase != null)
            {
                versionPhaseParameter = new ObjectParameter("VersionPhase", versionPhase);
            }
            else
            {
                versionPhaseParameter = new ObjectParameter("VersionPhase", typeof(global::System.String));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddEvaluationVersion", organizationTypeIDParameter, yearIDParameter, versionIDParameter, versionPhaseParameter, name_ENParameter, name_FRParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationVersionID">No Metadata Documentation available.</param>
        /// <param name="organizationTypeID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="versionID">No Metadata Documentation available.</param>
        /// <param name="versionPhase">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateEvaluationVersion(Nullable<global::System.Int32> evaluationVersionID, global::System.String organizationTypeID, global::System.String yearID, global::System.String versionID, global::System.String versionPhase, global::System.String name_EN, global::System.String name_FR, global::System.String comments)
        {
            ObjectParameter evaluationVersionIDParameter;
            if (evaluationVersionID.HasValue)
            {
                evaluationVersionIDParameter = new ObjectParameter("EvaluationVersionID", evaluationVersionID);
            }
            else
            {
                evaluationVersionIDParameter = new ObjectParameter("EvaluationVersionID", typeof(global::System.Int32));
            }
    
            ObjectParameter organizationTypeIDParameter;
            if (organizationTypeID != null)
            {
                organizationTypeIDParameter = new ObjectParameter("OrganizationTypeID", organizationTypeID);
            }
            else
            {
                organizationTypeIDParameter = new ObjectParameter("OrganizationTypeID", typeof(global::System.String));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter versionIDParameter;
            if (versionID != null)
            {
                versionIDParameter = new ObjectParameter("VersionID", versionID);
            }
            else
            {
                versionIDParameter = new ObjectParameter("VersionID", typeof(global::System.String));
            }
    
            ObjectParameter versionPhaseParameter;
            if (versionPhase != null)
            {
                versionPhaseParameter = new ObjectParameter("VersionPhase", versionPhase);
            }
            else
            {
                versionPhaseParameter = new ObjectParameter("VersionPhase", typeof(global::System.String));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateEvaluationVersion", evaluationVersionIDParameter, organizationTypeIDParameter, yearIDParameter, versionIDParameter, versionPhaseParameter, name_ENParameter, name_FRParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="competitionID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDiscardResultStagingResults(global::System.String sportID, Nullable<global::System.Int32> competitionID)
        {
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter competitionIDParameter;
            if (competitionID.HasValue)
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", competitionID);
            }
            else
            {
                competitionIDParameter = new ObjectParameter("CompetitionID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDiscardResultStagingResults", sportIDParameter, competitionIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationVersionID">No Metadata Documentation available.</param>
        /// <param name="evaluationMasterPillarID">No Metadata Documentation available.</param>
        /// <param name="versionQuestion">No Metadata Documentation available.</param>
        /// <param name="questionPhase">No Metadata Documentation available.</param>
        /// <param name="sortOrder">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddEvaluationVersionQuestion(Nullable<global::System.Int32> evaluationVersionID, global::System.String evaluationMasterPillarID, global::System.String versionQuestion, global::System.String questionPhase, Nullable<global::System.Int32> sortOrder, global::System.String comments, global::System.String sportID)
        {
            ObjectParameter evaluationVersionIDParameter;
            if (evaluationVersionID.HasValue)
            {
                evaluationVersionIDParameter = new ObjectParameter("EvaluationVersionID", evaluationVersionID);
            }
            else
            {
                evaluationVersionIDParameter = new ObjectParameter("EvaluationVersionID", typeof(global::System.Int32));
            }
    
            ObjectParameter evaluationMasterPillarIDParameter;
            if (evaluationMasterPillarID != null)
            {
                evaluationMasterPillarIDParameter = new ObjectParameter("EvaluationMasterPillarID", evaluationMasterPillarID);
            }
            else
            {
                evaluationMasterPillarIDParameter = new ObjectParameter("EvaluationMasterPillarID", typeof(global::System.String));
            }
    
            ObjectParameter versionQuestionParameter;
            if (versionQuestion != null)
            {
                versionQuestionParameter = new ObjectParameter("VersionQuestion", versionQuestion);
            }
            else
            {
                versionQuestionParameter = new ObjectParameter("VersionQuestion", typeof(global::System.String));
            }
    
            ObjectParameter questionPhaseParameter;
            if (questionPhase != null)
            {
                questionPhaseParameter = new ObjectParameter("QuestionPhase", questionPhase);
            }
            else
            {
                questionPhaseParameter = new ObjectParameter("QuestionPhase", typeof(global::System.String));
            }
    
            ObjectParameter sortOrderParameter;
            if (sortOrder.HasValue)
            {
                sortOrderParameter = new ObjectParameter("SortOrder", sortOrder);
            }
            else
            {
                sortOrderParameter = new ObjectParameter("SortOrder", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddEvaluationVersionQuestion", evaluationVersionIDParameter, evaluationMasterPillarIDParameter, versionQuestionParameter, questionPhaseParameter, sortOrderParameter, commentsParameter, sportIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationVersionQuestionID">No Metadata Documentation available.</param>
        /// <param name="versionQuestion">No Metadata Documentation available.</param>
        /// <param name="questionPhase">No Metadata Documentation available.</param>
        /// <param name="sortOrder">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateEvaluationVersionQuestion(Nullable<global::System.Int32> evaluationVersionQuestionID, global::System.String versionQuestion, global::System.String questionPhase, Nullable<global::System.Int32> sortOrder, global::System.String comments, global::System.String sportID)
        {
            ObjectParameter evaluationVersionQuestionIDParameter;
            if (evaluationVersionQuestionID.HasValue)
            {
                evaluationVersionQuestionIDParameter = new ObjectParameter("EvaluationVersionQuestionID", evaluationVersionQuestionID);
            }
            else
            {
                evaluationVersionQuestionIDParameter = new ObjectParameter("EvaluationVersionQuestionID", typeof(global::System.Int32));
            }
    
            ObjectParameter versionQuestionParameter;
            if (versionQuestion != null)
            {
                versionQuestionParameter = new ObjectParameter("VersionQuestion", versionQuestion);
            }
            else
            {
                versionQuestionParameter = new ObjectParameter("VersionQuestion", typeof(global::System.String));
            }
    
            ObjectParameter questionPhaseParameter;
            if (questionPhase != null)
            {
                questionPhaseParameter = new ObjectParameter("QuestionPhase", questionPhase);
            }
            else
            {
                questionPhaseParameter = new ObjectParameter("QuestionPhase", typeof(global::System.String));
            }
    
            ObjectParameter sortOrderParameter;
            if (sortOrder.HasValue)
            {
                sortOrderParameter = new ObjectParameter("SortOrder", sortOrder);
            }
            else
            {
                sortOrderParameter = new ObjectParameter("SortOrder", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateEvaluationVersionQuestion", evaluationVersionQuestionIDParameter, versionQuestionParameter, questionPhaseParameter, sortOrderParameter, commentsParameter, sportIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationID">No Metadata Documentation available.</param>
        /// <param name="evaluationMasterPillarID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddEvaluationBestPractice(Nullable<global::System.Int32> evaluationID, global::System.String evaluationMasterPillarID, global::System.String sportID, global::System.String description, global::System.String comments)
        {
            ObjectParameter evaluationIDParameter;
            if (evaluationID.HasValue)
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", evaluationID);
            }
            else
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", typeof(global::System.Int32));
            }
    
            ObjectParameter evaluationMasterPillarIDParameter;
            if (evaluationMasterPillarID != null)
            {
                evaluationMasterPillarIDParameter = new ObjectParameter("EvaluationMasterPillarID", evaluationMasterPillarID);
            }
            else
            {
                evaluationMasterPillarIDParameter = new ObjectParameter("EvaluationMasterPillarID", typeof(global::System.String));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddEvaluationBestPractice", evaluationIDParameter, evaluationMasterPillarIDParameter, sportIDParameter, descriptionParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationID">No Metadata Documentation available.</param>
        /// <param name="evaluationVersionQuestionID">No Metadata Documentation available.</param>
        /// <param name="notApplicable">No Metadata Documentation available.</param>
        /// <param name="hPAAssessmentInitial">No Metadata Documentation available.</param>
        /// <param name="evaluationStatusInitial">No Metadata Documentation available.</param>
        /// <param name="hPAAssessmentCurrent">No Metadata Documentation available.</param>
        /// <param name="evaluationStatusCurrent">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddEvaluationQuestion(Nullable<global::System.Int32> evaluationID, Nullable<global::System.Int32> evaluationVersionQuestionID, Nullable<global::System.Boolean> notApplicable, global::System.String hPAAssessmentInitial, global::System.String evaluationStatusInitial, global::System.String hPAAssessmentCurrent, global::System.String evaluationStatusCurrent, global::System.String comments)
        {
            ObjectParameter evaluationIDParameter;
            if (evaluationID.HasValue)
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", evaluationID);
            }
            else
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", typeof(global::System.Int32));
            }
    
            ObjectParameter evaluationVersionQuestionIDParameter;
            if (evaluationVersionQuestionID.HasValue)
            {
                evaluationVersionQuestionIDParameter = new ObjectParameter("EvaluationVersionQuestionID", evaluationVersionQuestionID);
            }
            else
            {
                evaluationVersionQuestionIDParameter = new ObjectParameter("EvaluationVersionQuestionID", typeof(global::System.Int32));
            }
    
            ObjectParameter notApplicableParameter;
            if (notApplicable.HasValue)
            {
                notApplicableParameter = new ObjectParameter("NotApplicable", notApplicable);
            }
            else
            {
                notApplicableParameter = new ObjectParameter("NotApplicable", typeof(global::System.Boolean));
            }
    
            ObjectParameter hPAAssessmentInitialParameter;
            if (hPAAssessmentInitial != null)
            {
                hPAAssessmentInitialParameter = new ObjectParameter("HPAAssessmentInitial", hPAAssessmentInitial);
            }
            else
            {
                hPAAssessmentInitialParameter = new ObjectParameter("HPAAssessmentInitial", typeof(global::System.String));
            }
    
            ObjectParameter evaluationStatusInitialParameter;
            if (evaluationStatusInitial != null)
            {
                evaluationStatusInitialParameter = new ObjectParameter("EvaluationStatusInitial", evaluationStatusInitial);
            }
            else
            {
                evaluationStatusInitialParameter = new ObjectParameter("EvaluationStatusInitial", typeof(global::System.String));
            }
    
            ObjectParameter hPAAssessmentCurrentParameter;
            if (hPAAssessmentCurrent != null)
            {
                hPAAssessmentCurrentParameter = new ObjectParameter("HPAAssessmentCurrent", hPAAssessmentCurrent);
            }
            else
            {
                hPAAssessmentCurrentParameter = new ObjectParameter("HPAAssessmentCurrent", typeof(global::System.String));
            }
    
            ObjectParameter evaluationStatusCurrentParameter;
            if (evaluationStatusCurrent != null)
            {
                evaluationStatusCurrentParameter = new ObjectParameter("EvaluationStatusCurrent", evaluationStatusCurrent);
            }
            else
            {
                evaluationStatusCurrentParameter = new ObjectParameter("EvaluationStatusCurrent", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddEvaluationQuestion", evaluationIDParameter, evaluationVersionQuestionIDParameter, notApplicableParameter, hPAAssessmentInitialParameter, evaluationStatusInitialParameter, hPAAssessmentCurrentParameter, evaluationStatusCurrentParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationBestPracticeID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteEvaluationBestPractice(Nullable<global::System.Int32> evaluationBestPracticeID)
        {
            ObjectParameter evaluationBestPracticeIDParameter;
            if (evaluationBestPracticeID.HasValue)
            {
                evaluationBestPracticeIDParameter = new ObjectParameter("EvaluationBestPracticeID", evaluationBestPracticeID);
            }
            else
            {
                evaluationBestPracticeIDParameter = new ObjectParameter("EvaluationBestPracticeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteEvaluationBestPractice", evaluationBestPracticeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationBestPracticeID">No Metadata Documentation available.</param>
        /// <param name="evaluationID">No Metadata Documentation available.</param>
        /// <param name="evaluationMasterPillarID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateEvaluationBestPractice(Nullable<global::System.Int32> evaluationBestPracticeID, Nullable<global::System.Int32> evaluationID, global::System.String evaluationMasterPillarID, global::System.String sportID, global::System.String description, global::System.String comments)
        {
            ObjectParameter evaluationBestPracticeIDParameter;
            if (evaluationBestPracticeID.HasValue)
            {
                evaluationBestPracticeIDParameter = new ObjectParameter("EvaluationBestPracticeID", evaluationBestPracticeID);
            }
            else
            {
                evaluationBestPracticeIDParameter = new ObjectParameter("EvaluationBestPracticeID", typeof(global::System.Int32));
            }
    
            ObjectParameter evaluationIDParameter;
            if (evaluationID.HasValue)
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", evaluationID);
            }
            else
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", typeof(global::System.Int32));
            }
    
            ObjectParameter evaluationMasterPillarIDParameter;
            if (evaluationMasterPillarID != null)
            {
                evaluationMasterPillarIDParameter = new ObjectParameter("EvaluationMasterPillarID", evaluationMasterPillarID);
            }
            else
            {
                evaluationMasterPillarIDParameter = new ObjectParameter("EvaluationMasterPillarID", typeof(global::System.String));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateEvaluationBestPractice", evaluationBestPracticeIDParameter, evaluationIDParameter, evaluationMasterPillarIDParameter, sportIDParameter, descriptionParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationQuestionID">No Metadata Documentation available.</param>
        /// <param name="evaluationID">No Metadata Documentation available.</param>
        /// <param name="evaluationVersionQuestionID">No Metadata Documentation available.</param>
        /// <param name="notApplicable">No Metadata Documentation available.</param>
        /// <param name="hPAAssessmentInitial">No Metadata Documentation available.</param>
        /// <param name="evaluationStatusInitial">No Metadata Documentation available.</param>
        /// <param name="hPAAssessmentCurrent">No Metadata Documentation available.</param>
        /// <param name="evaluationStatusCurrent">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateEvaluationQuestion(Nullable<global::System.Int32> evaluationQuestionID, Nullable<global::System.Int32> evaluationID, Nullable<global::System.Int32> evaluationVersionQuestionID, Nullable<global::System.Boolean> notApplicable, global::System.String hPAAssessmentInitial, global::System.String evaluationStatusInitial, global::System.String hPAAssessmentCurrent, global::System.String evaluationStatusCurrent, global::System.String comments)
        {
            ObjectParameter evaluationQuestionIDParameter;
            if (evaluationQuestionID.HasValue)
            {
                evaluationQuestionIDParameter = new ObjectParameter("EvaluationQuestionID", evaluationQuestionID);
            }
            else
            {
                evaluationQuestionIDParameter = new ObjectParameter("EvaluationQuestionID", typeof(global::System.Int32));
            }
    
            ObjectParameter evaluationIDParameter;
            if (evaluationID.HasValue)
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", evaluationID);
            }
            else
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", typeof(global::System.Int32));
            }
    
            ObjectParameter evaluationVersionQuestionIDParameter;
            if (evaluationVersionQuestionID.HasValue)
            {
                evaluationVersionQuestionIDParameter = new ObjectParameter("EvaluationVersionQuestionID", evaluationVersionQuestionID);
            }
            else
            {
                evaluationVersionQuestionIDParameter = new ObjectParameter("EvaluationVersionQuestionID", typeof(global::System.Int32));
            }
    
            ObjectParameter notApplicableParameter;
            if (notApplicable.HasValue)
            {
                notApplicableParameter = new ObjectParameter("NotApplicable", notApplicable);
            }
            else
            {
                notApplicableParameter = new ObjectParameter("NotApplicable", typeof(global::System.Boolean));
            }
    
            ObjectParameter hPAAssessmentInitialParameter;
            if (hPAAssessmentInitial != null)
            {
                hPAAssessmentInitialParameter = new ObjectParameter("HPAAssessmentInitial", hPAAssessmentInitial);
            }
            else
            {
                hPAAssessmentInitialParameter = new ObjectParameter("HPAAssessmentInitial", typeof(global::System.String));
            }
    
            ObjectParameter evaluationStatusInitialParameter;
            if (evaluationStatusInitial != null)
            {
                evaluationStatusInitialParameter = new ObjectParameter("EvaluationStatusInitial", evaluationStatusInitial);
            }
            else
            {
                evaluationStatusInitialParameter = new ObjectParameter("EvaluationStatusInitial", typeof(global::System.String));
            }
    
            ObjectParameter hPAAssessmentCurrentParameter;
            if (hPAAssessmentCurrent != null)
            {
                hPAAssessmentCurrentParameter = new ObjectParameter("HPAAssessmentCurrent", hPAAssessmentCurrent);
            }
            else
            {
                hPAAssessmentCurrentParameter = new ObjectParameter("HPAAssessmentCurrent", typeof(global::System.String));
            }
    
            ObjectParameter evaluationStatusCurrentParameter;
            if (evaluationStatusCurrent != null)
            {
                evaluationStatusCurrentParameter = new ObjectParameter("EvaluationStatusCurrent", evaluationStatusCurrent);
            }
            else
            {
                evaluationStatusCurrentParameter = new ObjectParameter("EvaluationStatusCurrent", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateEvaluationQuestion", evaluationQuestionIDParameter, evaluationIDParameter, evaluationVersionQuestionIDParameter, notApplicableParameter, hPAAssessmentInitialParameter, evaluationStatusInitialParameter, hPAAssessmentCurrentParameter, evaluationStatusCurrentParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationVersionID">No Metadata Documentation available.</param>
        /// <param name="yearID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspCopyEvaluationVersion(Nullable<global::System.Int32> evaluationVersionID, global::System.String yearID)
        {
            ObjectParameter evaluationVersionIDParameter;
            if (evaluationVersionID.HasValue)
            {
                evaluationVersionIDParameter = new ObjectParameter("EvaluationVersionID", evaluationVersionID);
            }
            else
            {
                evaluationVersionIDParameter = new ObjectParameter("EvaluationVersionID", typeof(global::System.Int32));
            }
    
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspCopyEvaluationVersion", evaluationVersionIDParameter, yearIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationID">No Metadata Documentation available.</param>
        /// <param name="evaluationVersionID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="evaluationPhase">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateEvaluation(Nullable<global::System.Int32> evaluationID, Nullable<global::System.Int32> evaluationVersionID, global::System.String sportID, global::System.String evaluationPhase, global::System.String comments)
        {
            ObjectParameter evaluationIDParameter;
            if (evaluationID.HasValue)
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", evaluationID);
            }
            else
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", typeof(global::System.Int32));
            }
    
            ObjectParameter evaluationVersionIDParameter;
            if (evaluationVersionID.HasValue)
            {
                evaluationVersionIDParameter = new ObjectParameter("EvaluationVersionID", evaluationVersionID);
            }
            else
            {
                evaluationVersionIDParameter = new ObjectParameter("EvaluationVersionID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter evaluationPhaseParameter;
            if (evaluationPhase != null)
            {
                evaluationPhaseParameter = new ObjectParameter("EvaluationPhase", evaluationPhase);
            }
            else
            {
                evaluationPhaseParameter = new ObjectParameter("EvaluationPhase", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateEvaluation", evaluationIDParameter, evaluationVersionIDParameter, sportIDParameter, evaluationPhaseParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationVersionID">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="evaluationPhase">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddEvaluation(Nullable<global::System.Int32> evaluationVersionID, global::System.String sportID, global::System.String evaluationPhase, global::System.String comments)
        {
            ObjectParameter evaluationVersionIDParameter;
            if (evaluationVersionID.HasValue)
            {
                evaluationVersionIDParameter = new ObjectParameter("EvaluationVersionID", evaluationVersionID);
            }
            else
            {
                evaluationVersionIDParameter = new ObjectParameter("EvaluationVersionID", typeof(global::System.Int32));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter evaluationPhaseParameter;
            if (evaluationPhase != null)
            {
                evaluationPhaseParameter = new ObjectParameter("EvaluationPhase", evaluationPhase);
            }
            else
            {
                evaluationPhaseParameter = new ObjectParameter("EvaluationPhase", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddEvaluation", evaluationVersionIDParameter, sportIDParameter, evaluationPhaseParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationVersionQuestionID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteEvaluationVersionQuestion(Nullable<global::System.Int32> evaluationVersionQuestionID)
        {
            ObjectParameter evaluationVersionQuestionIDParameter;
            if (evaluationVersionQuestionID.HasValue)
            {
                evaluationVersionQuestionIDParameter = new ObjectParameter("EvaluationVersionQuestionID", evaluationVersionQuestionID);
            }
            else
            {
                evaluationVersionQuestionIDParameter = new ObjectParameter("EvaluationVersionQuestionID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteEvaluationVersionQuestion", evaluationVersionQuestionIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="evaluationID">No Metadata Documentation available.</param>
        /// <param name="copyToEvaluationVersionID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspCopyEvaluation(Nullable<global::System.Int32> evaluationID, Nullable<global::System.Int32> copyToEvaluationVersionID)
        {
            ObjectParameter evaluationIDParameter;
            if (evaluationID.HasValue)
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", evaluationID);
            }
            else
            {
                evaluationIDParameter = new ObjectParameter("EvaluationID", typeof(global::System.Int32));
            }
    
            ObjectParameter copyToEvaluationVersionIDParameter;
            if (copyToEvaluationVersionID.HasValue)
            {
                copyToEvaluationVersionIDParameter = new ObjectParameter("CopyToEvaluationVersionID", copyToEvaluationVersionID);
            }
            else
            {
                copyToEvaluationVersionIDParameter = new ObjectParameter("CopyToEvaluationVersionID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspCopyEvaluation", evaluationIDParameter, copyToEvaluationVersionIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportViewID">No Metadata Documentation available.</param>
        public ObjectResult<uspGetReportFields_Result> uspGetReportFields(global::System.String reportViewID)
        {
            ObjectParameter reportViewIDParameter;
            if (reportViewID != null)
            {
                reportViewIDParameter = new ObjectParameter("ReportViewID", reportViewID);
            }
            else
            {
                reportViewIDParameter = new ObjectParameter("ReportViewID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<uspGetReportFields_Result>("uspGetReportFields", reportViewIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="description_EN">No Metadata Documentation available.</param>
        /// <param name="description_FR">No Metadata Documentation available.</param>
        /// <param name="locked">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="reportCategory">No Metadata Documentation available.</param>
        /// <param name="securityUserSport">No Metadata Documentation available.</param>
        /// <param name="reportViewID">No Metadata Documentation available.</param>
        /// <param name="securityUserProfileID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddAdhocReport(global::System.String name_EN, global::System.String name_FR, global::System.String description_EN, global::System.String description_FR, Nullable<global::System.Boolean> locked, global::System.String sportID, global::System.String comments, global::System.String reportCategory, Nullable<global::System.Boolean> securityUserSport, global::System.String reportViewID, global::System.String securityUserProfileID)
        {
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter description_ENParameter;
            if (description_EN != null)
            {
                description_ENParameter = new ObjectParameter("Description_EN", description_EN);
            }
            else
            {
                description_ENParameter = new ObjectParameter("Description_EN", typeof(global::System.String));
            }
    
            ObjectParameter description_FRParameter;
            if (description_FR != null)
            {
                description_FRParameter = new ObjectParameter("Description_FR", description_FR);
            }
            else
            {
                description_FRParameter = new ObjectParameter("Description_FR", typeof(global::System.String));
            }
    
            ObjectParameter lockedParameter;
            if (locked.HasValue)
            {
                lockedParameter = new ObjectParameter("Locked", locked);
            }
            else
            {
                lockedParameter = new ObjectParameter("Locked", typeof(global::System.Boolean));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter reportCategoryParameter;
            if (reportCategory != null)
            {
                reportCategoryParameter = new ObjectParameter("ReportCategory", reportCategory);
            }
            else
            {
                reportCategoryParameter = new ObjectParameter("ReportCategory", typeof(global::System.String));
            }
    
            ObjectParameter securityUserSportParameter;
            if (securityUserSport.HasValue)
            {
                securityUserSportParameter = new ObjectParameter("SecurityUserSport", securityUserSport);
            }
            else
            {
                securityUserSportParameter = new ObjectParameter("SecurityUserSport", typeof(global::System.Boolean));
            }
    
            ObjectParameter reportViewIDParameter;
            if (reportViewID != null)
            {
                reportViewIDParameter = new ObjectParameter("ReportViewID", reportViewID);
            }
            else
            {
                reportViewIDParameter = new ObjectParameter("ReportViewID", typeof(global::System.String));
            }
    
            ObjectParameter securityUserProfileIDParameter;
            if (securityUserProfileID != null)
            {
                securityUserProfileIDParameter = new ObjectParameter("SecurityUserProfileID", securityUserProfileID);
            }
            else
            {
                securityUserProfileIDParameter = new ObjectParameter("SecurityUserProfileID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddAdhocReport", name_ENParameter, name_FRParameter, description_ENParameter, description_FRParameter, lockedParameter, sportIDParameter, commentsParameter, reportCategoryParameter, securityUserSportParameter, reportViewIDParameter, securityUserProfileIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteAdhocReport(Nullable<global::System.Int32> reportID)
        {
            ObjectParameter reportIDParameter;
            if (reportID.HasValue)
            {
                reportIDParameter = new ObjectParameter("ReportID", reportID);
            }
            else
            {
                reportIDParameter = new ObjectParameter("ReportID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteAdhocReport", reportIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportID">No Metadata Documentation available.</param>
        /// <param name="name_EN">No Metadata Documentation available.</param>
        /// <param name="name_FR">No Metadata Documentation available.</param>
        /// <param name="description_EN">No Metadata Documentation available.</param>
        /// <param name="description_FR">No Metadata Documentation available.</param>
        /// <param name="locked">No Metadata Documentation available.</param>
        /// <param name="sportID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="reportCategory">No Metadata Documentation available.</param>
        /// <param name="securityUserSport">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateAdhocReport(Nullable<global::System.Int32> reportID, global::System.String name_EN, global::System.String name_FR, global::System.String description_EN, global::System.String description_FR, Nullable<global::System.Boolean> locked, global::System.String sportID, global::System.String comments, global::System.String reportCategory, Nullable<global::System.Boolean> securityUserSport)
        {
            ObjectParameter reportIDParameter;
            if (reportID.HasValue)
            {
                reportIDParameter = new ObjectParameter("ReportID", reportID);
            }
            else
            {
                reportIDParameter = new ObjectParameter("ReportID", typeof(global::System.Int32));
            }
    
            ObjectParameter name_ENParameter;
            if (name_EN != null)
            {
                name_ENParameter = new ObjectParameter("Name_EN", name_EN);
            }
            else
            {
                name_ENParameter = new ObjectParameter("Name_EN", typeof(global::System.String));
            }
    
            ObjectParameter name_FRParameter;
            if (name_FR != null)
            {
                name_FRParameter = new ObjectParameter("Name_FR", name_FR);
            }
            else
            {
                name_FRParameter = new ObjectParameter("Name_FR", typeof(global::System.String));
            }
    
            ObjectParameter description_ENParameter;
            if (description_EN != null)
            {
                description_ENParameter = new ObjectParameter("Description_EN", description_EN);
            }
            else
            {
                description_ENParameter = new ObjectParameter("Description_EN", typeof(global::System.String));
            }
    
            ObjectParameter description_FRParameter;
            if (description_FR != null)
            {
                description_FRParameter = new ObjectParameter("Description_FR", description_FR);
            }
            else
            {
                description_FRParameter = new ObjectParameter("Description_FR", typeof(global::System.String));
            }
    
            ObjectParameter lockedParameter;
            if (locked.HasValue)
            {
                lockedParameter = new ObjectParameter("Locked", locked);
            }
            else
            {
                lockedParameter = new ObjectParameter("Locked", typeof(global::System.Boolean));
            }
    
            ObjectParameter sportIDParameter;
            if (sportID != null)
            {
                sportIDParameter = new ObjectParameter("SportID", sportID);
            }
            else
            {
                sportIDParameter = new ObjectParameter("SportID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter reportCategoryParameter;
            if (reportCategory != null)
            {
                reportCategoryParameter = new ObjectParameter("ReportCategory", reportCategory);
            }
            else
            {
                reportCategoryParameter = new ObjectParameter("ReportCategory", typeof(global::System.String));
            }
    
            ObjectParameter securityUserSportParameter;
            if (securityUserSport.HasValue)
            {
                securityUserSportParameter = new ObjectParameter("SecurityUserSport", securityUserSport);
            }
            else
            {
                securityUserSportParameter = new ObjectParameter("SecurityUserSport", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateAdhocReport", reportIDParameter, name_ENParameter, name_FRParameter, description_ENParameter, description_FRParameter, lockedParameter, sportIDParameter, commentsParameter, reportCategoryParameter, securityUserSportParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportID">No Metadata Documentation available.</param>
        /// <param name="reportGroupLevel">No Metadata Documentation available.</param>
        /// <param name="fieldName_EN">No Metadata Documentation available.</param>
        /// <param name="fieldName_FR">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddReportGroup(Nullable<global::System.Int32> reportID, Nullable<global::System.Int32> reportGroupLevel, global::System.String fieldName_EN, global::System.String fieldName_FR, global::System.String comments)
        {
            ObjectParameter reportIDParameter;
            if (reportID.HasValue)
            {
                reportIDParameter = new ObjectParameter("ReportID", reportID);
            }
            else
            {
                reportIDParameter = new ObjectParameter("ReportID", typeof(global::System.Int32));
            }
    
            ObjectParameter reportGroupLevelParameter;
            if (reportGroupLevel.HasValue)
            {
                reportGroupLevelParameter = new ObjectParameter("ReportGroupLevel", reportGroupLevel);
            }
            else
            {
                reportGroupLevelParameter = new ObjectParameter("ReportGroupLevel", typeof(global::System.Int32));
            }
    
            ObjectParameter fieldName_ENParameter;
            if (fieldName_EN != null)
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", fieldName_EN);
            }
            else
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", typeof(global::System.String));
            }
    
            ObjectParameter fieldName_FRParameter;
            if (fieldName_FR != null)
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", fieldName_FR);
            }
            else
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddReportGroup", reportIDParameter, reportGroupLevelParameter, fieldName_ENParameter, fieldName_FRParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportGroupID">No Metadata Documentation available.</param>
        /// <param name="fieldName_EN">No Metadata Documentation available.</param>
        /// <param name="fieldName_FR">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateReportGroup(Nullable<global::System.Int32> reportGroupID, global::System.String fieldName_EN, global::System.String fieldName_FR, global::System.String comments)
        {
            ObjectParameter reportGroupIDParameter;
            if (reportGroupID.HasValue)
            {
                reportGroupIDParameter = new ObjectParameter("ReportGroupID", reportGroupID);
            }
            else
            {
                reportGroupIDParameter = new ObjectParameter("ReportGroupID", typeof(global::System.Int32));
            }
    
            ObjectParameter fieldName_ENParameter;
            if (fieldName_EN != null)
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", fieldName_EN);
            }
            else
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", typeof(global::System.String));
            }
    
            ObjectParameter fieldName_FRParameter;
            if (fieldName_FR != null)
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", fieldName_FR);
            }
            else
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateReportGroup", reportGroupIDParameter, fieldName_ENParameter, fieldName_FRParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportGroupID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteReportGroup(Nullable<global::System.Int32> reportGroupID)
        {
            ObjectParameter reportGroupIDParameter;
            if (reportGroupID.HasValue)
            {
                reportGroupIDParameter = new ObjectParameter("ReportGroupID", reportGroupID);
            }
            else
            {
                reportGroupIDParameter = new ObjectParameter("ReportGroupID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteReportGroup", reportGroupIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportGroupID">No Metadata Documentation available.</param>
        /// <param name="reportColumnLevel">No Metadata Documentation available.</param>
        /// <param name="displayName_EN">No Metadata Documentation available.</param>
        /// <param name="displayName_FR">No Metadata Documentation available.</param>
        /// <param name="fieldName_EN">No Metadata Documentation available.</param>
        /// <param name="fieldName_FR">No Metadata Documentation available.</param>
        /// <param name="reportAggregation">No Metadata Documentation available.</param>
        /// <param name="fieldSize">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="formatString">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddReportColumn(Nullable<global::System.Int32> reportGroupID, Nullable<global::System.Int32> reportColumnLevel, global::System.String displayName_EN, global::System.String displayName_FR, global::System.String fieldName_EN, global::System.String fieldName_FR, global::System.String reportAggregation, global::System.String fieldSize, global::System.String comments, global::System.String formatString)
        {
            ObjectParameter reportGroupIDParameter;
            if (reportGroupID.HasValue)
            {
                reportGroupIDParameter = new ObjectParameter("ReportGroupID", reportGroupID);
            }
            else
            {
                reportGroupIDParameter = new ObjectParameter("ReportGroupID", typeof(global::System.Int32));
            }
    
            ObjectParameter reportColumnLevelParameter;
            if (reportColumnLevel.HasValue)
            {
                reportColumnLevelParameter = new ObjectParameter("ReportColumnLevel", reportColumnLevel);
            }
            else
            {
                reportColumnLevelParameter = new ObjectParameter("ReportColumnLevel", typeof(global::System.Int32));
            }
    
            ObjectParameter displayName_ENParameter;
            if (displayName_EN != null)
            {
                displayName_ENParameter = new ObjectParameter("DisplayName_EN", displayName_EN);
            }
            else
            {
                displayName_ENParameter = new ObjectParameter("DisplayName_EN", typeof(global::System.String));
            }
    
            ObjectParameter displayName_FRParameter;
            if (displayName_FR != null)
            {
                displayName_FRParameter = new ObjectParameter("DisplayName_FR", displayName_FR);
            }
            else
            {
                displayName_FRParameter = new ObjectParameter("DisplayName_FR", typeof(global::System.String));
            }
    
            ObjectParameter fieldName_ENParameter;
            if (fieldName_EN != null)
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", fieldName_EN);
            }
            else
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", typeof(global::System.String));
            }
    
            ObjectParameter fieldName_FRParameter;
            if (fieldName_FR != null)
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", fieldName_FR);
            }
            else
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", typeof(global::System.String));
            }
    
            ObjectParameter reportAggregationParameter;
            if (reportAggregation != null)
            {
                reportAggregationParameter = new ObjectParameter("ReportAggregation", reportAggregation);
            }
            else
            {
                reportAggregationParameter = new ObjectParameter("ReportAggregation", typeof(global::System.String));
            }
    
            ObjectParameter fieldSizeParameter;
            if (fieldSize != null)
            {
                fieldSizeParameter = new ObjectParameter("FieldSize", fieldSize);
            }
            else
            {
                fieldSizeParameter = new ObjectParameter("FieldSize", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter formatStringParameter;
            if (formatString != null)
            {
                formatStringParameter = new ObjectParameter("FormatString", formatString);
            }
            else
            {
                formatStringParameter = new ObjectParameter("FormatString", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddReportColumn", reportGroupIDParameter, reportColumnLevelParameter, displayName_ENParameter, displayName_FRParameter, fieldName_ENParameter, fieldName_FRParameter, reportAggregationParameter, fieldSizeParameter, commentsParameter, formatStringParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportColumnID">No Metadata Documentation available.</param>
        /// <param name="reportColumnLevel">No Metadata Documentation available.</param>
        /// <param name="displayName_EN">No Metadata Documentation available.</param>
        /// <param name="displayName_FR">No Metadata Documentation available.</param>
        /// <param name="fieldName_EN">No Metadata Documentation available.</param>
        /// <param name="fieldName_FR">No Metadata Documentation available.</param>
        /// <param name="reportAggregation">No Metadata Documentation available.</param>
        /// <param name="fieldSize">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="formatString">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateReportColumn(Nullable<global::System.Int32> reportColumnID, Nullable<global::System.Int32> reportColumnLevel, global::System.String displayName_EN, global::System.String displayName_FR, global::System.String fieldName_EN, global::System.String fieldName_FR, global::System.String reportAggregation, global::System.String fieldSize, global::System.String comments, global::System.String formatString)
        {
            ObjectParameter reportColumnIDParameter;
            if (reportColumnID.HasValue)
            {
                reportColumnIDParameter = new ObjectParameter("ReportColumnID", reportColumnID);
            }
            else
            {
                reportColumnIDParameter = new ObjectParameter("ReportColumnID", typeof(global::System.Int32));
            }
    
            ObjectParameter reportColumnLevelParameter;
            if (reportColumnLevel.HasValue)
            {
                reportColumnLevelParameter = new ObjectParameter("ReportColumnLevel", reportColumnLevel);
            }
            else
            {
                reportColumnLevelParameter = new ObjectParameter("ReportColumnLevel", typeof(global::System.Int32));
            }
    
            ObjectParameter displayName_ENParameter;
            if (displayName_EN != null)
            {
                displayName_ENParameter = new ObjectParameter("DisplayName_EN", displayName_EN);
            }
            else
            {
                displayName_ENParameter = new ObjectParameter("DisplayName_EN", typeof(global::System.String));
            }
    
            ObjectParameter displayName_FRParameter;
            if (displayName_FR != null)
            {
                displayName_FRParameter = new ObjectParameter("DisplayName_FR", displayName_FR);
            }
            else
            {
                displayName_FRParameter = new ObjectParameter("DisplayName_FR", typeof(global::System.String));
            }
    
            ObjectParameter fieldName_ENParameter;
            if (fieldName_EN != null)
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", fieldName_EN);
            }
            else
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", typeof(global::System.String));
            }
    
            ObjectParameter fieldName_FRParameter;
            if (fieldName_FR != null)
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", fieldName_FR);
            }
            else
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", typeof(global::System.String));
            }
    
            ObjectParameter reportAggregationParameter;
            if (reportAggregation != null)
            {
                reportAggregationParameter = new ObjectParameter("ReportAggregation", reportAggregation);
            }
            else
            {
                reportAggregationParameter = new ObjectParameter("ReportAggregation", typeof(global::System.String));
            }
    
            ObjectParameter fieldSizeParameter;
            if (fieldSize != null)
            {
                fieldSizeParameter = new ObjectParameter("FieldSize", fieldSize);
            }
            else
            {
                fieldSizeParameter = new ObjectParameter("FieldSize", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter formatStringParameter;
            if (formatString != null)
            {
                formatStringParameter = new ObjectParameter("FormatString", formatString);
            }
            else
            {
                formatStringParameter = new ObjectParameter("FormatString", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateReportColumn", reportColumnIDParameter, reportColumnLevelParameter, displayName_ENParameter, displayName_FRParameter, fieldName_ENParameter, fieldName_FRParameter, reportAggregationParameter, fieldSizeParameter, commentsParameter, formatStringParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportColumnID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteReportColumn(Nullable<global::System.Int32> reportColumnID)
        {
            ObjectParameter reportColumnIDParameter;
            if (reportColumnID.HasValue)
            {
                reportColumnIDParameter = new ObjectParameter("ReportColumnID", reportColumnID);
            }
            else
            {
                reportColumnIDParameter = new ObjectParameter("ReportColumnID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteReportColumn", reportColumnIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportID">No Metadata Documentation available.</param>
        /// <param name="sortOrder">No Metadata Documentation available.</param>
        /// <param name="filterName_EN">No Metadata Documentation available.</param>
        /// <param name="filterName_FR">No Metadata Documentation available.</param>
        /// <param name="fieldName_EN">No Metadata Documentation available.</param>
        /// <param name="fieldName_FR">No Metadata Documentation available.</param>
        /// <param name="display">No Metadata Documentation available.</param>
        /// <param name="default_EN">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="reportOperand">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddReportFilter(Nullable<global::System.Int32> reportID, Nullable<global::System.Int32> sortOrder, global::System.String filterName_EN, global::System.String filterName_FR, global::System.String fieldName_EN, global::System.String fieldName_FR, Nullable<global::System.Boolean> display, global::System.String default_EN, global::System.String comments, global::System.String reportOperand)
        {
            ObjectParameter reportIDParameter;
            if (reportID.HasValue)
            {
                reportIDParameter = new ObjectParameter("ReportID", reportID);
            }
            else
            {
                reportIDParameter = new ObjectParameter("ReportID", typeof(global::System.Int32));
            }
    
            ObjectParameter sortOrderParameter;
            if (sortOrder.HasValue)
            {
                sortOrderParameter = new ObjectParameter("SortOrder", sortOrder);
            }
            else
            {
                sortOrderParameter = new ObjectParameter("SortOrder", typeof(global::System.Int32));
            }
    
            ObjectParameter filterName_ENParameter;
            if (filterName_EN != null)
            {
                filterName_ENParameter = new ObjectParameter("FilterName_EN", filterName_EN);
            }
            else
            {
                filterName_ENParameter = new ObjectParameter("FilterName_EN", typeof(global::System.String));
            }
    
            ObjectParameter filterName_FRParameter;
            if (filterName_FR != null)
            {
                filterName_FRParameter = new ObjectParameter("FilterName_FR", filterName_FR);
            }
            else
            {
                filterName_FRParameter = new ObjectParameter("FilterName_FR", typeof(global::System.String));
            }
    
            ObjectParameter fieldName_ENParameter;
            if (fieldName_EN != null)
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", fieldName_EN);
            }
            else
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", typeof(global::System.String));
            }
    
            ObjectParameter fieldName_FRParameter;
            if (fieldName_FR != null)
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", fieldName_FR);
            }
            else
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", typeof(global::System.String));
            }
    
            ObjectParameter displayParameter;
            if (display.HasValue)
            {
                displayParameter = new ObjectParameter("Display", display);
            }
            else
            {
                displayParameter = new ObjectParameter("Display", typeof(global::System.Boolean));
            }
    
            ObjectParameter default_ENParameter;
            if (default_EN != null)
            {
                default_ENParameter = new ObjectParameter("Default_EN", default_EN);
            }
            else
            {
                default_ENParameter = new ObjectParameter("Default_EN", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter reportOperandParameter;
            if (reportOperand != null)
            {
                reportOperandParameter = new ObjectParameter("ReportOperand", reportOperand);
            }
            else
            {
                reportOperandParameter = new ObjectParameter("ReportOperand", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddReportFilter", reportIDParameter, sortOrderParameter, filterName_ENParameter, filterName_FRParameter, fieldName_ENParameter, fieldName_FRParameter, displayParameter, default_ENParameter, commentsParameter, reportOperandParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportFilterID">No Metadata Documentation available.</param>
        /// <param name="sortOrder">No Metadata Documentation available.</param>
        /// <param name="filterName_EN">No Metadata Documentation available.</param>
        /// <param name="filterName_FR">No Metadata Documentation available.</param>
        /// <param name="fieldName_EN">No Metadata Documentation available.</param>
        /// <param name="fieldName_FR">No Metadata Documentation available.</param>
        /// <param name="display">No Metadata Documentation available.</param>
        /// <param name="default_EN">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="reportOperand">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateReportFilter(Nullable<global::System.Int32> reportFilterID, Nullable<global::System.Int32> sortOrder, global::System.String filterName_EN, global::System.String filterName_FR, global::System.String fieldName_EN, global::System.String fieldName_FR, Nullable<global::System.Boolean> display, global::System.String default_EN, global::System.String comments, global::System.String reportOperand)
        {
            ObjectParameter reportFilterIDParameter;
            if (reportFilterID.HasValue)
            {
                reportFilterIDParameter = new ObjectParameter("ReportFilterID", reportFilterID);
            }
            else
            {
                reportFilterIDParameter = new ObjectParameter("ReportFilterID", typeof(global::System.Int32));
            }
    
            ObjectParameter sortOrderParameter;
            if (sortOrder.HasValue)
            {
                sortOrderParameter = new ObjectParameter("SortOrder", sortOrder);
            }
            else
            {
                sortOrderParameter = new ObjectParameter("SortOrder", typeof(global::System.Int32));
            }
    
            ObjectParameter filterName_ENParameter;
            if (filterName_EN != null)
            {
                filterName_ENParameter = new ObjectParameter("FilterName_EN", filterName_EN);
            }
            else
            {
                filterName_ENParameter = new ObjectParameter("FilterName_EN", typeof(global::System.String));
            }
    
            ObjectParameter filterName_FRParameter;
            if (filterName_FR != null)
            {
                filterName_FRParameter = new ObjectParameter("FilterName_FR", filterName_FR);
            }
            else
            {
                filterName_FRParameter = new ObjectParameter("FilterName_FR", typeof(global::System.String));
            }
    
            ObjectParameter fieldName_ENParameter;
            if (fieldName_EN != null)
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", fieldName_EN);
            }
            else
            {
                fieldName_ENParameter = new ObjectParameter("FieldName_EN", typeof(global::System.String));
            }
    
            ObjectParameter fieldName_FRParameter;
            if (fieldName_FR != null)
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", fieldName_FR);
            }
            else
            {
                fieldName_FRParameter = new ObjectParameter("FieldName_FR", typeof(global::System.String));
            }
    
            ObjectParameter displayParameter;
            if (display.HasValue)
            {
                displayParameter = new ObjectParameter("Display", display);
            }
            else
            {
                displayParameter = new ObjectParameter("Display", typeof(global::System.Boolean));
            }
    
            ObjectParameter default_ENParameter;
            if (default_EN != null)
            {
                default_ENParameter = new ObjectParameter("Default_EN", default_EN);
            }
            else
            {
                default_ENParameter = new ObjectParameter("Default_EN", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter reportOperandParameter;
            if (reportOperand != null)
            {
                reportOperandParameter = new ObjectParameter("ReportOperand", reportOperand);
            }
            else
            {
                reportOperandParameter = new ObjectParameter("ReportOperand", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateReportFilter", reportFilterIDParameter, sortOrderParameter, filterName_ENParameter, filterName_FRParameter, fieldName_ENParameter, fieldName_FRParameter, displayParameter, default_ENParameter, commentsParameter, reportOperandParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportFilterID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteReportFilter(Nullable<global::System.Int32> reportFilterID)
        {
            ObjectParameter reportFilterIDParameter;
            if (reportFilterID.HasValue)
            {
                reportFilterIDParameter = new ObjectParameter("ReportFilterID", reportFilterID);
            }
            else
            {
                reportFilterIDParameter = new ObjectParameter("ReportFilterID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteReportFilter", reportFilterIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportID">No Metadata Documentation available.</param>
        /// <param name="securityGroupProfileID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddReportSecurityGroupProfile(Nullable<global::System.Int32> reportID, global::System.String securityGroupProfileID, global::System.String comments)
        {
            ObjectParameter reportIDParameter;
            if (reportID.HasValue)
            {
                reportIDParameter = new ObjectParameter("ReportID", reportID);
            }
            else
            {
                reportIDParameter = new ObjectParameter("ReportID", typeof(global::System.Int32));
            }
    
            ObjectParameter securityGroupProfileIDParameter;
            if (securityGroupProfileID != null)
            {
                securityGroupProfileIDParameter = new ObjectParameter("SecurityGroupProfileID", securityGroupProfileID);
            }
            else
            {
                securityGroupProfileIDParameter = new ObjectParameter("SecurityGroupProfileID", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddReportSecurityGroupProfile", reportIDParameter, securityGroupProfileIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportSecurityGroupProfileID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteReportSecurityGroupProfile(Nullable<global::System.Int32> reportSecurityGroupProfileID)
        {
            ObjectParameter reportSecurityGroupProfileIDParameter;
            if (reportSecurityGroupProfileID.HasValue)
            {
                reportSecurityGroupProfileIDParameter = new ObjectParameter("ReportSecurityGroupProfileID", reportSecurityGroupProfileID);
            }
            else
            {
                reportSecurityGroupProfileIDParameter = new ObjectParameter("ReportSecurityGroupProfileID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteReportSecurityGroupProfile", reportSecurityGroupProfileIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspCopyReport(Nullable<global::System.Int32> reportID)
        {
            ObjectParameter reportIDParameter;
            if (reportID.HasValue)
            {
                reportIDParameter = new ObjectParameter("ReportID", reportID);
            }
            else
            {
                reportIDParameter = new ObjectParameter("ReportID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspCopyReport", reportIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourceIDPool">No Metadata Documentation available.</param>
        /// <param name="resourceIDAssignment">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddResourcePoolAssignment(Nullable<global::System.Int32> resourceIDPool, Nullable<global::System.Int32> resourceIDAssignment, global::System.String comments)
        {
            ObjectParameter resourceIDPoolParameter;
            if (resourceIDPool.HasValue)
            {
                resourceIDPoolParameter = new ObjectParameter("ResourceIDPool", resourceIDPool);
            }
            else
            {
                resourceIDPoolParameter = new ObjectParameter("ResourceIDPool", typeof(global::System.Int32));
            }
    
            ObjectParameter resourceIDAssignmentParameter;
            if (resourceIDAssignment.HasValue)
            {
                resourceIDAssignmentParameter = new ObjectParameter("ResourceIDAssignment", resourceIDAssignment);
            }
            else
            {
                resourceIDAssignmentParameter = new ObjectParameter("ResourceIDAssignment", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddResourcePoolAssignment", resourceIDPoolParameter, resourceIDAssignmentParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resourcePoolAssignmentID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteResourcePoolAssignment(Nullable<global::System.Int32> resourcePoolAssignmentID)
        {
            ObjectParameter resourcePoolAssignmentIDParameter;
            if (resourcePoolAssignmentID.HasValue)
            {
                resourcePoolAssignmentIDParameter = new ObjectParameter("ResourcePoolAssignmentID", resourcePoolAssignmentID);
            }
            else
            {
                resourcePoolAssignmentIDParameter = new ObjectParameter("ResourcePoolAssignmentID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteResourcePoolAssignment", resourcePoolAssignmentIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportID">No Metadata Documentation available.</param>
        /// <param name="fieldName">No Metadata Documentation available.</param>
        public ObjectResult<uspGetValidAggregations_Result> uspGetValidAggregations(Nullable<global::System.Int32> reportID, global::System.String fieldName)
        {
            ObjectParameter reportIDParameter;
            if (reportID.HasValue)
            {
                reportIDParameter = new ObjectParameter("ReportID", reportID);
            }
            else
            {
                reportIDParameter = new ObjectParameter("ReportID", typeof(global::System.Int32));
            }
    
            ObjectParameter fieldNameParameter;
            if (fieldName != null)
            {
                fieldNameParameter = new ObjectParameter("FieldName", fieldName);
            }
            else
            {
                fieldNameParameter = new ObjectParameter("FieldName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<uspGetValidAggregations_Result>("uspGetValidAggregations", reportIDParameter, fieldNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="reportID">No Metadata Documentation available.</param>
        /// <param name="fieldName">No Metadata Documentation available.</param>
        public ObjectResult<uspGetValidFormatStrings_Result> uspGetValidFormatStrings(Nullable<global::System.Int32> reportID, global::System.String fieldName)
        {
            ObjectParameter reportIDParameter;
            if (reportID.HasValue)
            {
                reportIDParameter = new ObjectParameter("ReportID", reportID);
            }
            else
            {
                reportIDParameter = new ObjectParameter("ReportID", typeof(global::System.Int32));
            }
    
            ObjectParameter fieldNameParameter;
            if (fieldName != null)
            {
                fieldNameParameter = new ObjectParameter("FieldName", fieldName);
            }
            else
            {
                fieldNameParameter = new ObjectParameter("FieldName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<uspGetValidFormatStrings_Result>("uspGetValidFormatStrings", reportIDParameter, fieldNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="downloadTemplateID">No Metadata Documentation available.</param>
        /// <param name="fieldName">No Metadata Documentation available.</param>
        /// <param name="sourceColumnName">No Metadata Documentation available.</param>
        /// <param name="sourceColumn">No Metadata Documentation available.</param>
        /// <param name="sourceDefault">No Metadata Documentation available.</param>
        /// <param name="nameFormat">No Metadata Documentation available.</param>
        /// <param name="dateFormat">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="timeFormat">No Metadata Documentation available.</param>
        /// <param name="teamMember">No Metadata Documentation available.</param>
        /// <param name="sourceRowOffset">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddDownloadTemplateMapping(Nullable<global::System.Int32> downloadTemplateID, global::System.String fieldName, global::System.String sourceColumnName, global::System.String sourceColumn, global::System.String sourceDefault, global::System.String nameFormat, global::System.String dateFormat, global::System.String comments, global::System.String timeFormat, Nullable<global::System.Int32> teamMember, Nullable<global::System.Int32> sourceRowOffset)
        {
            ObjectParameter downloadTemplateIDParameter;
            if (downloadTemplateID.HasValue)
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", downloadTemplateID);
            }
            else
            {
                downloadTemplateIDParameter = new ObjectParameter("DownloadTemplateID", typeof(global::System.Int32));
            }
    
            ObjectParameter fieldNameParameter;
            if (fieldName != null)
            {
                fieldNameParameter = new ObjectParameter("FieldName", fieldName);
            }
            else
            {
                fieldNameParameter = new ObjectParameter("FieldName", typeof(global::System.String));
            }
    
            ObjectParameter sourceColumnNameParameter;
            if (sourceColumnName != null)
            {
                sourceColumnNameParameter = new ObjectParameter("SourceColumnName", sourceColumnName);
            }
            else
            {
                sourceColumnNameParameter = new ObjectParameter("SourceColumnName", typeof(global::System.String));
            }
    
            ObjectParameter sourceColumnParameter;
            if (sourceColumn != null)
            {
                sourceColumnParameter = new ObjectParameter("SourceColumn", sourceColumn);
            }
            else
            {
                sourceColumnParameter = new ObjectParameter("SourceColumn", typeof(global::System.String));
            }
    
            ObjectParameter sourceDefaultParameter;
            if (sourceDefault != null)
            {
                sourceDefaultParameter = new ObjectParameter("SourceDefault", sourceDefault);
            }
            else
            {
                sourceDefaultParameter = new ObjectParameter("SourceDefault", typeof(global::System.String));
            }
    
            ObjectParameter nameFormatParameter;
            if (nameFormat != null)
            {
                nameFormatParameter = new ObjectParameter("NameFormat", nameFormat);
            }
            else
            {
                nameFormatParameter = new ObjectParameter("NameFormat", typeof(global::System.String));
            }
    
            ObjectParameter dateFormatParameter;
            if (dateFormat != null)
            {
                dateFormatParameter = new ObjectParameter("DateFormat", dateFormat);
            }
            else
            {
                dateFormatParameter = new ObjectParameter("DateFormat", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter timeFormatParameter;
            if (timeFormat != null)
            {
                timeFormatParameter = new ObjectParameter("TimeFormat", timeFormat);
            }
            else
            {
                timeFormatParameter = new ObjectParameter("TimeFormat", typeof(global::System.String));
            }
    
            ObjectParameter teamMemberParameter;
            if (teamMember.HasValue)
            {
                teamMemberParameter = new ObjectParameter("TeamMember", teamMember);
            }
            else
            {
                teamMemberParameter = new ObjectParameter("TeamMember", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceRowOffsetParameter;
            if (sourceRowOffset.HasValue)
            {
                sourceRowOffsetParameter = new ObjectParameter("SourceRowOffset", sourceRowOffset);
            }
            else
            {
                sourceRowOffsetParameter = new ObjectParameter("SourceRowOffset", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddDownloadTemplateMapping", downloadTemplateIDParameter, fieldNameParameter, sourceColumnNameParameter, sourceColumnParameter, sourceDefaultParameter, nameFormatParameter, dateFormatParameter, commentsParameter, timeFormatParameter, teamMemberParameter, sourceRowOffsetParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="downloadTemplateMappingID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteDownloadTemplateMapping(Nullable<global::System.Int32> downloadTemplateMappingID)
        {
            ObjectParameter downloadTemplateMappingIDParameter;
            if (downloadTemplateMappingID.HasValue)
            {
                downloadTemplateMappingIDParameter = new ObjectParameter("DownloadTemplateMappingID", downloadTemplateMappingID);
            }
            else
            {
                downloadTemplateMappingIDParameter = new ObjectParameter("DownloadTemplateMappingID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteDownloadTemplateMapping", downloadTemplateMappingIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bulkData">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddDownloadStagingBulk(global::System.String bulkData)
        {
            ObjectParameter bulkDataParameter;
            if (bulkData != null)
            {
                bulkDataParameter = new ObjectParameter("bulkData", bulkData);
            }
            else
            {
                bulkDataParameter = new ObjectParameter("bulkData", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddDownloadStagingBulk", bulkDataParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resultStagingID">No Metadata Documentation available.</param>
        /// <param name="sourceRow">No Metadata Documentation available.</param>
        /// <param name="teamMember">No Metadata Documentation available.</param>
        /// <param name="sportTrackingRef">No Metadata Documentation available.</param>
        /// <param name="downloadLastName">No Metadata Documentation available.</param>
        /// <param name="downloadFirstName">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="birthDate">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddResultStagingResource(Nullable<global::System.Int32> resultStagingID, Nullable<global::System.Int32> sourceRow, Nullable<global::System.Int32> teamMember, global::System.String sportTrackingRef, global::System.String downloadLastName, global::System.String downloadFirstName, global::System.String gender, Nullable<global::System.DateTime> birthDate, Nullable<global::System.Int32> resourceID, global::System.String comments)
        {
            ObjectParameter resultStagingIDParameter;
            if (resultStagingID.HasValue)
            {
                resultStagingIDParameter = new ObjectParameter("ResultStagingID", resultStagingID);
            }
            else
            {
                resultStagingIDParameter = new ObjectParameter("ResultStagingID", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceRowParameter;
            if (sourceRow.HasValue)
            {
                sourceRowParameter = new ObjectParameter("SourceRow", sourceRow);
            }
            else
            {
                sourceRowParameter = new ObjectParameter("SourceRow", typeof(global::System.Int32));
            }
    
            ObjectParameter teamMemberParameter;
            if (teamMember.HasValue)
            {
                teamMemberParameter = new ObjectParameter("TeamMember", teamMember);
            }
            else
            {
                teamMemberParameter = new ObjectParameter("TeamMember", typeof(global::System.Int32));
            }
    
            ObjectParameter sportTrackingRefParameter;
            if (sportTrackingRef != null)
            {
                sportTrackingRefParameter = new ObjectParameter("SportTrackingRef", sportTrackingRef);
            }
            else
            {
                sportTrackingRefParameter = new ObjectParameter("SportTrackingRef", typeof(global::System.String));
            }
    
            ObjectParameter downloadLastNameParameter;
            if (downloadLastName != null)
            {
                downloadLastNameParameter = new ObjectParameter("DownloadLastName", downloadLastName);
            }
            else
            {
                downloadLastNameParameter = new ObjectParameter("DownloadLastName", typeof(global::System.String));
            }
    
            ObjectParameter downloadFirstNameParameter;
            if (downloadFirstName != null)
            {
                downloadFirstNameParameter = new ObjectParameter("DownloadFirstName", downloadFirstName);
            }
            else
            {
                downloadFirstNameParameter = new ObjectParameter("DownloadFirstName", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("Gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("Gender", typeof(global::System.String));
            }
    
            ObjectParameter birthDateParameter;
            if (birthDate.HasValue)
            {
                birthDateParameter = new ObjectParameter("BirthDate", birthDate);
            }
            else
            {
                birthDateParameter = new ObjectParameter("BirthDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddResultStagingResource", resultStagingIDParameter, sourceRowParameter, teamMemberParameter, sportTrackingRefParameter, downloadLastNameParameter, downloadFirstNameParameter, genderParameter, birthDateParameter, resourceIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resultStagingResourceID">No Metadata Documentation available.</param>
        /// <param name="sourceRow">No Metadata Documentation available.</param>
        /// <param name="teamMember">No Metadata Documentation available.</param>
        /// <param name="sportTrackingRef">No Metadata Documentation available.</param>
        /// <param name="downloadLastName">No Metadata Documentation available.</param>
        /// <param name="downloadFirstName">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="birthDate">No Metadata Documentation available.</param>
        /// <param name="resourceID">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateResultStagingResource(Nullable<global::System.Int32> resultStagingResourceID, Nullable<global::System.Int32> sourceRow, Nullable<global::System.Int32> teamMember, global::System.String sportTrackingRef, global::System.String downloadLastName, global::System.String downloadFirstName, global::System.String gender, Nullable<global::System.DateTime> birthDate, Nullable<global::System.Int32> resourceID, global::System.String comments)
        {
            ObjectParameter resultStagingResourceIDParameter;
            if (resultStagingResourceID.HasValue)
            {
                resultStagingResourceIDParameter = new ObjectParameter("ResultStagingResourceID", resultStagingResourceID);
            }
            else
            {
                resultStagingResourceIDParameter = new ObjectParameter("ResultStagingResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceRowParameter;
            if (sourceRow.HasValue)
            {
                sourceRowParameter = new ObjectParameter("SourceRow", sourceRow);
            }
            else
            {
                sourceRowParameter = new ObjectParameter("SourceRow", typeof(global::System.Int32));
            }
    
            ObjectParameter teamMemberParameter;
            if (teamMember.HasValue)
            {
                teamMemberParameter = new ObjectParameter("TeamMember", teamMember);
            }
            else
            {
                teamMemberParameter = new ObjectParameter("TeamMember", typeof(global::System.Int32));
            }
    
            ObjectParameter sportTrackingRefParameter;
            if (sportTrackingRef != null)
            {
                sportTrackingRefParameter = new ObjectParameter("SportTrackingRef", sportTrackingRef);
            }
            else
            {
                sportTrackingRefParameter = new ObjectParameter("SportTrackingRef", typeof(global::System.String));
            }
    
            ObjectParameter downloadLastNameParameter;
            if (downloadLastName != null)
            {
                downloadLastNameParameter = new ObjectParameter("DownloadLastName", downloadLastName);
            }
            else
            {
                downloadLastNameParameter = new ObjectParameter("DownloadLastName", typeof(global::System.String));
            }
    
            ObjectParameter downloadFirstNameParameter;
            if (downloadFirstName != null)
            {
                downloadFirstNameParameter = new ObjectParameter("DownloadFirstName", downloadFirstName);
            }
            else
            {
                downloadFirstNameParameter = new ObjectParameter("DownloadFirstName", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("Gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("Gender", typeof(global::System.String));
            }
    
            ObjectParameter birthDateParameter;
            if (birthDate.HasValue)
            {
                birthDateParameter = new ObjectParameter("BirthDate", birthDate);
            }
            else
            {
                birthDateParameter = new ObjectParameter("BirthDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter resourceIDParameter;
            if (resourceID.HasValue)
            {
                resourceIDParameter = new ObjectParameter("ResourceID", resourceID);
            }
            else
            {
                resourceIDParameter = new ObjectParameter("ResourceID", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateResultStagingResource", resultStagingResourceIDParameter, sourceRowParameter, teamMemberParameter, sportTrackingRefParameter, downloadLastNameParameter, downloadFirstNameParameter, genderParameter, birthDateParameter, resourceIDParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="resultStagingResourceID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteResultStagingResource(Nullable<global::System.Int32> resultStagingResourceID)
        {
            ObjectParameter resultStagingResourceIDParameter;
            if (resultStagingResourceID.HasValue)
            {
                resultStagingResourceIDParameter = new ObjectParameter("ResultStagingResourceID", resultStagingResourceID);
            }
            else
            {
                resultStagingResourceIDParameter = new ObjectParameter("ResultStagingResourceID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteResultStagingResource", resultStagingResourceIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fundingSummaryID">No Metadata Documentation available.</param>
        /// <param name="copyToSportID">No Metadata Documentation available.</param>
        /// <param name="copyToYearID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspCopyFunding(Nullable<global::System.Int32> fundingSummaryID, global::System.String copyToSportID, global::System.String copyToYearID)
        {
            ObjectParameter fundingSummaryIDParameter;
            if (fundingSummaryID.HasValue)
            {
                fundingSummaryIDParameter = new ObjectParameter("FundingSummaryID", fundingSummaryID);
            }
            else
            {
                fundingSummaryIDParameter = new ObjectParameter("FundingSummaryID", typeof(global::System.Int32));
            }
    
            ObjectParameter copyToSportIDParameter;
            if (copyToSportID != null)
            {
                copyToSportIDParameter = new ObjectParameter("CopyToSportID", copyToSportID);
            }
            else
            {
                copyToSportIDParameter = new ObjectParameter("CopyToSportID", typeof(global::System.String));
            }
    
            ObjectParameter copyToYearIDParameter;
            if (copyToYearID != null)
            {
                copyToYearIDParameter = new ObjectParameter("CopyToYearID", copyToYearID);
            }
            else
            {
                copyToYearIDParameter = new ObjectParameter("CopyToYearID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspCopyFunding", fundingSummaryIDParameter, copyToSportIDParameter, copyToYearIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="yearID">No Metadata Documentation available.</param>
        /// <param name="selectedSportID">No Metadata Documentation available.</param>
        /// <param name="securityUserID">No Metadata Documentation available.</param>
        /// <param name="summaryStatusFilter">No Metadata Documentation available.</param>
        /// <param name="pageWriteAccess">No Metadata Documentation available.</param>
        /// <param name="sortDescriptor">No Metadata Documentation available.</param>
        /// <param name="sortDirection">No Metadata Documentation available.</param>
        /// <param name="page">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        /// <param name="frenchLanguage">No Metadata Documentation available.</param>
        public ObjectResult<uspGetCompetitions_Result> uspGetCompetitions(global::System.String yearID, global::System.String selectedSportID, Nullable<global::System.Int32> securityUserID, global::System.String summaryStatusFilter, Nullable<global::System.Int32> pageWriteAccess, global::System.String sortDescriptor, global::System.String sortDirection, Nullable<global::System.Int32> page, Nullable<global::System.Int32> pageSize, Nullable<global::System.Boolean> frenchLanguage)
        {
            ObjectParameter yearIDParameter;
            if (yearID != null)
            {
                yearIDParameter = new ObjectParameter("YearID", yearID);
            }
            else
            {
                yearIDParameter = new ObjectParameter("YearID", typeof(global::System.String));
            }
    
            ObjectParameter selectedSportIDParameter;
            if (selectedSportID != null)
            {
                selectedSportIDParameter = new ObjectParameter("SelectedSportID", selectedSportID);
            }
            else
            {
                selectedSportIDParameter = new ObjectParameter("SelectedSportID", typeof(global::System.String));
            }
    
            ObjectParameter securityUserIDParameter;
            if (securityUserID.HasValue)
            {
                securityUserIDParameter = new ObjectParameter("SecurityUserID", securityUserID);
            }
            else
            {
                securityUserIDParameter = new ObjectParameter("SecurityUserID", typeof(global::System.Int32));
            }
    
            ObjectParameter summaryStatusFilterParameter;
            if (summaryStatusFilter != null)
            {
                summaryStatusFilterParameter = new ObjectParameter("SummaryStatusFilter", summaryStatusFilter);
            }
            else
            {
                summaryStatusFilterParameter = new ObjectParameter("SummaryStatusFilter", typeof(global::System.String));
            }
    
            ObjectParameter pageWriteAccessParameter;
            if (pageWriteAccess.HasValue)
            {
                pageWriteAccessParameter = new ObjectParameter("PageWriteAccess", pageWriteAccess);
            }
            else
            {
                pageWriteAccessParameter = new ObjectParameter("PageWriteAccess", typeof(global::System.Int32));
            }
    
            ObjectParameter sortDescriptorParameter;
            if (sortDescriptor != null)
            {
                sortDescriptorParameter = new ObjectParameter("SortDescriptor", sortDescriptor);
            }
            else
            {
                sortDescriptorParameter = new ObjectParameter("SortDescriptor", typeof(global::System.String));
            }
    
            ObjectParameter sortDirectionParameter;
            if (sortDirection != null)
            {
                sortDirectionParameter = new ObjectParameter("SortDirection", sortDirection);
            }
            else
            {
                sortDirectionParameter = new ObjectParameter("SortDirection", typeof(global::System.String));
            }
    
            ObjectParameter pageParameter;
            if (page.HasValue)
            {
                pageParameter = new ObjectParameter("Page", page);
            }
            else
            {
                pageParameter = new ObjectParameter("Page", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            ObjectParameter frenchLanguageParameter;
            if (frenchLanguage.HasValue)
            {
                frenchLanguageParameter = new ObjectParameter("FrenchLanguage", frenchLanguage);
            }
            else
            {
                frenchLanguageParameter = new ObjectParameter("FrenchLanguage", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<uspGetCompetitions_Result>("uspGetCompetitions", yearIDParameter, selectedSportIDParameter, securityUserIDParameter, summaryStatusFilterParameter, pageWriteAccessParameter, sortDescriptorParameter, sortDirectionParameter, pageParameter, pageSizeParameter, frenchLanguageParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ActionItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionItem object.
        /// </summary>
        /// <param name="actionItemID">Initial value of the ActionItemID property.</param>
        /// <param name="actionItemTypeID">Initial value of the ActionItemTypeID property.</param>
        /// <param name="referenceID">Initial value of the ReferenceID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dueDate">Initial value of the DueDate property.</param>
        /// <param name="actionItemStatus">Initial value of the ActionItemStatus property.</param>
        /// <param name="actionItemPriority">Initial value of the ActionItemPriority property.</param>
        public static ActionItem CreateActionItem(global::System.Int32 actionItemID, global::System.String actionItemTypeID, global::System.String referenceID, global::System.String description, global::System.DateTime dueDate, global::System.String actionItemStatus, global::System.String actionItemPriority)
        {
            ActionItem actionItem = new ActionItem();
            actionItem.ActionItemID = actionItemID;
            actionItem.ActionItemTypeID = actionItemTypeID;
            actionItem.ReferenceID = referenceID;
            actionItem.Description = description;
            actionItem.DueDate = dueDate;
            actionItem.ActionItemStatus = actionItemStatus;
            actionItem.ActionItemPriority = actionItemPriority;
            return actionItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionItemID
        {
            get
            {
                return _ActionItemID;
            }
            set
            {
                if (_ActionItemID != value)
                {
                    OnActionItemIDChanging(value);
                    ReportPropertyChanging("ActionItemID");
                    _ActionItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActionItemID");
                    OnActionItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ActionItemID;
        partial void OnActionItemIDChanging(global::System.Int32 value);
        partial void OnActionItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionItemTypeID
        {
            get
            {
                return _ActionItemTypeID;
            }
            set
            {
                OnActionItemTypeIDChanging(value);
                ReportPropertyChanging("ActionItemTypeID");
                _ActionItemTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionItemTypeID");
                OnActionItemTypeIDChanged();
            }
        }
        private global::System.String _ActionItemTypeID;
        partial void OnActionItemTypeIDChanging(global::System.String value);
        partial void OnActionItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceID
        {
            get
            {
                return _ReferenceID;
            }
            set
            {
                OnReferenceIDChanging(value);
                ReportPropertyChanging("ReferenceID");
                _ReferenceID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReferenceID");
                OnReferenceIDChanged();
            }
        }
        private global::System.String _ReferenceID;
        partial void OnReferenceIDChanging(global::System.String value);
        partial void OnReferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.String _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.String value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private global::System.DateTime _DueDate;
        partial void OnDueDateChanging(global::System.DateTime value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionItemStatus
        {
            get
            {
                return _ActionItemStatus;
            }
            set
            {
                OnActionItemStatusChanging(value);
                ReportPropertyChanging("ActionItemStatus");
                _ActionItemStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionItemStatus");
                OnActionItemStatusChanged();
            }
        }
        private global::System.String _ActionItemStatus;
        partial void OnActionItemStatusChanging(global::System.String value);
        partial void OnActionItemStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionItemPriority
        {
            get
            {
                return _ActionItemPriority;
            }
            set
            {
                OnActionItemPriorityChanging(value);
                ReportPropertyChanging("ActionItemPriority");
                _ActionItemPriority = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionItemPriority");
                OnActionItemPriorityChanged();
            }
        }
        private global::System.String _ActionItemPriority;
        partial void OnActionItemPriorityChanging(global::System.String value);
        partial void OnActionItemPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ActionItem_OrganizationID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_ActionItem_OrganizationID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_ActionItem_OrganizationID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_ActionItem_OrganizationID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("OTP.Ring.Data.Model.FK_ActionItem_OrganizationID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ActionItem_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ActionItem_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ActionItem_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ActionItem_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ActionItem_SportID", "Sport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ActionItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionItemType object.
        /// </summary>
        /// <param name="actionItemTypeID">Initial value of the ActionItemTypeID property.</param>
        /// <param name="sourceName_EN">Initial value of the SourceName_EN property.</param>
        /// <param name="sourceName_FR">Initial value of the SourceName_FR property.</param>
        /// <param name="categoryName_EN">Initial value of the CategoryName_EN property.</param>
        /// <param name="categroyName_FR">Initial value of the CategroyName_FR property.</param>
        public static ActionItemType CreateActionItemType(global::System.String actionItemTypeID, global::System.String sourceName_EN, global::System.String sourceName_FR, global::System.String categoryName_EN, global::System.String categroyName_FR)
        {
            ActionItemType actionItemType = new ActionItemType();
            actionItemType.ActionItemTypeID = actionItemTypeID;
            actionItemType.SourceName_EN = sourceName_EN;
            actionItemType.SourceName_FR = sourceName_FR;
            actionItemType.CategoryName_EN = categoryName_EN;
            actionItemType.CategroyName_FR = categroyName_FR;
            return actionItemType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionItemTypeID
        {
            get
            {
                return _ActionItemTypeID;
            }
            set
            {
                if (_ActionItemTypeID != value)
                {
                    OnActionItemTypeIDChanging(value);
                    ReportPropertyChanging("ActionItemTypeID");
                    _ActionItemTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActionItemTypeID");
                    OnActionItemTypeIDChanged();
                }
            }
        }
        private global::System.String _ActionItemTypeID;
        partial void OnActionItemTypeIDChanging(global::System.String value);
        partial void OnActionItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceName_EN
        {
            get
            {
                return _SourceName_EN;
            }
            set
            {
                OnSourceName_ENChanging(value);
                ReportPropertyChanging("SourceName_EN");
                _SourceName_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceName_EN");
                OnSourceName_ENChanged();
            }
        }
        private global::System.String _SourceName_EN;
        partial void OnSourceName_ENChanging(global::System.String value);
        partial void OnSourceName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceName_FR
        {
            get
            {
                return _SourceName_FR;
            }
            set
            {
                OnSourceName_FRChanging(value);
                ReportPropertyChanging("SourceName_FR");
                _SourceName_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceName_FR");
                OnSourceName_FRChanged();
            }
        }
        private global::System.String _SourceName_FR;
        partial void OnSourceName_FRChanging(global::System.String value);
        partial void OnSourceName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName_EN
        {
            get
            {
                return _CategoryName_EN;
            }
            set
            {
                OnCategoryName_ENChanging(value);
                ReportPropertyChanging("CategoryName_EN");
                _CategoryName_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName_EN");
                OnCategoryName_ENChanged();
            }
        }
        private global::System.String _CategoryName_EN;
        partial void OnCategoryName_ENChanging(global::System.String value);
        partial void OnCategoryName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategroyName_FR
        {
            get
            {
                return _CategroyName_FR;
            }
            set
            {
                OnCategroyName_FRChanging(value);
                ReportPropertyChanging("CategroyName_FR");
                _CategroyName_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategroyName_FR");
                OnCategroyName_FRChanged();
            }
        }
        private global::System.String _CategroyName_FR;
        partial void OnCategroyName_FRChanging(global::System.String value);
        partial void OnCategroyName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="AffiliateType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AffiliateType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AffiliateType object.
        /// </summary>
        /// <param name="affiliateTypeID">Initial value of the AffiliateTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static AffiliateType CreateAffiliateType(global::System.String affiliateTypeID, global::System.String name_EN, global::System.String name_FR)
        {
            AffiliateType affiliateType = new AffiliateType();
            affiliateType.AffiliateTypeID = affiliateTypeID;
            affiliateType.Name_EN = name_EN;
            affiliateType.Name_FR = name_FR;
            return affiliateType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AffiliateTypeID
        {
            get
            {
                return _AffiliateTypeID;
            }
            set
            {
                if (_AffiliateTypeID != value)
                {
                    OnAffiliateTypeIDChanging(value);
                    ReportPropertyChanging("AffiliateTypeID");
                    _AffiliateTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AffiliateTypeID");
                    OnAffiliateTypeIDChanged();
                }
            }
        }
        private global::System.String _AffiliateTypeID;
        partial void OnAffiliateTypeIDChanging(global::System.String value);
        partial void OnAffiliateTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_AffiliateTypeID", "ResourceAffiliate")]
        public EntityCollection<ResourceAffiliate> ResourceAffiliates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceAffiliate>("OTP.Ring.Data.Model.FK_ResourceAffiliate_AffiliateTypeID", "ResourceAffiliate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceAffiliate>("OTP.Ring.Data.Model.FK_ResourceAffiliate_AffiliateTypeID", "ResourceAffiliate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="BenchmarkResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenchmarkResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenchmarkResource object.
        /// </summary>
        /// <param name="benchmarkResourceID">Initial value of the BenchmarkResourceID property.</param>
        /// <param name="resourceSportID">Initial value of the ResourceSportID property.</param>
        /// <param name="benchmarkTypeID">Initial value of the BenchmarkTypeID property.</param>
        /// <param name="benchmarkTierID">Initial value of the BenchmarkTierID property.</param>
        /// <param name="yearID">Initial value of the YearID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static BenchmarkResource CreateBenchmarkResource(global::System.Int32 benchmarkResourceID, global::System.Int32 resourceSportID, global::System.Int32 benchmarkTypeID, global::System.Int32 benchmarkTierID, global::System.String yearID, global::System.Boolean active)
        {
            BenchmarkResource benchmarkResource = new BenchmarkResource();
            benchmarkResource.BenchmarkResourceID = benchmarkResourceID;
            benchmarkResource.ResourceSportID = resourceSportID;
            benchmarkResource.BenchmarkTypeID = benchmarkTypeID;
            benchmarkResource.BenchmarkTierID = benchmarkTierID;
            benchmarkResource.YearID = yearID;
            benchmarkResource.Active = active;
            return benchmarkResource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkResourceID
        {
            get
            {
                return _BenchmarkResourceID;
            }
            set
            {
                if (_BenchmarkResourceID != value)
                {
                    OnBenchmarkResourceIDChanging(value);
                    ReportPropertyChanging("BenchmarkResourceID");
                    _BenchmarkResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BenchmarkResourceID");
                    OnBenchmarkResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _BenchmarkResourceID;
        partial void OnBenchmarkResourceIDChanging(global::System.Int32 value);
        partial void OnBenchmarkResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceSportID
        {
            get
            {
                return _ResourceSportID;
            }
            set
            {
                OnResourceSportIDChanging(value);
                ReportPropertyChanging("ResourceSportID");
                _ResourceSportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceSportID");
                OnResourceSportIDChanged();
            }
        }
        private global::System.Int32 _ResourceSportID;
        partial void OnResourceSportIDChanging(global::System.Int32 value);
        partial void OnResourceSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTypeID
        {
            get
            {
                return _BenchmarkTypeID;
            }
            set
            {
                OnBenchmarkTypeIDChanging(value);
                ReportPropertyChanging("BenchmarkTypeID");
                _BenchmarkTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenchmarkTypeID");
                OnBenchmarkTypeIDChanged();
            }
        }
        private global::System.Int32 _BenchmarkTypeID;
        partial void OnBenchmarkTypeIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTierID
        {
            get
            {
                return _BenchmarkTierID;
            }
            set
            {
                OnBenchmarkTierIDChanging(value);
                ReportPropertyChanging("BenchmarkTierID");
                _BenchmarkTierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenchmarkTierID");
                OnBenchmarkTierIDChanged();
            }
        }
        private global::System.Int32 _BenchmarkTierID;
        partial void OnBenchmarkTierIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                OnYearIDChanging(value);
                ReportPropertyChanging("YearID");
                _YearID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearID");
                OnYearIDChanged();
            }
        }
        private global::System.String _YearID;
        partial void OnYearIDChanging(global::System.String value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NSOValue
        {
            get
            {
                return _NSOValue;
            }
            set
            {
                OnNSOValueChanging(value);
                ReportPropertyChanging("NSOValue");
                _NSOValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NSOValue");
                OnNSOValueChanged();
            }
        }
        private Nullable<global::System.Int32> _NSOValue;
        partial void OnNSOValueChanging(Nullable<global::System.Int32> value);
        partial void OnNSOValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OTPValue
        {
            get
            {
                return _OTPValue;
            }
            set
            {
                OnOTPValueChanging(value);
                ReportPropertyChanging("OTPValue");
                _OTPValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OTPValue");
                OnOTPValueChanged();
            }
        }
        private Nullable<global::System.Int32> _OTPValue;
        partial void OnOTPValueChanging(Nullable<global::System.Int32> value);
        partial void OnOTPValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_BenchmarkTierID", "BenchmarkTier")]
        public BenchmarkTier BenchmarkTier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkTier>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTierID", "BenchmarkTier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkTier>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTierID", "BenchmarkTier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenchmarkTier> BenchmarkTierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkTier>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTierID", "BenchmarkTier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenchmarkTier>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTierID", "BenchmarkTier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_BenchmarkTypeID", "BenchmarkType")]
        public BenchmarkType BenchmarkType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTypeID", "BenchmarkType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTypeID", "BenchmarkType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenchmarkType> BenchmarkTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTypeID", "BenchmarkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTypeID", "BenchmarkType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_ResourceSportID", "ResourceSport")]
        public ResourceSport ResourceSport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceSport>("OTP.Ring.Data.Model.FK_BenchmarkResource_ResourceSportID", "ResourceSport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceSport>("OTP.Ring.Data.Model.FK_BenchmarkResource_ResourceSportID", "ResourceSport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceSport> ResourceSportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceSport>("OTP.Ring.Data.Model.FK_BenchmarkResource_ResourceSportID", "ResourceSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceSport>("OTP.Ring.Data.Model.FK_BenchmarkResource_ResourceSportID", "ResourceSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_YearID", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_BenchmarkResource_YearID", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_BenchmarkResource_YearID", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_BenchmarkResource_YearID", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("OTP.Ring.Data.Model.FK_BenchmarkResource_YearID", "Year", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="BenchmarkSport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenchmarkSport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenchmarkSport object.
        /// </summary>
        /// <param name="benchmarkSportID">Initial value of the BenchmarkSportID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="benchmarkTypeID">Initial value of the BenchmarkTypeID property.</param>
        /// <param name="benchmarkTierID">Initial value of the BenchmarkTierID property.</param>
        /// <param name="yearID">Initial value of the YearID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static BenchmarkSport CreateBenchmarkSport(global::System.Int32 benchmarkSportID, global::System.String sportID, global::System.Int32 benchmarkTypeID, global::System.Int32 benchmarkTierID, global::System.String yearID, global::System.Boolean active)
        {
            BenchmarkSport benchmarkSport = new BenchmarkSport();
            benchmarkSport.BenchmarkSportID = benchmarkSportID;
            benchmarkSport.SportID = sportID;
            benchmarkSport.BenchmarkTypeID = benchmarkTypeID;
            benchmarkSport.BenchmarkTierID = benchmarkTierID;
            benchmarkSport.YearID = yearID;
            benchmarkSport.Active = active;
            return benchmarkSport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkSportID
        {
            get
            {
                return _BenchmarkSportID;
            }
            set
            {
                if (_BenchmarkSportID != value)
                {
                    OnBenchmarkSportIDChanging(value);
                    ReportPropertyChanging("BenchmarkSportID");
                    _BenchmarkSportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BenchmarkSportID");
                    OnBenchmarkSportIDChanged();
                }
            }
        }
        private global::System.Int32 _BenchmarkSportID;
        partial void OnBenchmarkSportIDChanging(global::System.Int32 value);
        partial void OnBenchmarkSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTypeID
        {
            get
            {
                return _BenchmarkTypeID;
            }
            set
            {
                OnBenchmarkTypeIDChanging(value);
                ReportPropertyChanging("BenchmarkTypeID");
                _BenchmarkTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenchmarkTypeID");
                OnBenchmarkTypeIDChanged();
            }
        }
        private global::System.Int32 _BenchmarkTypeID;
        partial void OnBenchmarkTypeIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTierID
        {
            get
            {
                return _BenchmarkTierID;
            }
            set
            {
                OnBenchmarkTierIDChanging(value);
                ReportPropertyChanging("BenchmarkTierID");
                _BenchmarkTierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenchmarkTierID");
                OnBenchmarkTierIDChanged();
            }
        }
        private global::System.Int32 _BenchmarkTierID;
        partial void OnBenchmarkTierIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                OnYearIDChanging(value);
                ReportPropertyChanging("YearID");
                _YearID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearID");
                OnYearIDChanged();
            }
        }
        private global::System.String _YearID;
        partial void OnYearIDChanging(global::System.String value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NSOValue
        {
            get
            {
                return _NSOValue;
            }
            set
            {
                OnNSOValueChanging(value);
                ReportPropertyChanging("NSOValue");
                _NSOValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NSOValue");
                OnNSOValueChanged();
            }
        }
        private Nullable<global::System.Int32> _NSOValue;
        partial void OnNSOValueChanging(Nullable<global::System.Int32> value);
        partial void OnNSOValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OTPValue
        {
            get
            {
                return _OTPValue;
            }
            set
            {
                OnOTPValueChanging(value);
                ReportPropertyChanging("OTPValue");
                _OTPValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OTPValue");
                OnOTPValueChanged();
            }
        }
        private Nullable<global::System.Int32> _OTPValue;
        partial void OnOTPValueChanging(Nullable<global::System.Int32> value);
        partial void OnOTPValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_BenchmarkTierID", "BenchmarkTier")]
        public BenchmarkTier BenchmarkTier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkTier>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTierID", "BenchmarkTier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkTier>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTierID", "BenchmarkTier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenchmarkTier> BenchmarkTierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkTier>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTierID", "BenchmarkTier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenchmarkTier>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTierID", "BenchmarkTier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_BenchmarkTypeID", "BenchmarkType")]
        public BenchmarkType BenchmarkType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTypeID", "BenchmarkType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTypeID", "BenchmarkType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenchmarkType> BenchmarkTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTypeID", "BenchmarkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTypeID", "BenchmarkType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_BenchmarkSport_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_BenchmarkSport_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_BenchmarkSport_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_BenchmarkSport_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_YearID", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_BenchmarkSport_YearID", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_BenchmarkSport_YearID", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_BenchmarkSport_YearID", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("OTP.Ring.Data.Model.FK_BenchmarkSport_YearID", "Year", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="BenchmarkTier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenchmarkTier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenchmarkTier object.
        /// </summary>
        /// <param name="benchmarkTierID">Initial value of the BenchmarkTierID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="positionStart">Initial value of the PositionStart property.</param>
        /// <param name="positionEnd">Initial value of the PositionEnd property.</param>
        public static BenchmarkTier CreateBenchmarkTier(global::System.Int32 benchmarkTierID, global::System.String sportID, global::System.String name_EN, global::System.String name_FR, global::System.Int32 positionStart, global::System.Int32 positionEnd)
        {
            BenchmarkTier benchmarkTier = new BenchmarkTier();
            benchmarkTier.BenchmarkTierID = benchmarkTierID;
            benchmarkTier.SportID = sportID;
            benchmarkTier.Name_EN = name_EN;
            benchmarkTier.Name_FR = name_FR;
            benchmarkTier.PositionStart = positionStart;
            benchmarkTier.PositionEnd = positionEnd;
            return benchmarkTier;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTierID
        {
            get
            {
                return _BenchmarkTierID;
            }
            set
            {
                if (_BenchmarkTierID != value)
                {
                    OnBenchmarkTierIDChanging(value);
                    ReportPropertyChanging("BenchmarkTierID");
                    _BenchmarkTierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BenchmarkTierID");
                    OnBenchmarkTierIDChanged();
                }
            }
        }
        private global::System.Int32 _BenchmarkTierID;
        partial void OnBenchmarkTierIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionStart
        {
            get
            {
                return _PositionStart;
            }
            set
            {
                OnPositionStartChanging(value);
                ReportPropertyChanging("PositionStart");
                _PositionStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionStart");
                OnPositionStartChanged();
            }
        }
        private global::System.Int32 _PositionStart;
        partial void OnPositionStartChanging(global::System.Int32 value);
        partial void OnPositionStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionEnd
        {
            get
            {
                return _PositionEnd;
            }
            set
            {
                OnPositionEndChanging(value);
                ReportPropertyChanging("PositionEnd");
                _PositionEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionEnd");
                OnPositionEndChanged();
            }
        }
        private global::System.Int32 _PositionEnd;
        partial void OnPositionEndChanging(global::System.Int32 value);
        partial void OnPositionEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_BenchmarkTierID", "BenchmarkResource")]
        public EntityCollection<BenchmarkResource> BenchmarkResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenchmarkResource>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTierID", "BenchmarkResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenchmarkResource>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTierID", "BenchmarkResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_BenchmarkTierID", "BenchmarkSport")]
        public EntityCollection<BenchmarkSport> BenchmarkSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenchmarkSport>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTierID", "BenchmarkSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenchmarkSport>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTierID", "BenchmarkSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkTier_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_BenchmarkTier_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_BenchmarkTier_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_BenchmarkTier_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_BenchmarkTier_SportID", "Sport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="BenchmarkType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenchmarkType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenchmarkType object.
        /// </summary>
        /// <param name="benchmarkTypeID">Initial value of the BenchmarkTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static BenchmarkType CreateBenchmarkType(global::System.Int32 benchmarkTypeID, global::System.String name_EN, global::System.String name_FR)
        {
            BenchmarkType benchmarkType = new BenchmarkType();
            benchmarkType.BenchmarkTypeID = benchmarkTypeID;
            benchmarkType.Name_EN = name_EN;
            benchmarkType.Name_FR = name_FR;
            return benchmarkType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTypeID
        {
            get
            {
                return _BenchmarkTypeID;
            }
            set
            {
                if (_BenchmarkTypeID != value)
                {
                    OnBenchmarkTypeIDChanging(value);
                    ReportPropertyChanging("BenchmarkTypeID");
                    _BenchmarkTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BenchmarkTypeID");
                    OnBenchmarkTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _BenchmarkTypeID;
        partial void OnBenchmarkTypeIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_BenchmarkTypeID", "BenchmarkResource")]
        public EntityCollection<BenchmarkResource> BenchmarkResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenchmarkResource>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTypeID", "BenchmarkResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenchmarkResource>("OTP.Ring.Data.Model.FK_BenchmarkResource_BenchmarkTypeID", "BenchmarkResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_BenchmarkTypeID", "BenchmarkSport")]
        public EntityCollection<BenchmarkSport> BenchmarkSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenchmarkSport>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTypeID", "BenchmarkSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenchmarkSport>("OTP.Ring.Data.Model.FK_BenchmarkSport_BenchmarkTypeID", "BenchmarkSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Competition_BenchmarkTypeID", "Competition")]
        public EntityCollection<Competition> Competitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competition>("OTP.Ring.Data.Model.FK_Competition_BenchmarkTypeID", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competition>("OTP.Ring.Data.Model.FK_Competition_BenchmarkTypeID", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_BenchmarkTypeID", "DownloadStaging")]
        public EntityCollection<DownloadStaging> DownloadStagings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DownloadStaging>("OTP.Ring.Data.Model.FK_DownloadStaging_BenchmarkTypeID", "DownloadStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DownloadStaging>("OTP.Ring.Data.Model.FK_DownloadStaging_BenchmarkTypeID", "DownloadStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_BenchmarkTypeID", "ResultStaging")]
        public EntityCollection<ResultStaging> ResultStagings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStaging_BenchmarkTypeID", "ResultStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStaging_BenchmarkTypeID", "ResultStaging", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Competition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Competition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Competition object.
        /// </summary>
        /// <param name="competitionID">Initial value of the CompetitionID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="yearID">Initial value of the YearID property.</param>
        /// <param name="competitionTypeID">Initial value of the CompetitionTypeID property.</param>
        /// <param name="benchmarkTypeID">Initial value of the BenchmarkTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="competitionDate">Initial value of the CompetitionDate property.</param>
        public static Competition CreateCompetition(global::System.Int32 competitionID, global::System.String sportID, global::System.String yearID, global::System.String competitionTypeID, global::System.Int32 benchmarkTypeID, global::System.String name, global::System.DateTime competitionDate)
        {
            Competition competition = new Competition();
            competition.CompetitionID = competitionID;
            competition.SportID = sportID;
            competition.YearID = yearID;
            competition.CompetitionTypeID = competitionTypeID;
            competition.BenchmarkTypeID = benchmarkTypeID;
            competition.Name = name;
            competition.CompetitionDate = competitionDate;
            return competition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionID
        {
            get
            {
                return _CompetitionID;
            }
            set
            {
                if (_CompetitionID != value)
                {
                    OnCompetitionIDChanging(value);
                    ReportPropertyChanging("CompetitionID");
                    _CompetitionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitionID");
                    OnCompetitionIDChanged();
                }
            }
        }
        private global::System.Int32 _CompetitionID;
        partial void OnCompetitionIDChanging(global::System.Int32 value);
        partial void OnCompetitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                OnYearIDChanging(value);
                ReportPropertyChanging("YearID");
                _YearID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearID");
                OnYearIDChanged();
            }
        }
        private global::System.String _YearID;
        partial void OnYearIDChanging(global::System.String value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompetitionTypeID
        {
            get
            {
                return _CompetitionTypeID;
            }
            set
            {
                OnCompetitionTypeIDChanging(value);
                ReportPropertyChanging("CompetitionTypeID");
                _CompetitionTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompetitionTypeID");
                OnCompetitionTypeIDChanged();
            }
        }
        private global::System.String _CompetitionTypeID;
        partial void OnCompetitionTypeIDChanging(global::System.String value);
        partial void OnCompetitionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTypeID
        {
            get
            {
                return _BenchmarkTypeID;
            }
            set
            {
                OnBenchmarkTypeIDChanging(value);
                ReportPropertyChanging("BenchmarkTypeID");
                _BenchmarkTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenchmarkTypeID");
                OnBenchmarkTypeIDChanged();
            }
        }
        private global::System.Int32 _BenchmarkTypeID;
        partial void OnBenchmarkTypeIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CompetitionDate
        {
            get
            {
                return _CompetitionDate;
            }
            set
            {
                OnCompetitionDateChanging(value);
                ReportPropertyChanging("CompetitionDate");
                _CompetitionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionDate");
                OnCompetitionDateChanged();
            }
        }
        private global::System.DateTime _CompetitionDate;
        partial void OnCompetitionDateChanging(global::System.DateTime value);
        partial void OnCompetitionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WDBID
        {
            get
            {
                return _WDBID;
            }
            set
            {
                OnWDBIDChanging(value);
                ReportPropertyChanging("WDBID");
                _WDBID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WDBID");
                OnWDBIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WDBID;
        partial void OnWDBIDChanging(Nullable<global::System.Int32> value);
        partial void OnWDBIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Competition_BenchmarkTypeID", "BenchmarkType")]
        public BenchmarkType BenchmarkType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_Competition_BenchmarkTypeID", "BenchmarkType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_Competition_BenchmarkTypeID", "BenchmarkType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenchmarkType> BenchmarkTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_Competition_BenchmarkTypeID", "BenchmarkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_Competition_BenchmarkTypeID", "BenchmarkType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Competition_CompetitionTypeID", "CompetitionType")]
        public CompetitionType CompetitionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionType>("OTP.Ring.Data.Model.FK_Competition_CompetitionTypeID", "CompetitionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionType>("OTP.Ring.Data.Model.FK_Competition_CompetitionTypeID", "CompetitionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitionType> CompetitionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionType>("OTP.Ring.Data.Model.FK_Competition_CompetitionTypeID", "CompetitionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitionType>("OTP.Ring.Data.Model.FK_Competition_CompetitionTypeID", "CompetitionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Competition_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Competition_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Competition_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Competition_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Competition_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Competition_YearID", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_Competition_YearID", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_Competition_YearID", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_Competition_YearID", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("OTP.Ring.Data.Model.FK_Competition_YearID", "Year", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_CompetitionSport_CompetitionID", "CompetitionSport")]
        public EntityCollection<CompetitionSport> CompetitionSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionSport>("OTP.Ring.Data.Model.FK_CompetitionSport_CompetitionID", "CompetitionSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionSport>("OTP.Ring.Data.Model.FK_CompetitionSport_CompetitionID", "CompetitionSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_CompetitionID", "DownloadStaging")]
        public EntityCollection<DownloadStaging> DownloadStagings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DownloadStaging>("OTP.Ring.Data.Model.FK_DownloadStaging_CompetitionID", "DownloadStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DownloadStaging>("OTP.Ring.Data.Model.FK_DownloadStaging_CompetitionID", "DownloadStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Result_CompetitionID", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("OTP.Ring.Data.Model.FK_Result_CompetitionID", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("OTP.Ring.Data.Model.FK_Result_CompetitionID", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_CompetitionID", "ResultStaging")]
        public EntityCollection<ResultStaging> ResultStagings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStaging_CompetitionID", "ResultStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStaging_CompetitionID", "ResultStaging", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="CompetitionSport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitionSport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitionSport object.
        /// </summary>
        /// <param name="competitionSportID">Initial value of the CompetitionSportID property.</param>
        /// <param name="competitionID">Initial value of the CompetitionID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="cancelled">Initial value of the Cancelled property.</param>
        public static CompetitionSport CreateCompetitionSport(global::System.Int32 competitionSportID, global::System.Int32 competitionID, global::System.String sportID, global::System.Boolean cancelled)
        {
            CompetitionSport competitionSport = new CompetitionSport();
            competitionSport.CompetitionSportID = competitionSportID;
            competitionSport.CompetitionID = competitionID;
            competitionSport.SportID = sportID;
            competitionSport.Cancelled = cancelled;
            return competitionSport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionSportID
        {
            get
            {
                return _CompetitionSportID;
            }
            set
            {
                if (_CompetitionSportID != value)
                {
                    OnCompetitionSportIDChanging(value);
                    ReportPropertyChanging("CompetitionSportID");
                    _CompetitionSportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitionSportID");
                    OnCompetitionSportIDChanged();
                }
            }
        }
        private global::System.Int32 _CompetitionSportID;
        partial void OnCompetitionSportIDChanging(global::System.Int32 value);
        partial void OnCompetitionSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionID
        {
            get
            {
                return _CompetitionID;
            }
            set
            {
                OnCompetitionIDChanging(value);
                ReportPropertyChanging("CompetitionID");
                _CompetitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionID");
                OnCompetitionIDChanged();
            }
        }
        private global::System.Int32 _CompetitionID;
        partial void OnCompetitionIDChanging(global::System.Int32 value);
        partial void OnCompetitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldSize
        {
            get
            {
                return _FieldSize;
            }
            set
            {
                OnFieldSizeChanging(value);
                ReportPropertyChanging("FieldSize");
                _FieldSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldSize");
                OnFieldSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldSize;
        partial void OnFieldSizeChanging(Nullable<global::System.Int32> value);
        partial void OnFieldSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Cancelled
        {
            get
            {
                return _Cancelled;
            }
            set
            {
                OnCancelledChanging(value);
                ReportPropertyChanging("Cancelled");
                _Cancelled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cancelled");
                OnCancelledChanged();
            }
        }
        private global::System.Boolean _Cancelled;
        partial void OnCancelledChanging(global::System.Boolean value);
        partial void OnCancelledChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_CompetitionSport_CompetitionID", "Competition")]
        public Competition Competition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_CompetitionSport_CompetitionID", "Competition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_CompetitionSport_CompetitionID", "Competition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competition> CompetitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_CompetitionSport_CompetitionID", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competition>("OTP.Ring.Data.Model.FK_CompetitionSport_CompetitionID", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_CompetitionSport_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_CompetitionSport_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_CompetitionSport_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_CompetitionSport_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_CompetitionSport_SportID", "Sport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="CompetitionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitionType object.
        /// </summary>
        /// <param name="competitionTypeID">Initial value of the CompetitionTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static CompetitionType CreateCompetitionType(global::System.String competitionTypeID, global::System.String name_EN, global::System.String name_FR)
        {
            CompetitionType competitionType = new CompetitionType();
            competitionType.CompetitionTypeID = competitionTypeID;
            competitionType.Name_EN = name_EN;
            competitionType.Name_FR = name_FR;
            return competitionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompetitionTypeID
        {
            get
            {
                return _CompetitionTypeID;
            }
            set
            {
                if (_CompetitionTypeID != value)
                {
                    OnCompetitionTypeIDChanging(value);
                    ReportPropertyChanging("CompetitionTypeID");
                    _CompetitionTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompetitionTypeID");
                    OnCompetitionTypeIDChanged();
                }
            }
        }
        private global::System.String _CompetitionTypeID;
        partial void OnCompetitionTypeIDChanging(global::System.String value);
        partial void OnCompetitionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Competition_CompetitionTypeID", "Competition")]
        public EntityCollection<Competition> Competitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competition>("OTP.Ring.Data.Model.FK_Competition_CompetitionTypeID", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competition>("OTP.Ring.Data.Model.FK_Competition_CompetitionTypeID", "Competition", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static Country CreateCountry(global::System.String countryID, global::System.String name_EN, global::System.String name_FR)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.Name_EN = name_EN;
            country.Name_FR = name_FR;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_CountryID", "Resource")]
        public EntityCollection<Resource> Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_CountryID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_CountryID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_HometownCountryID", "Resource")]
        public EntityCollection<Resource> Resources1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_HometownCountryID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_HometownCountryID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_MailingCountryID", "Resource")]
        public EntityCollection<Resource> Resources2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_MailingCountryID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_MailingCountryID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Result_CountryID", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("OTP.Ring.Data.Model.FK_Result_CountryID", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("OTP.Ring.Data.Model.FK_Result_CountryID", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_CountryID", "ResultStaging")]
        public EntityCollection<ResultStaging> ResultStagings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStaging_CountryID", "ResultStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStaging_CountryID", "ResultStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Team_CountryID", "Team")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("OTP.Ring.Data.Model.FK_Team_CountryID", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("OTP.Ring.Data.Model.FK_Team_CountryID", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Decode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Decode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Decode object.
        /// </summary>
        /// <param name="decodeCategoryID">Initial value of the DecodeCategoryID property.</param>
        /// <param name="decodeID">Initial value of the DecodeID property.</param>
        /// <param name="decodeID_EN">Initial value of the DecodeID_EN property.</param>
        /// <param name="decodeID_FR">Initial value of the DecodeID_FR property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static Decode CreateDecode(global::System.String decodeCategoryID, global::System.String decodeID, global::System.String decodeID_EN, global::System.String decodeID_FR, global::System.Int32 sortOrder)
        {
            Decode decode = new Decode();
            decode.DecodeCategoryID = decodeCategoryID;
            decode.DecodeID = decodeID;
            decode.DecodeID_EN = decodeID_EN;
            decode.DecodeID_FR = decodeID_FR;
            decode.SortOrder = sortOrder;
            return decode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeCategoryID
        {
            get
            {
                return _DecodeCategoryID;
            }
            set
            {
                if (_DecodeCategoryID != value)
                {
                    OnDecodeCategoryIDChanging(value);
                    ReportPropertyChanging("DecodeCategoryID");
                    _DecodeCategoryID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DecodeCategoryID");
                    OnDecodeCategoryIDChanged();
                }
            }
        }
        private global::System.String _DecodeCategoryID;
        partial void OnDecodeCategoryIDChanging(global::System.String value);
        partial void OnDecodeCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeID
        {
            get
            {
                return _DecodeID;
            }
            set
            {
                if (_DecodeID != value)
                {
                    OnDecodeIDChanging(value);
                    ReportPropertyChanging("DecodeID");
                    _DecodeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DecodeID");
                    OnDecodeIDChanged();
                }
            }
        }
        private global::System.String _DecodeID;
        partial void OnDecodeIDChanging(global::System.String value);
        partial void OnDecodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeID_EN
        {
            get
            {
                return _DecodeID_EN;
            }
            set
            {
                OnDecodeID_ENChanging(value);
                ReportPropertyChanging("DecodeID_EN");
                _DecodeID_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DecodeID_EN");
                OnDecodeID_ENChanged();
            }
        }
        private global::System.String _DecodeID_EN;
        partial void OnDecodeID_ENChanging(global::System.String value);
        partial void OnDecodeID_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeID_FR
        {
            get
            {
                return _DecodeID_FR;
            }
            set
            {
                OnDecodeID_FRChanging(value);
                ReportPropertyChanging("DecodeID_FR");
                _DecodeID_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DecodeID_FR");
                OnDecodeID_FRChanged();
            }
        }
        private global::System.String _DecodeID_FR;
        partial void OnDecodeID_FRChanging(global::System.String value);
        partial void OnDecodeID_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Decode_DecodeCategoryID", "DecodeCategory")]
        public DecodeCategory DecodeCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecodeCategory>("OTP.Ring.Data.Model.FK_Decode_DecodeCategoryID", "DecodeCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecodeCategory>("OTP.Ring.Data.Model.FK_Decode_DecodeCategoryID", "DecodeCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DecodeCategory> DecodeCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DecodeCategory>("OTP.Ring.Data.Model.FK_Decode_DecodeCategoryID", "DecodeCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DecodeCategory>("OTP.Ring.Data.Model.FK_Decode_DecodeCategoryID", "DecodeCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="DecodeCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DecodeCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DecodeCategory object.
        /// </summary>
        /// <param name="decodeCategoryID">Initial value of the DecodeCategoryID property.</param>
        public static DecodeCategory CreateDecodeCategory(global::System.String decodeCategoryID)
        {
            DecodeCategory decodeCategory = new DecodeCategory();
            decodeCategory.DecodeCategoryID = decodeCategoryID;
            return decodeCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeCategoryID
        {
            get
            {
                return _DecodeCategoryID;
            }
            set
            {
                if (_DecodeCategoryID != value)
                {
                    OnDecodeCategoryIDChanging(value);
                    ReportPropertyChanging("DecodeCategoryID");
                    _DecodeCategoryID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DecodeCategoryID");
                    OnDecodeCategoryIDChanged();
                }
            }
        }
        private global::System.String _DecodeCategoryID;
        partial void OnDecodeCategoryIDChanging(global::System.String value);
        partial void OnDecodeCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Decode_DecodeCategoryID", "Decode")]
        public EntityCollection<Decode> Decodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Decode>("OTP.Ring.Data.Model.FK_Decode_DecodeCategoryID", "Decode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Decode>("OTP.Ring.Data.Model.FK_Decode_DecodeCategoryID", "Decode", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="DirectAthleteSupport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectAthleteSupport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectAthleteSupport object.
        /// </summary>
        /// <param name="directAthleteSupportID">Initial value of the DirectAthleteSupportID property.</param>
        /// <param name="directAthleteSupportTypeID">Initial value of the DirectAthleteSupportTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static DirectAthleteSupport CreateDirectAthleteSupport(global::System.String directAthleteSupportID, global::System.String directAthleteSupportTypeID, global::System.String name_EN, global::System.String name_FR)
        {
            DirectAthleteSupport directAthleteSupport = new DirectAthleteSupport();
            directAthleteSupport.DirectAthleteSupportID = directAthleteSupportID;
            directAthleteSupport.DirectAthleteSupportTypeID = directAthleteSupportTypeID;
            directAthleteSupport.Name_EN = name_EN;
            directAthleteSupport.Name_FR = name_FR;
            return directAthleteSupport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DirectAthleteSupportID
        {
            get
            {
                return _DirectAthleteSupportID;
            }
            set
            {
                if (_DirectAthleteSupportID != value)
                {
                    OnDirectAthleteSupportIDChanging(value);
                    ReportPropertyChanging("DirectAthleteSupportID");
                    _DirectAthleteSupportID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DirectAthleteSupportID");
                    OnDirectAthleteSupportIDChanged();
                }
            }
        }
        private global::System.String _DirectAthleteSupportID;
        partial void OnDirectAthleteSupportIDChanging(global::System.String value);
        partial void OnDirectAthleteSupportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DirectAthleteSupportTypeID
        {
            get
            {
                return _DirectAthleteSupportTypeID;
            }
            set
            {
                OnDirectAthleteSupportTypeIDChanging(value);
                ReportPropertyChanging("DirectAthleteSupportTypeID");
                _DirectAthleteSupportTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DirectAthleteSupportTypeID");
                OnDirectAthleteSupportTypeIDChanged();
            }
        }
        private global::System.String _DirectAthleteSupportTypeID;
        partial void OnDirectAthleteSupportTypeIDChanging(global::System.String value);
        partial void OnDirectAthleteSupportTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DirectAthleteSupport_DirectAthleteSupportTypeID", "DirectAthleteSupportType")]
        public DirectAthleteSupportType DirectAthleteSupportType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectAthleteSupportType>("OTP.Ring.Data.Model.FK_DirectAthleteSupport_DirectAthleteSupportTypeID", "DirectAthleteSupportType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectAthleteSupportType>("OTP.Ring.Data.Model.FK_DirectAthleteSupport_DirectAthleteSupportTypeID", "DirectAthleteSupportType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DirectAthleteSupportType> DirectAthleteSupportTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectAthleteSupportType>("OTP.Ring.Data.Model.FK_DirectAthleteSupport_DirectAthleteSupportTypeID", "DirectAthleteSupportType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DirectAthleteSupportType>("OTP.Ring.Data.Model.FK_DirectAthleteSupport_DirectAthleteSupportTypeID", "DirectAthleteSupportType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceDirectAthleteSupport_DirectAthleteSupportID", "ResourceDirectAthleteSupport")]
        public EntityCollection<ResourceDirectAthleteSupport> ResourceDirectAthleteSupports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceDirectAthleteSupport>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_DirectAthleteSupportID", "ResourceDirectAthleteSupport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceDirectAthleteSupport>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_DirectAthleteSupportID", "ResourceDirectAthleteSupport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="DirectAthleteSupportType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectAthleteSupportType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectAthleteSupportType object.
        /// </summary>
        /// <param name="directAthleteSupportTypeID">Initial value of the DirectAthleteSupportTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static DirectAthleteSupportType CreateDirectAthleteSupportType(global::System.String directAthleteSupportTypeID, global::System.String name_EN, global::System.String name_FR)
        {
            DirectAthleteSupportType directAthleteSupportType = new DirectAthleteSupportType();
            directAthleteSupportType.DirectAthleteSupportTypeID = directAthleteSupportTypeID;
            directAthleteSupportType.Name_EN = name_EN;
            directAthleteSupportType.Name_FR = name_FR;
            return directAthleteSupportType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DirectAthleteSupportTypeID
        {
            get
            {
                return _DirectAthleteSupportTypeID;
            }
            set
            {
                if (_DirectAthleteSupportTypeID != value)
                {
                    OnDirectAthleteSupportTypeIDChanging(value);
                    ReportPropertyChanging("DirectAthleteSupportTypeID");
                    _DirectAthleteSupportTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DirectAthleteSupportTypeID");
                    OnDirectAthleteSupportTypeIDChanged();
                }
            }
        }
        private global::System.String _DirectAthleteSupportTypeID;
        partial void OnDirectAthleteSupportTypeIDChanging(global::System.String value);
        partial void OnDirectAthleteSupportTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DirectAthleteSupport_DirectAthleteSupportTypeID", "DirectAthleteSupport")]
        public EntityCollection<DirectAthleteSupport> DirectAthleteSupports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectAthleteSupport>("OTP.Ring.Data.Model.FK_DirectAthleteSupport_DirectAthleteSupportTypeID", "DirectAthleteSupport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectAthleteSupport>("OTP.Ring.Data.Model.FK_DirectAthleteSupport_DirectAthleteSupportTypeID", "DirectAthleteSupport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="DownloadStaging")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DownloadStaging : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DownloadStaging object.
        /// </summary>
        /// <param name="downloadStagingID">Initial value of the DownloadStagingID property.</param>
        /// <param name="downloadTemplateID">Initial value of the DownloadTemplateID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="eventDate">Initial value of the EventDate property.</param>
        /// <param name="eventDescription">Initial value of the EventDescription property.</param>
        /// <param name="benchmarkTypeID">Initial value of the BenchmarkTypeID property.</param>
        /// <param name="sourceRow">Initial value of the SourceRow property.</param>
        public static DownloadStaging CreateDownloadStaging(global::System.Int32 downloadStagingID, global::System.Int32 downloadTemplateID, global::System.String sportID, global::System.DateTime eventDate, global::System.String eventDescription, global::System.Int32 benchmarkTypeID, global::System.Int32 sourceRow)
        {
            DownloadStaging downloadStaging = new DownloadStaging();
            downloadStaging.DownloadStagingID = downloadStagingID;
            downloadStaging.DownloadTemplateID = downloadTemplateID;
            downloadStaging.SportID = sportID;
            downloadStaging.EventDate = eventDate;
            downloadStaging.EventDescription = eventDescription;
            downloadStaging.BenchmarkTypeID = benchmarkTypeID;
            downloadStaging.SourceRow = sourceRow;
            return downloadStaging;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownloadStagingID
        {
            get
            {
                return _DownloadStagingID;
            }
            set
            {
                if (_DownloadStagingID != value)
                {
                    OnDownloadStagingIDChanging(value);
                    ReportPropertyChanging("DownloadStagingID");
                    _DownloadStagingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DownloadStagingID");
                    OnDownloadStagingIDChanged();
                }
            }
        }
        private global::System.Int32 _DownloadStagingID;
        partial void OnDownloadStagingIDChanging(global::System.Int32 value);
        partial void OnDownloadStagingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownloadTemplateID
        {
            get
            {
                return _DownloadTemplateID;
            }
            set
            {
                OnDownloadTemplateIDChanging(value);
                ReportPropertyChanging("DownloadTemplateID");
                _DownloadTemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownloadTemplateID");
                OnDownloadTemplateIDChanged();
            }
        }
        private global::System.Int32 _DownloadTemplateID;
        partial void OnDownloadTemplateIDChanging(global::System.Int32 value);
        partial void OnDownloadTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompetitionID
        {
            get
            {
                return _CompetitionID;
            }
            set
            {
                OnCompetitionIDChanging(value);
                ReportPropertyChanging("CompetitionID");
                _CompetitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionID");
                OnCompetitionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompetitionID;
        partial void OnCompetitionIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompetitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDate
        {
            get
            {
                return _EventDate;
            }
            set
            {
                OnEventDateChanging(value);
                ReportPropertyChanging("EventDate");
                _EventDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDate");
                OnEventDateChanged();
            }
        }
        private global::System.DateTime _EventDate;
        partial void OnEventDateChanging(global::System.DateTime value);
        partial void OnEventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventDescription
        {
            get
            {
                return _EventDescription;
            }
            set
            {
                OnEventDescriptionChanging(value);
                ReportPropertyChanging("EventDescription");
                _EventDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventDescription");
                OnEventDescriptionChanged();
            }
        }
        private global::System.String _EventDescription;
        partial void OnEventDescriptionChanging(global::System.String value);
        partial void OnEventDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTypeID
        {
            get
            {
                return _BenchmarkTypeID;
            }
            set
            {
                OnBenchmarkTypeIDChanging(value);
                ReportPropertyChanging("BenchmarkTypeID");
                _BenchmarkTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenchmarkTypeID");
                OnBenchmarkTypeIDChanged();
            }
        }
        private global::System.Int32 _BenchmarkTypeID;
        partial void OnBenchmarkTypeIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceRow
        {
            get
            {
                return _SourceRow;
            }
            set
            {
                OnSourceRowChanging(value);
                ReportPropertyChanging("SourceRow");
                _SourceRow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceRow");
                OnSourceRowChanged();
            }
        }
        private global::System.Int32 _SourceRow;
        partial void OnSourceRowChanging(global::System.Int32 value);
        partial void OnSourceRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnA
        {
            get
            {
                return _ColumnA;
            }
            set
            {
                OnColumnAChanging(value);
                ReportPropertyChanging("ColumnA");
                _ColumnA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnA");
                OnColumnAChanged();
            }
        }
        private global::System.String _ColumnA;
        partial void OnColumnAChanging(global::System.String value);
        partial void OnColumnAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnB
        {
            get
            {
                return _ColumnB;
            }
            set
            {
                OnColumnBChanging(value);
                ReportPropertyChanging("ColumnB");
                _ColumnB = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnB");
                OnColumnBChanged();
            }
        }
        private global::System.String _ColumnB;
        partial void OnColumnBChanging(global::System.String value);
        partial void OnColumnBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnC
        {
            get
            {
                return _ColumnC;
            }
            set
            {
                OnColumnCChanging(value);
                ReportPropertyChanging("ColumnC");
                _ColumnC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnC");
                OnColumnCChanged();
            }
        }
        private global::System.String _ColumnC;
        partial void OnColumnCChanging(global::System.String value);
        partial void OnColumnCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnD
        {
            get
            {
                return _ColumnD;
            }
            set
            {
                OnColumnDChanging(value);
                ReportPropertyChanging("ColumnD");
                _ColumnD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnD");
                OnColumnDChanged();
            }
        }
        private global::System.String _ColumnD;
        partial void OnColumnDChanging(global::System.String value);
        partial void OnColumnDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnE
        {
            get
            {
                return _ColumnE;
            }
            set
            {
                OnColumnEChanging(value);
                ReportPropertyChanging("ColumnE");
                _ColumnE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnE");
                OnColumnEChanged();
            }
        }
        private global::System.String _ColumnE;
        partial void OnColumnEChanging(global::System.String value);
        partial void OnColumnEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnF
        {
            get
            {
                return _ColumnF;
            }
            set
            {
                OnColumnFChanging(value);
                ReportPropertyChanging("ColumnF");
                _ColumnF = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnF");
                OnColumnFChanged();
            }
        }
        private global::System.String _ColumnF;
        partial void OnColumnFChanging(global::System.String value);
        partial void OnColumnFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnG
        {
            get
            {
                return _ColumnG;
            }
            set
            {
                OnColumnGChanging(value);
                ReportPropertyChanging("ColumnG");
                _ColumnG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnG");
                OnColumnGChanged();
            }
        }
        private global::System.String _ColumnG;
        partial void OnColumnGChanging(global::System.String value);
        partial void OnColumnGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnH
        {
            get
            {
                return _ColumnH;
            }
            set
            {
                OnColumnHChanging(value);
                ReportPropertyChanging("ColumnH");
                _ColumnH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnH");
                OnColumnHChanged();
            }
        }
        private global::System.String _ColumnH;
        partial void OnColumnHChanging(global::System.String value);
        partial void OnColumnHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnI
        {
            get
            {
                return _ColumnI;
            }
            set
            {
                OnColumnIChanging(value);
                ReportPropertyChanging("ColumnI");
                _ColumnI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnI");
                OnColumnIChanged();
            }
        }
        private global::System.String _ColumnI;
        partial void OnColumnIChanging(global::System.String value);
        partial void OnColumnIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnJ
        {
            get
            {
                return _ColumnJ;
            }
            set
            {
                OnColumnJChanging(value);
                ReportPropertyChanging("ColumnJ");
                _ColumnJ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnJ");
                OnColumnJChanged();
            }
        }
        private global::System.String _ColumnJ;
        partial void OnColumnJChanging(global::System.String value);
        partial void OnColumnJChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnK
        {
            get
            {
                return _ColumnK;
            }
            set
            {
                OnColumnKChanging(value);
                ReportPropertyChanging("ColumnK");
                _ColumnK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnK");
                OnColumnKChanged();
            }
        }
        private global::System.String _ColumnK;
        partial void OnColumnKChanging(global::System.String value);
        partial void OnColumnKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnL
        {
            get
            {
                return _ColumnL;
            }
            set
            {
                OnColumnLChanging(value);
                ReportPropertyChanging("ColumnL");
                _ColumnL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnL");
                OnColumnLChanged();
            }
        }
        private global::System.String _ColumnL;
        partial void OnColumnLChanging(global::System.String value);
        partial void OnColumnLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnM
        {
            get
            {
                return _ColumnM;
            }
            set
            {
                OnColumnMChanging(value);
                ReportPropertyChanging("ColumnM");
                _ColumnM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnM");
                OnColumnMChanged();
            }
        }
        private global::System.String _ColumnM;
        partial void OnColumnMChanging(global::System.String value);
        partial void OnColumnMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnN
        {
            get
            {
                return _ColumnN;
            }
            set
            {
                OnColumnNChanging(value);
                ReportPropertyChanging("ColumnN");
                _ColumnN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnN");
                OnColumnNChanged();
            }
        }
        private global::System.String _ColumnN;
        partial void OnColumnNChanging(global::System.String value);
        partial void OnColumnNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnO
        {
            get
            {
                return _ColumnO;
            }
            set
            {
                OnColumnOChanging(value);
                ReportPropertyChanging("ColumnO");
                _ColumnO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnO");
                OnColumnOChanged();
            }
        }
        private global::System.String _ColumnO;
        partial void OnColumnOChanging(global::System.String value);
        partial void OnColumnOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnP
        {
            get
            {
                return _ColumnP;
            }
            set
            {
                OnColumnPChanging(value);
                ReportPropertyChanging("ColumnP");
                _ColumnP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnP");
                OnColumnPChanged();
            }
        }
        private global::System.String _ColumnP;
        partial void OnColumnPChanging(global::System.String value);
        partial void OnColumnPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnQ
        {
            get
            {
                return _ColumnQ;
            }
            set
            {
                OnColumnQChanging(value);
                ReportPropertyChanging("ColumnQ");
                _ColumnQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnQ");
                OnColumnQChanged();
            }
        }
        private global::System.String _ColumnQ;
        partial void OnColumnQChanging(global::System.String value);
        partial void OnColumnQChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnR
        {
            get
            {
                return _ColumnR;
            }
            set
            {
                OnColumnRChanging(value);
                ReportPropertyChanging("ColumnR");
                _ColumnR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnR");
                OnColumnRChanged();
            }
        }
        private global::System.String _ColumnR;
        partial void OnColumnRChanging(global::System.String value);
        partial void OnColumnRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnS
        {
            get
            {
                return _ColumnS;
            }
            set
            {
                OnColumnSChanging(value);
                ReportPropertyChanging("ColumnS");
                _ColumnS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnS");
                OnColumnSChanged();
            }
        }
        private global::System.String _ColumnS;
        partial void OnColumnSChanging(global::System.String value);
        partial void OnColumnSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnT
        {
            get
            {
                return _ColumnT;
            }
            set
            {
                OnColumnTChanging(value);
                ReportPropertyChanging("ColumnT");
                _ColumnT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnT");
                OnColumnTChanged();
            }
        }
        private global::System.String _ColumnT;
        partial void OnColumnTChanging(global::System.String value);
        partial void OnColumnTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnU
        {
            get
            {
                return _ColumnU;
            }
            set
            {
                OnColumnUChanging(value);
                ReportPropertyChanging("ColumnU");
                _ColumnU = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnU");
                OnColumnUChanged();
            }
        }
        private global::System.String _ColumnU;
        partial void OnColumnUChanging(global::System.String value);
        partial void OnColumnUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnV
        {
            get
            {
                return _ColumnV;
            }
            set
            {
                OnColumnVChanging(value);
                ReportPropertyChanging("ColumnV");
                _ColumnV = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnV");
                OnColumnVChanged();
            }
        }
        private global::System.String _ColumnV;
        partial void OnColumnVChanging(global::System.String value);
        partial void OnColumnVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnW
        {
            get
            {
                return _ColumnW;
            }
            set
            {
                OnColumnWChanging(value);
                ReportPropertyChanging("ColumnW");
                _ColumnW = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnW");
                OnColumnWChanged();
            }
        }
        private global::System.String _ColumnW;
        partial void OnColumnWChanging(global::System.String value);
        partial void OnColumnWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnX
        {
            get
            {
                return _ColumnX;
            }
            set
            {
                OnColumnXChanging(value);
                ReportPropertyChanging("ColumnX");
                _ColumnX = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnX");
                OnColumnXChanged();
            }
        }
        private global::System.String _ColumnX;
        partial void OnColumnXChanging(global::System.String value);
        partial void OnColumnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnY
        {
            get
            {
                return _ColumnY;
            }
            set
            {
                OnColumnYChanging(value);
                ReportPropertyChanging("ColumnY");
                _ColumnY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnY");
                OnColumnYChanged();
            }
        }
        private global::System.String _ColumnY;
        partial void OnColumnYChanging(global::System.String value);
        partial void OnColumnYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnZ
        {
            get
            {
                return _ColumnZ;
            }
            set
            {
                OnColumnZChanging(value);
                ReportPropertyChanging("ColumnZ");
                _ColumnZ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnZ");
                OnColumnZChanged();
            }
        }
        private global::System.String _ColumnZ;
        partial void OnColumnZChanging(global::System.String value);
        partial void OnColumnZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultColumn
        {
            get
            {
                return _DefaultColumn;
            }
            set
            {
                OnDefaultColumnChanging(value);
                ReportPropertyChanging("DefaultColumn");
                _DefaultColumn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultColumn");
                OnDefaultColumnChanged();
            }
        }
        private global::System.String _DefaultColumn;
        partial void OnDefaultColumnChanging(global::System.String value);
        partial void OnDefaultColumnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_BenchmarkTypeID", "BenchmarkType")]
        public BenchmarkType BenchmarkType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_DownloadStaging_BenchmarkTypeID", "BenchmarkType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_DownloadStaging_BenchmarkTypeID", "BenchmarkType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenchmarkType> BenchmarkTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_DownloadStaging_BenchmarkTypeID", "BenchmarkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_DownloadStaging_BenchmarkTypeID", "BenchmarkType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_CompetitionID", "Competition")]
        public Competition Competition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_DownloadStaging_CompetitionID", "Competition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_DownloadStaging_CompetitionID", "Competition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competition> CompetitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_DownloadStaging_CompetitionID", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competition>("OTP.Ring.Data.Model.FK_DownloadStaging_CompetitionID", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_DownloadTemplateID", "DownloadTemplate")]
        public DownloadTemplate DownloadTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_DownloadStaging_DownloadTemplateID", "DownloadTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_DownloadStaging_DownloadTemplateID", "DownloadTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DownloadTemplate> DownloadTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_DownloadStaging_DownloadTemplateID", "DownloadTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_DownloadStaging_DownloadTemplateID", "DownloadTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_DownloadStaging_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_DownloadStaging_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_DownloadStaging_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_DownloadStaging_SportID", "Sport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="DownloadTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DownloadTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DownloadTemplate object.
        /// </summary>
        /// <param name="downloadTemplateID">Initial value of the DownloadTemplateID property.</param>
        /// <param name="tableTemplateID">Initial value of the TableTemplateID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="teamSport">Initial value of the TeamSport property.</param>
        /// <param name="resourceTracking">Initial value of the ResourceTracking property.</param>
        public static DownloadTemplate CreateDownloadTemplate(global::System.Int32 downloadTemplateID, global::System.String tableTemplateID, global::System.String name_EN, global::System.String name_FR, global::System.Boolean teamSport, global::System.Boolean resourceTracking)
        {
            DownloadTemplate downloadTemplate = new DownloadTemplate();
            downloadTemplate.DownloadTemplateID = downloadTemplateID;
            downloadTemplate.TableTemplateID = tableTemplateID;
            downloadTemplate.Name_EN = name_EN;
            downloadTemplate.Name_FR = name_FR;
            downloadTemplate.TeamSport = teamSport;
            downloadTemplate.ResourceTracking = resourceTracking;
            return downloadTemplate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownloadTemplateID
        {
            get
            {
                return _DownloadTemplateID;
            }
            set
            {
                if (_DownloadTemplateID != value)
                {
                    OnDownloadTemplateIDChanging(value);
                    ReportPropertyChanging("DownloadTemplateID");
                    _DownloadTemplateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DownloadTemplateID");
                    OnDownloadTemplateIDChanged();
                }
            }
        }
        private global::System.Int32 _DownloadTemplateID;
        partial void OnDownloadTemplateIDChanging(global::System.Int32 value);
        partial void OnDownloadTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableTemplateID
        {
            get
            {
                return _TableTemplateID;
            }
            set
            {
                OnTableTemplateIDChanging(value);
                ReportPropertyChanging("TableTemplateID");
                _TableTemplateID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TableTemplateID");
                OnTableTemplateIDChanged();
            }
        }
        private global::System.String _TableTemplateID;
        partial void OnTableTemplateIDChanging(global::System.String value);
        partial void OnTableTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Instructions
        {
            get
            {
                return _Instructions;
            }
            set
            {
                OnInstructionsChanging(value);
                ReportPropertyChanging("Instructions");
                _Instructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Instructions");
                OnInstructionsChanged();
            }
        }
        private global::System.String _Instructions;
        partial void OnInstructionsChanging(global::System.String value);
        partial void OnInstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TeamSport
        {
            get
            {
                return _TeamSport;
            }
            set
            {
                OnTeamSportChanging(value);
                ReportPropertyChanging("TeamSport");
                _TeamSport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamSport");
                OnTeamSportChanged();
            }
        }
        private global::System.Boolean _TeamSport;
        partial void OnTeamSportChanging(global::System.Boolean value);
        partial void OnTeamSportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ResourceTracking
        {
            get
            {
                return _ResourceTracking;
            }
            set
            {
                OnResourceTrackingChanging(value);
                ReportPropertyChanging("ResourceTracking");
                _ResourceTracking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceTracking");
                OnResourceTrackingChanged();
            }
        }
        private global::System.Boolean _ResourceTracking;
        partial void OnResourceTrackingChanging(global::System.Boolean value);
        partial void OnResourceTrackingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_DownloadTemplateID", "DownloadStaging")]
        public EntityCollection<DownloadStaging> DownloadStagings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DownloadStaging>("OTP.Ring.Data.Model.FK_DownloadStaging_DownloadTemplateID", "DownloadStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DownloadStaging>("OTP.Ring.Data.Model.FK_DownloadStaging_DownloadTemplateID", "DownloadStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadTemplate_TableTemplateID", "TableTemplate")]
        public TableTemplate TableTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TableTemplate>("OTP.Ring.Data.Model.FK_DownloadTemplate_TableTemplateID", "TableTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TableTemplate>("OTP.Ring.Data.Model.FK_DownloadTemplate_TableTemplateID", "TableTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TableTemplate> TableTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TableTemplate>("OTP.Ring.Data.Model.FK_DownloadTemplate_TableTemplateID", "TableTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TableTemplate>("OTP.Ring.Data.Model.FK_DownloadTemplate_TableTemplateID", "TableTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadTemplateMapping_DownloadTemplateID", "DownloadTemplateMapping")]
        public EntityCollection<DownloadTemplateMapping> DownloadTemplateMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DownloadTemplateMapping>("OTP.Ring.Data.Model.FK_DownloadTemplateMapping_DownloadTemplateID", "DownloadTemplateMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DownloadTemplateMapping>("OTP.Ring.Data.Model.FK_DownloadTemplateMapping_DownloadTemplateID", "DownloadTemplateMapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_DownloadTemplateID", "ResultStaging")]
        public EntityCollection<ResultStaging> ResultStagings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStaging_DownloadTemplateID", "ResultStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStaging_DownloadTemplateID", "ResultStaging", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="DownloadTemplateMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DownloadTemplateMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DownloadTemplateMapping object.
        /// </summary>
        /// <param name="downloadTemplateMappingID">Initial value of the DownloadTemplateMappingID property.</param>
        /// <param name="downloadTemplateID">Initial value of the DownloadTemplateID property.</param>
        /// <param name="fieldName">Initial value of the FieldName property.</param>
        /// <param name="sourceRowOffset">Initial value of the SourceRowOffset property.</param>
        public static DownloadTemplateMapping CreateDownloadTemplateMapping(global::System.Int32 downloadTemplateMappingID, global::System.Int32 downloadTemplateID, global::System.String fieldName, global::System.Int32 sourceRowOffset)
        {
            DownloadTemplateMapping downloadTemplateMapping = new DownloadTemplateMapping();
            downloadTemplateMapping.DownloadTemplateMappingID = downloadTemplateMappingID;
            downloadTemplateMapping.DownloadTemplateID = downloadTemplateID;
            downloadTemplateMapping.FieldName = fieldName;
            downloadTemplateMapping.SourceRowOffset = sourceRowOffset;
            return downloadTemplateMapping;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownloadTemplateMappingID
        {
            get
            {
                return _DownloadTemplateMappingID;
            }
            set
            {
                if (_DownloadTemplateMappingID != value)
                {
                    OnDownloadTemplateMappingIDChanging(value);
                    ReportPropertyChanging("DownloadTemplateMappingID");
                    _DownloadTemplateMappingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DownloadTemplateMappingID");
                    OnDownloadTemplateMappingIDChanged();
                }
            }
        }
        private global::System.Int32 _DownloadTemplateMappingID;
        partial void OnDownloadTemplateMappingIDChanging(global::System.Int32 value);
        partial void OnDownloadTemplateMappingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownloadTemplateID
        {
            get
            {
                return _DownloadTemplateID;
            }
            set
            {
                OnDownloadTemplateIDChanging(value);
                ReportPropertyChanging("DownloadTemplateID");
                _DownloadTemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownloadTemplateID");
                OnDownloadTemplateIDChanged();
            }
        }
        private global::System.Int32 _DownloadTemplateID;
        partial void OnDownloadTemplateIDChanging(global::System.Int32 value);
        partial void OnDownloadTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceColumnName
        {
            get
            {
                return _SourceColumnName;
            }
            set
            {
                OnSourceColumnNameChanging(value);
                ReportPropertyChanging("SourceColumnName");
                _SourceColumnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceColumnName");
                OnSourceColumnNameChanged();
            }
        }
        private global::System.String _SourceColumnName;
        partial void OnSourceColumnNameChanging(global::System.String value);
        partial void OnSourceColumnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceColumn
        {
            get
            {
                return _SourceColumn;
            }
            set
            {
                OnSourceColumnChanging(value);
                ReportPropertyChanging("SourceColumn");
                _SourceColumn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceColumn");
                OnSourceColumnChanged();
            }
        }
        private global::System.String _SourceColumn;
        partial void OnSourceColumnChanging(global::System.String value);
        partial void OnSourceColumnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceDefault
        {
            get
            {
                return _SourceDefault;
            }
            set
            {
                OnSourceDefaultChanging(value);
                ReportPropertyChanging("SourceDefault");
                _SourceDefault = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceDefault");
                OnSourceDefaultChanged();
            }
        }
        private global::System.String _SourceDefault;
        partial void OnSourceDefaultChanging(global::System.String value);
        partial void OnSourceDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameFormat
        {
            get
            {
                return _NameFormat;
            }
            set
            {
                OnNameFormatChanging(value);
                ReportPropertyChanging("NameFormat");
                _NameFormat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameFormat");
                OnNameFormatChanged();
            }
        }
        private global::System.String _NameFormat;
        partial void OnNameFormatChanging(global::System.String value);
        partial void OnNameFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DateFormat
        {
            get
            {
                return _DateFormat;
            }
            set
            {
                OnDateFormatChanging(value);
                ReportPropertyChanging("DateFormat");
                _DateFormat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DateFormat");
                OnDateFormatChanged();
            }
        }
        private global::System.String _DateFormat;
        partial void OnDateFormatChanging(global::System.String value);
        partial void OnDateFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TimeFormat
        {
            get
            {
                return _TimeFormat;
            }
            set
            {
                OnTimeFormatChanging(value);
                ReportPropertyChanging("TimeFormat");
                _TimeFormat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeFormat");
                OnTimeFormatChanged();
            }
        }
        private global::System.String _TimeFormat;
        partial void OnTimeFormatChanging(global::System.String value);
        partial void OnTimeFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TeamMember
        {
            get
            {
                return _TeamMember;
            }
            set
            {
                OnTeamMemberChanging(value);
                ReportPropertyChanging("TeamMember");
                _TeamMember = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamMember");
                OnTeamMemberChanged();
            }
        }
        private Nullable<global::System.Int32> _TeamMember;
        partial void OnTeamMemberChanging(Nullable<global::System.Int32> value);
        partial void OnTeamMemberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceRowOffset
        {
            get
            {
                return _SourceRowOffset;
            }
            set
            {
                OnSourceRowOffsetChanging(value);
                ReportPropertyChanging("SourceRowOffset");
                _SourceRowOffset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceRowOffset");
                OnSourceRowOffsetChanged();
            }
        }
        private global::System.Int32 _SourceRowOffset;
        partial void OnSourceRowOffsetChanging(global::System.Int32 value);
        partial void OnSourceRowOffsetChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadTemplateMapping_DownloadTemplateID", "DownloadTemplate")]
        public DownloadTemplate DownloadTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_DownloadTemplateMapping_DownloadTemplateID", "DownloadTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_DownloadTemplateMapping_DownloadTemplateID", "DownloadTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DownloadTemplate> DownloadTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_DownloadTemplateMapping_DownloadTemplateID", "DownloadTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_DownloadTemplateMapping_DownloadTemplateID", "DownloadTemplate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Evaluation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Evaluation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Evaluation object.
        /// </summary>
        /// <param name="evaluationID">Initial value of the EvaluationID property.</param>
        /// <param name="evaluationVersionID">Initial value of the EvaluationVersionID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="evaluationPhase">Initial value of the EvaluationPhase property.</param>
        public static Evaluation CreateEvaluation(global::System.Int32 evaluationID, global::System.Int32 evaluationVersionID, global::System.String sportID, global::System.String evaluationPhase)
        {
            Evaluation evaluation = new Evaluation();
            evaluation.EvaluationID = evaluationID;
            evaluation.EvaluationVersionID = evaluationVersionID;
            evaluation.SportID = sportID;
            evaluation.EvaluationPhase = evaluationPhase;
            return evaluation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationID
        {
            get
            {
                return _EvaluationID;
            }
            set
            {
                if (_EvaluationID != value)
                {
                    OnEvaluationIDChanging(value);
                    ReportPropertyChanging("EvaluationID");
                    _EvaluationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EvaluationID");
                    OnEvaluationIDChanged();
                }
            }
        }
        private global::System.Int32 _EvaluationID;
        partial void OnEvaluationIDChanging(global::System.Int32 value);
        partial void OnEvaluationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationVersionID
        {
            get
            {
                return _EvaluationVersionID;
            }
            set
            {
                OnEvaluationVersionIDChanging(value);
                ReportPropertyChanging("EvaluationVersionID");
                _EvaluationVersionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvaluationVersionID");
                OnEvaluationVersionIDChanged();
            }
        }
        private global::System.Int32 _EvaluationVersionID;
        partial void OnEvaluationVersionIDChanging(global::System.Int32 value);
        partial void OnEvaluationVersionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EvaluationPhase
        {
            get
            {
                return _EvaluationPhase;
            }
            set
            {
                OnEvaluationPhaseChanging(value);
                ReportPropertyChanging("EvaluationPhase");
                _EvaluationPhase = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EvaluationPhase");
                OnEvaluationPhaseChanged();
            }
        }
        private global::System.String _EvaluationPhase;
        partial void OnEvaluationPhaseChanging(global::System.String value);
        partial void OnEvaluationPhaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Evaluation_EvaluationVersionID", "EvaluationVersion")]
        public EvaluationVersion EvaluationVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationVersion>("OTP.Ring.Data.Model.FK_Evaluation_EvaluationVersionID", "EvaluationVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationVersion>("OTP.Ring.Data.Model.FK_Evaluation_EvaluationVersionID", "EvaluationVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EvaluationVersion> EvaluationVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationVersion>("OTP.Ring.Data.Model.FK_Evaluation_EvaluationVersionID", "EvaluationVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EvaluationVersion>("OTP.Ring.Data.Model.FK_Evaluation_EvaluationVersionID", "EvaluationVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Evaluation_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Evaluation_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Evaluation_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Evaluation_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Evaluation_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationBestPractice_EvaluationID", "EvaluationBestPractice")]
        public EntityCollection<EvaluationBestPractice> EvaluationBestPractices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationBestPractice>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationID", "EvaluationBestPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationBestPractice>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationID", "EvaluationBestPractice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationQuestion_EvaluationID", "EvaluationQuestion")]
        public EntityCollection<EvaluationQuestion> EvaluationQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationQuestion>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationID", "EvaluationQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationQuestion>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationID", "EvaluationQuestion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="EvaluationBestPractice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EvaluationBestPractice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EvaluationBestPractice object.
        /// </summary>
        /// <param name="evaluationBestPracticeID">Initial value of the EvaluationBestPracticeID property.</param>
        /// <param name="evaluationID">Initial value of the EvaluationID property.</param>
        /// <param name="evaluationMasterPillarID">Initial value of the EvaluationMasterPillarID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        public static EvaluationBestPractice CreateEvaluationBestPractice(global::System.Int32 evaluationBestPracticeID, global::System.Int32 evaluationID, global::System.String evaluationMasterPillarID, global::System.String sportID)
        {
            EvaluationBestPractice evaluationBestPractice = new EvaluationBestPractice();
            evaluationBestPractice.EvaluationBestPracticeID = evaluationBestPracticeID;
            evaluationBestPractice.EvaluationID = evaluationID;
            evaluationBestPractice.EvaluationMasterPillarID = evaluationMasterPillarID;
            evaluationBestPractice.SportID = sportID;
            return evaluationBestPractice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationBestPracticeID
        {
            get
            {
                return _EvaluationBestPracticeID;
            }
            set
            {
                if (_EvaluationBestPracticeID != value)
                {
                    OnEvaluationBestPracticeIDChanging(value);
                    ReportPropertyChanging("EvaluationBestPracticeID");
                    _EvaluationBestPracticeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EvaluationBestPracticeID");
                    OnEvaluationBestPracticeIDChanged();
                }
            }
        }
        private global::System.Int32 _EvaluationBestPracticeID;
        partial void OnEvaluationBestPracticeIDChanging(global::System.Int32 value);
        partial void OnEvaluationBestPracticeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationID
        {
            get
            {
                return _EvaluationID;
            }
            set
            {
                OnEvaluationIDChanging(value);
                ReportPropertyChanging("EvaluationID");
                _EvaluationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvaluationID");
                OnEvaluationIDChanged();
            }
        }
        private global::System.Int32 _EvaluationID;
        partial void OnEvaluationIDChanging(global::System.Int32 value);
        partial void OnEvaluationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EvaluationMasterPillarID
        {
            get
            {
                return _EvaluationMasterPillarID;
            }
            set
            {
                OnEvaluationMasterPillarIDChanging(value);
                ReportPropertyChanging("EvaluationMasterPillarID");
                _EvaluationMasterPillarID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EvaluationMasterPillarID");
                OnEvaluationMasterPillarIDChanged();
            }
        }
        private global::System.String _EvaluationMasterPillarID;
        partial void OnEvaluationMasterPillarIDChanging(global::System.String value);
        partial void OnEvaluationMasterPillarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationBestPractice_EvaluationID", "Evaluation")]
        public Evaluation Evaluation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Evaluation>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationID", "Evaluation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Evaluation>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationID", "Evaluation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Evaluation> EvaluationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Evaluation>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationID", "Evaluation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Evaluation>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationID", "Evaluation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationBestPractice_EvaluationMasterPillarID", "EvaluationMasterPillar")]
        public EvaluationMasterPillar EvaluationMasterPillar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationMasterPillar>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationMasterPillarID", "EvaluationMasterPillar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationMasterPillar>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationMasterPillarID", "EvaluationMasterPillar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EvaluationMasterPillar> EvaluationMasterPillarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationMasterPillar>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationMasterPillarID", "EvaluationMasterPillar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EvaluationMasterPillar>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationMasterPillarID", "EvaluationMasterPillar", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="EvaluationMasterPillar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EvaluationMasterPillar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EvaluationMasterPillar object.
        /// </summary>
        /// <param name="evaluationMasterPillarID">Initial value of the EvaluationMasterPillarID property.</param>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="description_EN">Initial value of the Description_EN property.</param>
        /// <param name="description_FR">Initial value of the Description_FR property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="uniqueKey">Initial value of the UniqueKey property.</param>
        public static EvaluationMasterPillar CreateEvaluationMasterPillar(global::System.String evaluationMasterPillarID, global::System.String organizationTypeID, global::System.String name_EN, global::System.String name_FR, global::System.String description_EN, global::System.String description_FR, global::System.Int32 sortOrder, global::System.Int32 uniqueKey)
        {
            EvaluationMasterPillar evaluationMasterPillar = new EvaluationMasterPillar();
            evaluationMasterPillar.EvaluationMasterPillarID = evaluationMasterPillarID;
            evaluationMasterPillar.OrganizationTypeID = organizationTypeID;
            evaluationMasterPillar.Name_EN = name_EN;
            evaluationMasterPillar.Name_FR = name_FR;
            evaluationMasterPillar.Description_EN = description_EN;
            evaluationMasterPillar.Description_FR = description_FR;
            evaluationMasterPillar.SortOrder = sortOrder;
            evaluationMasterPillar.UniqueKey = uniqueKey;
            return evaluationMasterPillar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EvaluationMasterPillarID
        {
            get
            {
                return _EvaluationMasterPillarID;
            }
            set
            {
                if (_EvaluationMasterPillarID != value)
                {
                    OnEvaluationMasterPillarIDChanging(value);
                    ReportPropertyChanging("EvaluationMasterPillarID");
                    _EvaluationMasterPillarID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EvaluationMasterPillarID");
                    OnEvaluationMasterPillarIDChanged();
                }
            }
        }
        private global::System.String _EvaluationMasterPillarID;
        partial void OnEvaluationMasterPillarIDChanging(global::System.String value);
        partial void OnEvaluationMasterPillarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                OnOrganizationTypeIDChanging(value);
                ReportPropertyChanging("OrganizationTypeID");
                _OrganizationTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizationTypeID");
                OnOrganizationTypeIDChanged();
            }
        }
        private global::System.String _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.String value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description_EN
        {
            get
            {
                return _Description_EN;
            }
            set
            {
                OnDescription_ENChanging(value);
                ReportPropertyChanging("Description_EN");
                _Description_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description_EN");
                OnDescription_ENChanged();
            }
        }
        private global::System.String _Description_EN;
        partial void OnDescription_ENChanging(global::System.String value);
        partial void OnDescription_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description_FR
        {
            get
            {
                return _Description_FR;
            }
            set
            {
                OnDescription_FRChanging(value);
                ReportPropertyChanging("Description_FR");
                _Description_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description_FR");
                OnDescription_FRChanged();
            }
        }
        private global::System.String _Description_FR;
        partial void OnDescription_FRChanging(global::System.String value);
        partial void OnDescription_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniqueKey
        {
            get
            {
                return _UniqueKey;
            }
            set
            {
                OnUniqueKeyChanging(value);
                ReportPropertyChanging("UniqueKey");
                _UniqueKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueKey");
                OnUniqueKeyChanged();
            }
        }
        private global::System.Int32 _UniqueKey;
        partial void OnUniqueKeyChanging(global::System.Int32 value);
        partial void OnUniqueKeyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationBestPractice_EvaluationMasterPillarID", "EvaluationBestPractice")]
        public EntityCollection<EvaluationBestPractice> EvaluationBestPractices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationBestPractice>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationMasterPillarID", "EvaluationBestPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationBestPractice>("OTP.Ring.Data.Model.FK_EvaluationBestPractice_EvaluationMasterPillarID", "EvaluationBestPractice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationMasterPillar_OrganizationTypeID", "OrganizationType")]
        public OrganizationType OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_EvaluationMasterPillar_OrganizationTypeID", "OrganizationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_EvaluationMasterPillar_OrganizationTypeID", "OrganizationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationType> OrganizationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_EvaluationMasterPillar_OrganizationTypeID", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_EvaluationMasterPillar_OrganizationTypeID", "OrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationMasterQuestion_EvaluationMasterPillarID", "EvaluationMasterQuestion")]
        public EntityCollection<EvaluationMasterQuestion> EvaluationMasterQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationMasterQuestion>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_EvaluationMasterPillarID", "EvaluationMasterQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationMasterQuestion>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_EvaluationMasterPillarID", "EvaluationMasterQuestion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="EvaluationMasterQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EvaluationMasterQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EvaluationMasterQuestion object.
        /// </summary>
        /// <param name="evaluationMasterQuestionID">Initial value of the EvaluationMasterQuestionID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="masterQuestion">Initial value of the MasterQuestion property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static EvaluationMasterQuestion CreateEvaluationMasterQuestion(global::System.Int32 evaluationMasterQuestionID, global::System.String sportID, global::System.String masterQuestion, global::System.Int32 sortOrder)
        {
            EvaluationMasterQuestion evaluationMasterQuestion = new EvaluationMasterQuestion();
            evaluationMasterQuestion.EvaluationMasterQuestionID = evaluationMasterQuestionID;
            evaluationMasterQuestion.SportID = sportID;
            evaluationMasterQuestion.MasterQuestion = masterQuestion;
            evaluationMasterQuestion.SortOrder = sortOrder;
            return evaluationMasterQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationMasterQuestionID
        {
            get
            {
                return _EvaluationMasterQuestionID;
            }
            set
            {
                if (_EvaluationMasterQuestionID != value)
                {
                    OnEvaluationMasterQuestionIDChanging(value);
                    ReportPropertyChanging("EvaluationMasterQuestionID");
                    _EvaluationMasterQuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EvaluationMasterQuestionID");
                    OnEvaluationMasterQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _EvaluationMasterQuestionID;
        partial void OnEvaluationMasterQuestionIDChanging(global::System.Int32 value);
        partial void OnEvaluationMasterQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EvaluationMasterPillarID
        {
            get
            {
                return _EvaluationMasterPillarID;
            }
            set
            {
                OnEvaluationMasterPillarIDChanging(value);
                ReportPropertyChanging("EvaluationMasterPillarID");
                _EvaluationMasterPillarID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EvaluationMasterPillarID");
                OnEvaluationMasterPillarIDChanged();
            }
        }
        private global::System.String _EvaluationMasterPillarID;
        partial void OnEvaluationMasterPillarIDChanging(global::System.String value);
        partial void OnEvaluationMasterPillarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MasterQuestion
        {
            get
            {
                return _MasterQuestion;
            }
            set
            {
                OnMasterQuestionChanging(value);
                ReportPropertyChanging("MasterQuestion");
                _MasterQuestion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MasterQuestion");
                OnMasterQuestionChanged();
            }
        }
        private global::System.String _MasterQuestion;
        partial void OnMasterQuestionChanging(global::System.String value);
        partial void OnMasterQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationMasterQuestion_EvaluationMasterPillarID", "EvaluationMasterPillar")]
        public EvaluationMasterPillar EvaluationMasterPillar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationMasterPillar>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_EvaluationMasterPillarID", "EvaluationMasterPillar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationMasterPillar>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_EvaluationMasterPillarID", "EvaluationMasterPillar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EvaluationMasterPillar> EvaluationMasterPillarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationMasterPillar>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_EvaluationMasterPillarID", "EvaluationMasterPillar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EvaluationMasterPillar>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_EvaluationMasterPillarID", "EvaluationMasterPillar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationMasterQuestion_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersionQuestion_EvaluationMasterQuestionID", "EvaluationVersionQuestion")]
        public EntityCollection<EvaluationVersionQuestion> EvaluationVersionQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationVersionQuestion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationMasterQuestionID", "EvaluationVersionQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationVersionQuestion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationMasterQuestionID", "EvaluationVersionQuestion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="EvaluationQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EvaluationQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EvaluationQuestion object.
        /// </summary>
        /// <param name="evaluationQuestionID">Initial value of the EvaluationQuestionID property.</param>
        /// <param name="evaluationID">Initial value of the EvaluationID property.</param>
        /// <param name="evaluationVersionQuestionID">Initial value of the EvaluationVersionQuestionID property.</param>
        /// <param name="notApplicable">Initial value of the NotApplicable property.</param>
        public static EvaluationQuestion CreateEvaluationQuestion(global::System.Int32 evaluationQuestionID, global::System.Int32 evaluationID, global::System.Int32 evaluationVersionQuestionID, global::System.Boolean notApplicable)
        {
            EvaluationQuestion evaluationQuestion = new EvaluationQuestion();
            evaluationQuestion.EvaluationQuestionID = evaluationQuestionID;
            evaluationQuestion.EvaluationID = evaluationID;
            evaluationQuestion.EvaluationVersionQuestionID = evaluationVersionQuestionID;
            evaluationQuestion.NotApplicable = notApplicable;
            return evaluationQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationQuestionID
        {
            get
            {
                return _EvaluationQuestionID;
            }
            set
            {
                if (_EvaluationQuestionID != value)
                {
                    OnEvaluationQuestionIDChanging(value);
                    ReportPropertyChanging("EvaluationQuestionID");
                    _EvaluationQuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EvaluationQuestionID");
                    OnEvaluationQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _EvaluationQuestionID;
        partial void OnEvaluationQuestionIDChanging(global::System.Int32 value);
        partial void OnEvaluationQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationID
        {
            get
            {
                return _EvaluationID;
            }
            set
            {
                OnEvaluationIDChanging(value);
                ReportPropertyChanging("EvaluationID");
                _EvaluationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvaluationID");
                OnEvaluationIDChanged();
            }
        }
        private global::System.Int32 _EvaluationID;
        partial void OnEvaluationIDChanging(global::System.Int32 value);
        partial void OnEvaluationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationVersionQuestionID
        {
            get
            {
                return _EvaluationVersionQuestionID;
            }
            set
            {
                OnEvaluationVersionQuestionIDChanging(value);
                ReportPropertyChanging("EvaluationVersionQuestionID");
                _EvaluationVersionQuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvaluationVersionQuestionID");
                OnEvaluationVersionQuestionIDChanged();
            }
        }
        private global::System.Int32 _EvaluationVersionQuestionID;
        partial void OnEvaluationVersionQuestionIDChanging(global::System.Int32 value);
        partial void OnEvaluationVersionQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NotApplicable
        {
            get
            {
                return _NotApplicable;
            }
            set
            {
                OnNotApplicableChanging(value);
                ReportPropertyChanging("NotApplicable");
                _NotApplicable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotApplicable");
                OnNotApplicableChanged();
            }
        }
        private global::System.Boolean _NotApplicable;
        partial void OnNotApplicableChanging(global::System.Boolean value);
        partial void OnNotApplicableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HPAAssessmentInitial
        {
            get
            {
                return _HPAAssessmentInitial;
            }
            set
            {
                OnHPAAssessmentInitialChanging(value);
                ReportPropertyChanging("HPAAssessmentInitial");
                _HPAAssessmentInitial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HPAAssessmentInitial");
                OnHPAAssessmentInitialChanged();
            }
        }
        private global::System.String _HPAAssessmentInitial;
        partial void OnHPAAssessmentInitialChanging(global::System.String value);
        partial void OnHPAAssessmentInitialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EvaluationStatusInitial
        {
            get
            {
                return _EvaluationStatusInitial;
            }
            set
            {
                OnEvaluationStatusInitialChanging(value);
                ReportPropertyChanging("EvaluationStatusInitial");
                _EvaluationStatusInitial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EvaluationStatusInitial");
                OnEvaluationStatusInitialChanged();
            }
        }
        private global::System.String _EvaluationStatusInitial;
        partial void OnEvaluationStatusInitialChanging(global::System.String value);
        partial void OnEvaluationStatusInitialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HPAAssessmentCurrent
        {
            get
            {
                return _HPAAssessmentCurrent;
            }
            set
            {
                OnHPAAssessmentCurrentChanging(value);
                ReportPropertyChanging("HPAAssessmentCurrent");
                _HPAAssessmentCurrent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HPAAssessmentCurrent");
                OnHPAAssessmentCurrentChanged();
            }
        }
        private global::System.String _HPAAssessmentCurrent;
        partial void OnHPAAssessmentCurrentChanging(global::System.String value);
        partial void OnHPAAssessmentCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EvaluationStatusCurrent
        {
            get
            {
                return _EvaluationStatusCurrent;
            }
            set
            {
                OnEvaluationStatusCurrentChanging(value);
                ReportPropertyChanging("EvaluationStatusCurrent");
                _EvaluationStatusCurrent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EvaluationStatusCurrent");
                OnEvaluationStatusCurrentChanged();
            }
        }
        private global::System.String _EvaluationStatusCurrent;
        partial void OnEvaluationStatusCurrentChanging(global::System.String value);
        partial void OnEvaluationStatusCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationQuestion_EvaluationID", "Evaluation")]
        public Evaluation Evaluation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Evaluation>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationID", "Evaluation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Evaluation>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationID", "Evaluation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Evaluation> EvaluationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Evaluation>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationID", "Evaluation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Evaluation>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationID", "Evaluation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationQuestion_EvaluationVersionQuestionID", "EvaluationVersionQuestion")]
        public EvaluationVersionQuestion EvaluationVersionQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationVersionQuestion>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationVersionQuestionID", "EvaluationVersionQuestion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationVersionQuestion>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationVersionQuestionID", "EvaluationVersionQuestion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EvaluationVersionQuestion> EvaluationVersionQuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationVersionQuestion>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationVersionQuestionID", "EvaluationVersionQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EvaluationVersionQuestion>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationVersionQuestionID", "EvaluationVersionQuestion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="EvaluationVersion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EvaluationVersion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EvaluationVersion object.
        /// </summary>
        /// <param name="evaluationVersionID">Initial value of the EvaluationVersionID property.</param>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        /// <param name="yearID">Initial value of the YearID property.</param>
        /// <param name="versionID">Initial value of the VersionID property.</param>
        /// <param name="versionPhase">Initial value of the VersionPhase property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static EvaluationVersion CreateEvaluationVersion(global::System.Int32 evaluationVersionID, global::System.String organizationTypeID, global::System.String yearID, global::System.String versionID, global::System.String versionPhase, global::System.String name_EN, global::System.String name_FR)
        {
            EvaluationVersion evaluationVersion = new EvaluationVersion();
            evaluationVersion.EvaluationVersionID = evaluationVersionID;
            evaluationVersion.OrganizationTypeID = organizationTypeID;
            evaluationVersion.YearID = yearID;
            evaluationVersion.VersionID = versionID;
            evaluationVersion.VersionPhase = versionPhase;
            evaluationVersion.Name_EN = name_EN;
            evaluationVersion.Name_FR = name_FR;
            return evaluationVersion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationVersionID
        {
            get
            {
                return _EvaluationVersionID;
            }
            set
            {
                if (_EvaluationVersionID != value)
                {
                    OnEvaluationVersionIDChanging(value);
                    ReportPropertyChanging("EvaluationVersionID");
                    _EvaluationVersionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EvaluationVersionID");
                    OnEvaluationVersionIDChanged();
                }
            }
        }
        private global::System.Int32 _EvaluationVersionID;
        partial void OnEvaluationVersionIDChanging(global::System.Int32 value);
        partial void OnEvaluationVersionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                OnOrganizationTypeIDChanging(value);
                ReportPropertyChanging("OrganizationTypeID");
                _OrganizationTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizationTypeID");
                OnOrganizationTypeIDChanged();
            }
        }
        private global::System.String _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.String value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                OnYearIDChanging(value);
                ReportPropertyChanging("YearID");
                _YearID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearID");
                OnYearIDChanged();
            }
        }
        private global::System.String _YearID;
        partial void OnYearIDChanging(global::System.String value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VersionID
        {
            get
            {
                return _VersionID;
            }
            set
            {
                OnVersionIDChanging(value);
                ReportPropertyChanging("VersionID");
                _VersionID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VersionID");
                OnVersionIDChanged();
            }
        }
        private global::System.String _VersionID;
        partial void OnVersionIDChanging(global::System.String value);
        partial void OnVersionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VersionPhase
        {
            get
            {
                return _VersionPhase;
            }
            set
            {
                OnVersionPhaseChanging(value);
                ReportPropertyChanging("VersionPhase");
                _VersionPhase = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VersionPhase");
                OnVersionPhaseChanged();
            }
        }
        private global::System.String _VersionPhase;
        partial void OnVersionPhaseChanging(global::System.String value);
        partial void OnVersionPhaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Evaluation_EvaluationVersionID", "Evaluation")]
        public EntityCollection<Evaluation> Evaluations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Evaluation>("OTP.Ring.Data.Model.FK_Evaluation_EvaluationVersionID", "Evaluation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Evaluation>("OTP.Ring.Data.Model.FK_Evaluation_EvaluationVersionID", "Evaluation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersion_OrganizationTypeID", "OrganizationType")]
        public OrganizationType OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_EvaluationVersion_OrganizationTypeID", "OrganizationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_EvaluationVersion_OrganizationTypeID", "OrganizationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationType> OrganizationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_EvaluationVersion_OrganizationTypeID", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_EvaluationVersion_OrganizationTypeID", "OrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersion_YearID", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_EvaluationVersion_YearID", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_EvaluationVersion_YearID", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_EvaluationVersion_YearID", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("OTP.Ring.Data.Model.FK_EvaluationVersion_YearID", "Year", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersionQuestion_EvaluationVersionID", "EvaluationVersionQuestion")]
        public EntityCollection<EvaluationVersionQuestion> EvaluationVersionQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationVersionQuestion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationVersionID", "EvaluationVersionQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationVersionQuestion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationVersionID", "EvaluationVersionQuestion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="EvaluationVersionQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EvaluationVersionQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EvaluationVersionQuestion object.
        /// </summary>
        /// <param name="evaluationVersionQuestionID">Initial value of the EvaluationVersionQuestionID property.</param>
        /// <param name="evaluationVersionID">Initial value of the EvaluationVersionID property.</param>
        /// <param name="evaluationMasterQuestionID">Initial value of the EvaluationMasterQuestionID property.</param>
        /// <param name="versionQuestion">Initial value of the VersionQuestion property.</param>
        /// <param name="questionPhase">Initial value of the QuestionPhase property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        public static EvaluationVersionQuestion CreateEvaluationVersionQuestion(global::System.Int32 evaluationVersionQuestionID, global::System.Int32 evaluationVersionID, global::System.Int32 evaluationMasterQuestionID, global::System.String versionQuestion, global::System.String questionPhase, global::System.Int32 sortOrder, global::System.String sportID)
        {
            EvaluationVersionQuestion evaluationVersionQuestion = new EvaluationVersionQuestion();
            evaluationVersionQuestion.EvaluationVersionQuestionID = evaluationVersionQuestionID;
            evaluationVersionQuestion.EvaluationVersionID = evaluationVersionID;
            evaluationVersionQuestion.EvaluationMasterQuestionID = evaluationMasterQuestionID;
            evaluationVersionQuestion.VersionQuestion = versionQuestion;
            evaluationVersionQuestion.QuestionPhase = questionPhase;
            evaluationVersionQuestion.SortOrder = sortOrder;
            evaluationVersionQuestion.SportID = sportID;
            return evaluationVersionQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationVersionQuestionID
        {
            get
            {
                return _EvaluationVersionQuestionID;
            }
            set
            {
                if (_EvaluationVersionQuestionID != value)
                {
                    OnEvaluationVersionQuestionIDChanging(value);
                    ReportPropertyChanging("EvaluationVersionQuestionID");
                    _EvaluationVersionQuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EvaluationVersionQuestionID");
                    OnEvaluationVersionQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _EvaluationVersionQuestionID;
        partial void OnEvaluationVersionQuestionIDChanging(global::System.Int32 value);
        partial void OnEvaluationVersionQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationVersionID
        {
            get
            {
                return _EvaluationVersionID;
            }
            set
            {
                OnEvaluationVersionIDChanging(value);
                ReportPropertyChanging("EvaluationVersionID");
                _EvaluationVersionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvaluationVersionID");
                OnEvaluationVersionIDChanged();
            }
        }
        private global::System.Int32 _EvaluationVersionID;
        partial void OnEvaluationVersionIDChanging(global::System.Int32 value);
        partial void OnEvaluationVersionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EvaluationMasterQuestionID
        {
            get
            {
                return _EvaluationMasterQuestionID;
            }
            set
            {
                OnEvaluationMasterQuestionIDChanging(value);
                ReportPropertyChanging("EvaluationMasterQuestionID");
                _EvaluationMasterQuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvaluationMasterQuestionID");
                OnEvaluationMasterQuestionIDChanged();
            }
        }
        private global::System.Int32 _EvaluationMasterQuestionID;
        partial void OnEvaluationMasterQuestionIDChanging(global::System.Int32 value);
        partial void OnEvaluationMasterQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VersionQuestion
        {
            get
            {
                return _VersionQuestion;
            }
            set
            {
                OnVersionQuestionChanging(value);
                ReportPropertyChanging("VersionQuestion");
                _VersionQuestion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VersionQuestion");
                OnVersionQuestionChanged();
            }
        }
        private global::System.String _VersionQuestion;
        partial void OnVersionQuestionChanging(global::System.String value);
        partial void OnVersionQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuestionPhase
        {
            get
            {
                return _QuestionPhase;
            }
            set
            {
                OnQuestionPhaseChanging(value);
                ReportPropertyChanging("QuestionPhase");
                _QuestionPhase = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QuestionPhase");
                OnQuestionPhaseChanged();
            }
        }
        private global::System.String _QuestionPhase;
        partial void OnQuestionPhaseChanging(global::System.String value);
        partial void OnQuestionPhaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersionQuestion_EvaluationMasterQuestionID", "EvaluationMasterQuestion")]
        public EvaluationMasterQuestion EvaluationMasterQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationMasterQuestion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationMasterQuestionID", "EvaluationMasterQuestion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationMasterQuestion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationMasterQuestionID", "EvaluationMasterQuestion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EvaluationMasterQuestion> EvaluationMasterQuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationMasterQuestion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationMasterQuestionID", "EvaluationMasterQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EvaluationMasterQuestion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationMasterQuestionID", "EvaluationMasterQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationQuestion_EvaluationVersionQuestionID", "EvaluationQuestion")]
        public EntityCollection<EvaluationQuestion> EvaluationQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationQuestion>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationVersionQuestionID", "EvaluationQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationQuestion>("OTP.Ring.Data.Model.FK_EvaluationQuestion_EvaluationVersionQuestionID", "EvaluationQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersionQuestion_EvaluationVersionID", "EvaluationVersion")]
        public EvaluationVersion EvaluationVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationVersion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationVersionID", "EvaluationVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationVersion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationVersionID", "EvaluationVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EvaluationVersion> EvaluationVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EvaluationVersion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationVersionID", "EvaluationVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EvaluationVersion>("OTP.Ring.Data.Model.FK_EvaluationVersionQuestion_EvaluationVersionID", "EvaluationVersion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="FundingBlock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingBlock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingBlock object.
        /// </summary>
        /// <param name="fundingBlockID">Initial value of the FundingBlockID property.</param>
        /// <param name="fundingSummaryID">Initial value of the FundingSummaryID property.</param>
        /// <param name="fundingBlockTypeID">Initial value of the FundingBlockTypeID property.</param>
        public static FundingBlock CreateFundingBlock(global::System.Int32 fundingBlockID, global::System.Int32 fundingSummaryID, global::System.String fundingBlockTypeID)
        {
            FundingBlock fundingBlock = new FundingBlock();
            fundingBlock.FundingBlockID = fundingBlockID;
            fundingBlock.FundingSummaryID = fundingSummaryID;
            fundingBlock.FundingBlockTypeID = fundingBlockTypeID;
            return fundingBlock;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingBlockID
        {
            get
            {
                return _FundingBlockID;
            }
            set
            {
                if (_FundingBlockID != value)
                {
                    OnFundingBlockIDChanging(value);
                    ReportPropertyChanging("FundingBlockID");
                    _FundingBlockID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingBlockID");
                    OnFundingBlockIDChanged();
                }
            }
        }
        private global::System.Int32 _FundingBlockID;
        partial void OnFundingBlockIDChanging(global::System.Int32 value);
        partial void OnFundingBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSummaryID
        {
            get
            {
                return _FundingSummaryID;
            }
            set
            {
                OnFundingSummaryIDChanging(value);
                ReportPropertyChanging("FundingSummaryID");
                _FundingSummaryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundingSummaryID");
                OnFundingSummaryIDChanged();
            }
        }
        private global::System.Int32 _FundingSummaryID;
        partial void OnFundingSummaryIDChanging(global::System.Int32 value);
        partial void OnFundingSummaryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundingBlockTypeID
        {
            get
            {
                return _FundingBlockTypeID;
            }
            set
            {
                OnFundingBlockTypeIDChanging(value);
                ReportPropertyChanging("FundingBlockTypeID");
                _FundingBlockTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FundingBlockTypeID");
                OnFundingBlockTypeIDChanged();
            }
        }
        private global::System.String _FundingBlockTypeID;
        partial void OnFundingBlockTypeIDChanging(global::System.String value);
        partial void OnFundingBlockTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingBlock_FundingBlockTypeID", "FundingBlockType")]
        public FundingBlockType FundingBlockType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingBlock_FundingBlockTypeID", "FundingBlockType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingBlock_FundingBlockTypeID", "FundingBlockType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingBlockType> FundingBlockTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingBlock_FundingBlockTypeID", "FundingBlockType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingBlock_FundingBlockTypeID", "FundingBlockType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingBlock_FundingSummaryID", "FundingSummary")]
        public FundingSummary FundingSummary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSummary>("OTP.Ring.Data.Model.FK_FundingBlock_FundingSummaryID", "FundingSummary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSummary>("OTP.Ring.Data.Model.FK_FundingBlock_FundingSummaryID", "FundingSummary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingSummary> FundingSummaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSummary>("OTP.Ring.Data.Model.FK_FundingBlock_FundingSummaryID", "FundingSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingSummary>("OTP.Ring.Data.Model.FK_FundingBlock_FundingSummaryID", "FundingSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingCategory_FundingBlockID", "FundingCategory")]
        public EntityCollection<FundingCategory> FundingCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingCategory>("OTP.Ring.Data.Model.FK_FundingCategory_FundingBlockID", "FundingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingCategory>("OTP.Ring.Data.Model.FK_FundingCategory_FundingBlockID", "FundingCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="FundingBlockOrganizationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingBlockOrganizationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingBlockOrganizationType object.
        /// </summary>
        /// <param name="fundingBlockOrganizationTypeID">Initial value of the FundingBlockOrganizationTypeID property.</param>
        /// <param name="fundingBlockTypeID">Initial value of the FundingBlockTypeID property.</param>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        public static FundingBlockOrganizationType CreateFundingBlockOrganizationType(global::System.Int32 fundingBlockOrganizationTypeID, global::System.String fundingBlockTypeID, global::System.String organizationTypeID)
        {
            FundingBlockOrganizationType fundingBlockOrganizationType = new FundingBlockOrganizationType();
            fundingBlockOrganizationType.FundingBlockOrganizationTypeID = fundingBlockOrganizationTypeID;
            fundingBlockOrganizationType.FundingBlockTypeID = fundingBlockTypeID;
            fundingBlockOrganizationType.OrganizationTypeID = organizationTypeID;
            return fundingBlockOrganizationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingBlockOrganizationTypeID
        {
            get
            {
                return _FundingBlockOrganizationTypeID;
            }
            set
            {
                if (_FundingBlockOrganizationTypeID != value)
                {
                    OnFundingBlockOrganizationTypeIDChanging(value);
                    ReportPropertyChanging("FundingBlockOrganizationTypeID");
                    _FundingBlockOrganizationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingBlockOrganizationTypeID");
                    OnFundingBlockOrganizationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FundingBlockOrganizationTypeID;
        partial void OnFundingBlockOrganizationTypeIDChanging(global::System.Int32 value);
        partial void OnFundingBlockOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundingBlockTypeID
        {
            get
            {
                return _FundingBlockTypeID;
            }
            set
            {
                OnFundingBlockTypeIDChanging(value);
                ReportPropertyChanging("FundingBlockTypeID");
                _FundingBlockTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FundingBlockTypeID");
                OnFundingBlockTypeIDChanged();
            }
        }
        private global::System.String _FundingBlockTypeID;
        partial void OnFundingBlockTypeIDChanging(global::System.String value);
        partial void OnFundingBlockTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                OnOrganizationTypeIDChanging(value);
                ReportPropertyChanging("OrganizationTypeID");
                _OrganizationTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizationTypeID");
                OnOrganizationTypeIDChanged();
            }
        }
        private global::System.String _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.String value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingBlockOrganizationType_FundingBlockTypeID", "FundingBlockType")]
        public FundingBlockType FundingBlockType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_FundingBlockTypeID", "FundingBlockType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_FundingBlockTypeID", "FundingBlockType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingBlockType> FundingBlockTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_FundingBlockTypeID", "FundingBlockType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_FundingBlockTypeID", "FundingBlockType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingBlockOrganizationType_OrganizationTypeID", "OrganizationType")]
        public OrganizationType OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_OrganizationTypeID", "OrganizationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_OrganizationTypeID", "OrganizationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationType> OrganizationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_OrganizationTypeID", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_OrganizationTypeID", "OrganizationType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="FundingBlockType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingBlockType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingBlockType object.
        /// </summary>
        /// <param name="fundingBlockTypeID">Initial value of the FundingBlockTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static FundingBlockType CreateFundingBlockType(global::System.String fundingBlockTypeID, global::System.String name_EN, global::System.String name_FR, global::System.Int32 sortOrder, global::System.Boolean active)
        {
            FundingBlockType fundingBlockType = new FundingBlockType();
            fundingBlockType.FundingBlockTypeID = fundingBlockTypeID;
            fundingBlockType.Name_EN = name_EN;
            fundingBlockType.Name_FR = name_FR;
            fundingBlockType.SortOrder = sortOrder;
            fundingBlockType.Active = active;
            return fundingBlockType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundingBlockTypeID
        {
            get
            {
                return _FundingBlockTypeID;
            }
            set
            {
                if (_FundingBlockTypeID != value)
                {
                    OnFundingBlockTypeIDChanging(value);
                    ReportPropertyChanging("FundingBlockTypeID");
                    _FundingBlockTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FundingBlockTypeID");
                    OnFundingBlockTypeIDChanged();
                }
            }
        }
        private global::System.String _FundingBlockTypeID;
        partial void OnFundingBlockTypeIDChanging(global::System.String value);
        partial void OnFundingBlockTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingBlock_FundingBlockTypeID", "FundingBlock")]
        public EntityCollection<FundingBlock> FundingBlocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingBlock>("OTP.Ring.Data.Model.FK_FundingBlock_FundingBlockTypeID", "FundingBlock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingBlock>("OTP.Ring.Data.Model.FK_FundingBlock_FundingBlockTypeID", "FundingBlock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingBlockOrganizationType_FundingBlockTypeID", "FundingBlockOrganizationType")]
        public EntityCollection<FundingBlockOrganizationType> FundingBlockOrganizationTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingBlockOrganizationType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_FundingBlockTypeID", "FundingBlockOrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingBlockOrganizationType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_FundingBlockTypeID", "FundingBlockOrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingCategoryType_FundingBlockTypeID", "FundingCategoryType")]
        public EntityCollection<FundingCategoryType> FundingCategoryTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingCategoryType>("OTP.Ring.Data.Model.FK_FundingCategoryType_FundingBlockTypeID", "FundingCategoryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingCategoryType>("OTP.Ring.Data.Model.FK_FundingCategoryType_FundingBlockTypeID", "FundingCategoryType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="FundingCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingCategory object.
        /// </summary>
        /// <param name="fundingCategoryID">Initial value of the FundingCategoryID property.</param>
        /// <param name="fundingBlockID">Initial value of the FundingBlockID property.</param>
        /// <param name="fundingCategoryTypeID">Initial value of the FundingCategoryTypeID property.</param>
        public static FundingCategory CreateFundingCategory(global::System.Int32 fundingCategoryID, global::System.Int32 fundingBlockID, global::System.String fundingCategoryTypeID)
        {
            FundingCategory fundingCategory = new FundingCategory();
            fundingCategory.FundingCategoryID = fundingCategoryID;
            fundingCategory.FundingBlockID = fundingBlockID;
            fundingCategory.FundingCategoryTypeID = fundingCategoryTypeID;
            return fundingCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingCategoryID
        {
            get
            {
                return _FundingCategoryID;
            }
            set
            {
                if (_FundingCategoryID != value)
                {
                    OnFundingCategoryIDChanging(value);
                    ReportPropertyChanging("FundingCategoryID");
                    _FundingCategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingCategoryID");
                    OnFundingCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _FundingCategoryID;
        partial void OnFundingCategoryIDChanging(global::System.Int32 value);
        partial void OnFundingCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingBlockID
        {
            get
            {
                return _FundingBlockID;
            }
            set
            {
                OnFundingBlockIDChanging(value);
                ReportPropertyChanging("FundingBlockID");
                _FundingBlockID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundingBlockID");
                OnFundingBlockIDChanged();
            }
        }
        private global::System.Int32 _FundingBlockID;
        partial void OnFundingBlockIDChanging(global::System.Int32 value);
        partial void OnFundingBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundingCategoryTypeID
        {
            get
            {
                return _FundingCategoryTypeID;
            }
            set
            {
                OnFundingCategoryTypeIDChanging(value);
                ReportPropertyChanging("FundingCategoryTypeID");
                _FundingCategoryTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FundingCategoryTypeID");
                OnFundingCategoryTypeIDChanged();
            }
        }
        private global::System.String _FundingCategoryTypeID;
        partial void OnFundingCategoryTypeIDChanging(global::System.String value);
        partial void OnFundingCategoryTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingCategory_FundingBlockID", "FundingBlock")]
        public FundingBlock FundingBlock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlock>("OTP.Ring.Data.Model.FK_FundingCategory_FundingBlockID", "FundingBlock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlock>("OTP.Ring.Data.Model.FK_FundingCategory_FundingBlockID", "FundingBlock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingBlock> FundingBlockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlock>("OTP.Ring.Data.Model.FK_FundingCategory_FundingBlockID", "FundingBlock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingBlock>("OTP.Ring.Data.Model.FK_FundingCategory_FundingBlockID", "FundingBlock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingCategory_FundingCategoryTypeID", "FundingCategoryType")]
        public FundingCategoryType FundingCategoryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingCategoryType>("OTP.Ring.Data.Model.FK_FundingCategory_FundingCategoryTypeID", "FundingCategoryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingCategoryType>("OTP.Ring.Data.Model.FK_FundingCategory_FundingCategoryTypeID", "FundingCategoryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingCategoryType> FundingCategoryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingCategoryType>("OTP.Ring.Data.Model.FK_FundingCategory_FundingCategoryTypeID", "FundingCategoryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingCategoryType>("OTP.Ring.Data.Model.FK_FundingCategory_FundingCategoryTypeID", "FundingCategoryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingDetail_FundingCategoryID", "FundingDetail")]
        public EntityCollection<FundingDetail> FundingDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingDetail>("OTP.Ring.Data.Model.FK_FundingDetail_FundingCategoryID", "FundingDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingDetail>("OTP.Ring.Data.Model.FK_FundingDetail_FundingCategoryID", "FundingDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="FundingCategoryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingCategoryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingCategoryType object.
        /// </summary>
        /// <param name="fundingCategoryTypeID">Initial value of the FundingCategoryTypeID property.</param>
        /// <param name="fundingBlockTypeID">Initial value of the FundingBlockTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="cSCRequired">Initial value of the CSCRequired property.</param>
        /// <param name="resourceRequired">Initial value of the ResourceRequired property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static FundingCategoryType CreateFundingCategoryType(global::System.String fundingCategoryTypeID, global::System.String fundingBlockTypeID, global::System.String name_EN, global::System.String name_FR, global::System.Boolean cSCRequired, global::System.Boolean resourceRequired, global::System.Int32 sortOrder, global::System.Boolean active)
        {
            FundingCategoryType fundingCategoryType = new FundingCategoryType();
            fundingCategoryType.FundingCategoryTypeID = fundingCategoryTypeID;
            fundingCategoryType.FundingBlockTypeID = fundingBlockTypeID;
            fundingCategoryType.Name_EN = name_EN;
            fundingCategoryType.Name_FR = name_FR;
            fundingCategoryType.CSCRequired = cSCRequired;
            fundingCategoryType.ResourceRequired = resourceRequired;
            fundingCategoryType.SortOrder = sortOrder;
            fundingCategoryType.Active = active;
            return fundingCategoryType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundingCategoryTypeID
        {
            get
            {
                return _FundingCategoryTypeID;
            }
            set
            {
                if (_FundingCategoryTypeID != value)
                {
                    OnFundingCategoryTypeIDChanging(value);
                    ReportPropertyChanging("FundingCategoryTypeID");
                    _FundingCategoryTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FundingCategoryTypeID");
                    OnFundingCategoryTypeIDChanged();
                }
            }
        }
        private global::System.String _FundingCategoryTypeID;
        partial void OnFundingCategoryTypeIDChanging(global::System.String value);
        partial void OnFundingCategoryTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundingBlockTypeID
        {
            get
            {
                return _FundingBlockTypeID;
            }
            set
            {
                OnFundingBlockTypeIDChanging(value);
                ReportPropertyChanging("FundingBlockTypeID");
                _FundingBlockTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FundingBlockTypeID");
                OnFundingBlockTypeIDChanged();
            }
        }
        private global::System.String _FundingBlockTypeID;
        partial void OnFundingBlockTypeIDChanging(global::System.String value);
        partial void OnFundingBlockTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CSCRequired
        {
            get
            {
                return _CSCRequired;
            }
            set
            {
                OnCSCRequiredChanging(value);
                ReportPropertyChanging("CSCRequired");
                _CSCRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CSCRequired");
                OnCSCRequiredChanged();
            }
        }
        private global::System.Boolean _CSCRequired;
        partial void OnCSCRequiredChanging(global::System.Boolean value);
        partial void OnCSCRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ResourceRequired
        {
            get
            {
                return _ResourceRequired;
            }
            set
            {
                OnResourceRequiredChanging(value);
                ReportPropertyChanging("ResourceRequired");
                _ResourceRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceRequired");
                OnResourceRequiredChanged();
            }
        }
        private global::System.Boolean _ResourceRequired;
        partial void OnResourceRequiredChanging(global::System.Boolean value);
        partial void OnResourceRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceTypeID
        {
            get
            {
                return _ResourceTypeID;
            }
            set
            {
                OnResourceTypeIDChanging(value);
                ReportPropertyChanging("ResourceTypeID");
                _ResourceTypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceTypeID");
                OnResourceTypeIDChanged();
            }
        }
        private global::System.String _ResourceTypeID;
        partial void OnResourceTypeIDChanging(global::System.String value);
        partial void OnResourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingCategoryType_FundingBlockTypeID", "FundingBlockType")]
        public FundingBlockType FundingBlockType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingCategoryType_FundingBlockTypeID", "FundingBlockType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingCategoryType_FundingBlockTypeID", "FundingBlockType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingBlockType> FundingBlockTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingCategoryType_FundingBlockTypeID", "FundingBlockType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingBlockType>("OTP.Ring.Data.Model.FK_FundingCategoryType_FundingBlockTypeID", "FundingBlockType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingCategory_FundingCategoryTypeID", "FundingCategory")]
        public EntityCollection<FundingCategory> FundingCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingCategory>("OTP.Ring.Data.Model.FK_FundingCategory_FundingCategoryTypeID", "FundingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingCategory>("OTP.Ring.Data.Model.FK_FundingCategory_FundingCategoryTypeID", "FundingCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingCategoryType_ResourceTypeID", "ResourceType")]
        public ResourceType ResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_FundingCategoryType_ResourceTypeID", "ResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_FundingCategoryType_ResourceTypeID", "ResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceType> ResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_FundingCategoryType_ResourceTypeID", "ResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_FundingCategoryType_ResourceTypeID", "ResourceType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="FundingDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingDetail object.
        /// </summary>
        /// <param name="fundingDetailID">Initial value of the FundingDetailID property.</param>
        /// <param name="fundingCategoryID">Initial value of the FundingCategoryID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="recurring">Initial value of the Recurring property.</param>
        public static FundingDetail CreateFundingDetail(global::System.Int32 fundingDetailID, global::System.Int32 fundingCategoryID, global::System.String description, global::System.Boolean recurring)
        {
            FundingDetail fundingDetail = new FundingDetail();
            fundingDetail.FundingDetailID = fundingDetailID;
            fundingDetail.FundingCategoryID = fundingCategoryID;
            fundingDetail.Description = description;
            fundingDetail.Recurring = recurring;
            return fundingDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingDetailID
        {
            get
            {
                return _FundingDetailID;
            }
            set
            {
                if (_FundingDetailID != value)
                {
                    OnFundingDetailIDChanging(value);
                    ReportPropertyChanging("FundingDetailID");
                    _FundingDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingDetailID");
                    OnFundingDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _FundingDetailID;
        partial void OnFundingDetailIDChanging(global::System.Int32 value);
        partial void OnFundingDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingCategoryID
        {
            get
            {
                return _FundingCategoryID;
            }
            set
            {
                OnFundingCategoryIDChanging(value);
                ReportPropertyChanging("FundingCategoryID");
                _FundingCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundingCategoryID");
                OnFundingCategoryIDChanged();
            }
        }
        private global::System.Int32 _FundingCategoryID;
        partial void OnFundingCategoryIDChanging(global::System.Int32 value);
        partial void OnFundingCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.String _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.String value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceID;
        partial void OnResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PercentCommitted
        {
            get
            {
                return _PercentCommitted;
            }
            set
            {
                OnPercentCommittedChanging(value);
                ReportPropertyChanging("PercentCommitted");
                _PercentCommitted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PercentCommitted");
                OnPercentCommittedChanged();
            }
        }
        private Nullable<global::System.Decimal> _PercentCommitted;
        partial void OnPercentCommittedChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentCommittedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FundingPriority
        {
            get
            {
                return _FundingPriority;
            }
            set
            {
                OnFundingPriorityChanging(value);
                ReportPropertyChanging("FundingPriority");
                _FundingPriority = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FundingPriority");
                OnFundingPriorityChanged();
            }
        }
        private global::System.String _FundingPriority;
        partial void OnFundingPriorityChanging(global::System.String value);
        partial void OnFundingPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActualTotal
        {
            get
            {
                return _ActualTotal;
            }
            set
            {
                OnActualTotalChanging(value);
                ReportPropertyChanging("ActualTotal");
                _ActualTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualTotal");
                OnActualTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActualTotal;
        partial void OnActualTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnActualTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RequestNSO
        {
            get
            {
                return _RequestNSO;
            }
            set
            {
                OnRequestNSOChanging(value);
                ReportPropertyChanging("RequestNSO");
                _RequestNSO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestNSO");
                OnRequestNSOChanged();
            }
        }
        private Nullable<global::System.Decimal> _RequestNSO;
        partial void OnRequestNSOChanging(Nullable<global::System.Decimal> value);
        partial void OnRequestNSOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RequestSC
        {
            get
            {
                return _RequestSC;
            }
            set
            {
                OnRequestSCChanging(value);
                ReportPropertyChanging("RequestSC");
                _RequestSC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestSC");
                OnRequestSCChanged();
            }
        }
        private Nullable<global::System.Decimal> _RequestSC;
        partial void OnRequestSCChanging(Nullable<global::System.Decimal> value);
        partial void OnRequestSCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RequestOTP
        {
            get
            {
                return _RequestOTP;
            }
            set
            {
                OnRequestOTPChanging(value);
                ReportPropertyChanging("RequestOTP");
                _RequestOTP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestOTP");
                OnRequestOTPChanged();
            }
        }
        private Nullable<global::System.Decimal> _RequestOTP;
        partial void OnRequestOTPChanging(Nullable<global::System.Decimal> value);
        partial void OnRequestOTPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RecommendTotal
        {
            get
            {
                return _RecommendTotal;
            }
            set
            {
                OnRecommendTotalChanging(value);
                ReportPropertyChanging("RecommendTotal");
                _RecommendTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecommendTotal");
                OnRecommendTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _RecommendTotal;
        partial void OnRecommendTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnRecommendTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RecommendSC
        {
            get
            {
                return _RecommendSC;
            }
            set
            {
                OnRecommendSCChanging(value);
                ReportPropertyChanging("RecommendSC");
                _RecommendSC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecommendSC");
                OnRecommendSCChanged();
            }
        }
        private Nullable<global::System.Decimal> _RecommendSC;
        partial void OnRecommendSCChanging(Nullable<global::System.Decimal> value);
        partial void OnRecommendSCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RecommendCOC
        {
            get
            {
                return _RecommendCOC;
            }
            set
            {
                OnRecommendCOCChanging(value);
                ReportPropertyChanging("RecommendCOC");
                _RecommendCOC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecommendCOC");
                OnRecommendCOCChanged();
            }
        }
        private Nullable<global::System.Decimal> _RecommendCOC;
        partial void OnRecommendCOCChanging(Nullable<global::System.Decimal> value);
        partial void OnRecommendCOCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundsTotal
        {
            get
            {
                return _FundsTotal;
            }
            set
            {
                OnFundsTotalChanging(value);
                ReportPropertyChanging("FundsTotal");
                _FundsTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundsTotal");
                OnFundsTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundsTotal;
        partial void OnFundsTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnFundsTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundsSC
        {
            get
            {
                return _FundsSC;
            }
            set
            {
                OnFundsSCChanging(value);
                ReportPropertyChanging("FundsSC");
                _FundsSC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundsSC");
                OnFundsSCChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundsSC;
        partial void OnFundsSCChanging(Nullable<global::System.Decimal> value);
        partial void OnFundsSCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundsCOC
        {
            get
            {
                return _FundsCOC;
            }
            set
            {
                OnFundsCOCChanging(value);
                ReportPropertyChanging("FundsCOC");
                _FundsCOC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundsCOC");
                OnFundsCOCChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundsCOC;
        partial void OnFundsCOCChanging(Nullable<global::System.Decimal> value);
        partial void OnFundsCOCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RecommendTotalHPA
        {
            get
            {
                return _RecommendTotalHPA;
            }
            set
            {
                OnRecommendTotalHPAChanging(value);
                ReportPropertyChanging("RecommendTotalHPA");
                _RecommendTotalHPA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecommendTotalHPA");
                OnRecommendTotalHPAChanged();
            }
        }
        private Nullable<global::System.Decimal> _RecommendTotalHPA;
        partial void OnRecommendTotalHPAChanging(Nullable<global::System.Decimal> value);
        partial void OnRecommendTotalHPAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RecommendTotalOTP
        {
            get
            {
                return _RecommendTotalOTP;
            }
            set
            {
                OnRecommendTotalOTPChanging(value);
                ReportPropertyChanging("RecommendTotalOTP");
                _RecommendTotalOTP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecommendTotalOTP");
                OnRecommendTotalOTPChanged();
            }
        }
        private Nullable<global::System.Decimal> _RecommendTotalOTP;
        partial void OnRecommendTotalOTPChanging(Nullable<global::System.Decimal> value);
        partial void OnRecommendTotalOTPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RequestTotal
        {
            get
            {
                return _RequestTotal;
            }
            set
            {
                OnRequestTotalChanging(value);
                ReportPropertyChanging("RequestTotal");
                _RequestTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestTotal");
                OnRequestTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _RequestTotal;
        partial void OnRequestTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnRequestTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Recurring
        {
            get
            {
                return _Recurring;
            }
            set
            {
                OnRecurringChanging(value);
                ReportPropertyChanging("Recurring");
                _Recurring = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recurring");
                OnRecurringChanged();
            }
        }
        private global::System.Boolean _Recurring;
        partial void OnRecurringChanging(global::System.Boolean value);
        partial void OnRecurringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RevisionTotal
        {
            get
            {
                return _RevisionTotal;
            }
            set
            {
                OnRevisionTotalChanging(value);
                ReportPropertyChanging("RevisionTotal");
                _RevisionTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RevisionTotal");
                OnRevisionTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _RevisionTotal;
        partial void OnRevisionTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnRevisionTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RevisionSC
        {
            get
            {
                return _RevisionSC;
            }
            set
            {
                OnRevisionSCChanging(value);
                ReportPropertyChanging("RevisionSC");
                _RevisionSC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RevisionSC");
                OnRevisionSCChanged();
            }
        }
        private Nullable<global::System.Decimal> _RevisionSC;
        partial void OnRevisionSCChanging(Nullable<global::System.Decimal> value);
        partial void OnRevisionSCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RevisionCOC
        {
            get
            {
                return _RevisionCOC;
            }
            set
            {
                OnRevisionCOCChanging(value);
                ReportPropertyChanging("RevisionCOC");
                _RevisionCOC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RevisionCOC");
                OnRevisionCOCChanged();
            }
        }
        private Nullable<global::System.Decimal> _RevisionCOC;
        partial void OnRevisionCOCChanging(Nullable<global::System.Decimal> value);
        partial void OnRevisionCOCChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingDetail_FundingCategoryID", "FundingCategory")]
        public FundingCategory FundingCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingCategory>("OTP.Ring.Data.Model.FK_FundingDetail_FundingCategoryID", "FundingCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingCategory>("OTP.Ring.Data.Model.FK_FundingDetail_FundingCategoryID", "FundingCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingCategory> FundingCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingCategory>("OTP.Ring.Data.Model.FK_FundingDetail_FundingCategoryID", "FundingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingCategory>("OTP.Ring.Data.Model.FK_FundingDetail_FundingCategoryID", "FundingCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingDetail_OrganzitionID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_FundingDetail_OrganzitionID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_FundingDetail_OrganzitionID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_FundingDetail_OrganzitionID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("OTP.Ring.Data.Model.FK_FundingDetail_OrganzitionID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingDetail_ResourceID", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_FundingDetail_ResourceID", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_FundingDetail_ResourceID", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_FundingDetail_ResourceID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("OTP.Ring.Data.Model.FK_FundingDetail_ResourceID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingRevision_FundingDetailID", "FundingRevision")]
        public EntityCollection<FundingRevision> FundingRevisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingRevision>("OTP.Ring.Data.Model.FK_FundingRevision_FundingDetailID", "FundingRevision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingRevision>("OTP.Ring.Data.Model.FK_FundingRevision_FundingDetailID", "FundingRevision", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="FundingRevision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingRevision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingRevision object.
        /// </summary>
        /// <param name="fundingRevisionID">Initial value of the FundingRevisionID property.</param>
        /// <param name="fundingRevisionVersionID">Initial value of the FundingRevisionVersionID property.</param>
        /// <param name="fundingDetailID">Initial value of the FundingDetailID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="recurring">Initial value of the Recurring property.</param>
        public static FundingRevision CreateFundingRevision(global::System.Int32 fundingRevisionID, global::System.Int32 fundingRevisionVersionID, global::System.Int32 fundingDetailID, global::System.String description, global::System.Boolean recurring)
        {
            FundingRevision fundingRevision = new FundingRevision();
            fundingRevision.FundingRevisionID = fundingRevisionID;
            fundingRevision.FundingRevisionVersionID = fundingRevisionVersionID;
            fundingRevision.FundingDetailID = fundingDetailID;
            fundingRevision.Description = description;
            fundingRevision.Recurring = recurring;
            return fundingRevision;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingRevisionID
        {
            get
            {
                return _FundingRevisionID;
            }
            set
            {
                if (_FundingRevisionID != value)
                {
                    OnFundingRevisionIDChanging(value);
                    ReportPropertyChanging("FundingRevisionID");
                    _FundingRevisionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingRevisionID");
                    OnFundingRevisionIDChanged();
                }
            }
        }
        private global::System.Int32 _FundingRevisionID;
        partial void OnFundingRevisionIDChanging(global::System.Int32 value);
        partial void OnFundingRevisionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingRevisionVersionID
        {
            get
            {
                return _FundingRevisionVersionID;
            }
            set
            {
                OnFundingRevisionVersionIDChanging(value);
                ReportPropertyChanging("FundingRevisionVersionID");
                _FundingRevisionVersionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundingRevisionVersionID");
                OnFundingRevisionVersionIDChanged();
            }
        }
        private global::System.Int32 _FundingRevisionVersionID;
        partial void OnFundingRevisionVersionIDChanging(global::System.Int32 value);
        partial void OnFundingRevisionVersionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingDetailID
        {
            get
            {
                return _FundingDetailID;
            }
            set
            {
                OnFundingDetailIDChanging(value);
                ReportPropertyChanging("FundingDetailID");
                _FundingDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundingDetailID");
                OnFundingDetailIDChanged();
            }
        }
        private global::System.Int32 _FundingDetailID;
        partial void OnFundingDetailIDChanging(global::System.Int32 value);
        partial void OnFundingDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.String _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.String value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceID;
        partial void OnResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PercentCommitted
        {
            get
            {
                return _PercentCommitted;
            }
            set
            {
                OnPercentCommittedChanging(value);
                ReportPropertyChanging("PercentCommitted");
                _PercentCommitted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PercentCommitted");
                OnPercentCommittedChanged();
            }
        }
        private Nullable<global::System.Decimal> _PercentCommitted;
        partial void OnPercentCommittedChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentCommittedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FundingPriority
        {
            get
            {
                return _FundingPriority;
            }
            set
            {
                OnFundingPriorityChanging(value);
                ReportPropertyChanging("FundingPriority");
                _FundingPriority = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FundingPriority");
                OnFundingPriorityChanged();
            }
        }
        private global::System.String _FundingPriority;
        partial void OnFundingPriorityChanging(global::System.String value);
        partial void OnFundingPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Recurring
        {
            get
            {
                return _Recurring;
            }
            set
            {
                OnRecurringChanging(value);
                ReportPropertyChanging("Recurring");
                _Recurring = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recurring");
                OnRecurringChanged();
            }
        }
        private global::System.Boolean _Recurring;
        partial void OnRecurringChanging(global::System.Boolean value);
        partial void OnRecurringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundsTotal
        {
            get
            {
                return _FundsTotal;
            }
            set
            {
                OnFundsTotalChanging(value);
                ReportPropertyChanging("FundsTotal");
                _FundsTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundsTotal");
                OnFundsTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundsTotal;
        partial void OnFundsTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnFundsTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundsSC
        {
            get
            {
                return _FundsSC;
            }
            set
            {
                OnFundsSCChanging(value);
                ReportPropertyChanging("FundsSC");
                _FundsSC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundsSC");
                OnFundsSCChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundsSC;
        partial void OnFundsSCChanging(Nullable<global::System.Decimal> value);
        partial void OnFundsSCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundsCOC
        {
            get
            {
                return _FundsCOC;
            }
            set
            {
                OnFundsCOCChanging(value);
                ReportPropertyChanging("FundsCOC");
                _FundsCOC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundsCOC");
                OnFundsCOCChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundsCOC;
        partial void OnFundsCOCChanging(Nullable<global::System.Decimal> value);
        partial void OnFundsCOCChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingRevision_FundingDetailID", "FundingDetail")]
        public FundingDetail FundingDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingDetail>("OTP.Ring.Data.Model.FK_FundingRevision_FundingDetailID", "FundingDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingDetail>("OTP.Ring.Data.Model.FK_FundingRevision_FundingDetailID", "FundingDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingDetail> FundingDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingDetail>("OTP.Ring.Data.Model.FK_FundingRevision_FundingDetailID", "FundingDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingDetail>("OTP.Ring.Data.Model.FK_FundingRevision_FundingDetailID", "FundingDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingRevision_FundingRevisionVersionID", "FundingRevisionVersion")]
        public FundingRevisionVersion FundingRevisionVersion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingRevisionVersion>("OTP.Ring.Data.Model.FK_FundingRevision_FundingRevisionVersionID", "FundingRevisionVersion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingRevisionVersion>("OTP.Ring.Data.Model.FK_FundingRevision_FundingRevisionVersionID", "FundingRevisionVersion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingRevisionVersion> FundingRevisionVersionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingRevisionVersion>("OTP.Ring.Data.Model.FK_FundingRevision_FundingRevisionVersionID", "FundingRevisionVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingRevisionVersion>("OTP.Ring.Data.Model.FK_FundingRevision_FundingRevisionVersionID", "FundingRevisionVersion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="FundingRevisionVersion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingRevisionVersion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingRevisionVersion object.
        /// </summary>
        /// <param name="fundingRevisionVersionID">Initial value of the FundingRevisionVersionID property.</param>
        /// <param name="fundingSummaryID">Initial value of the FundingSummaryID property.</param>
        /// <param name="fundingRevisionVersion1">Initial value of the FundingRevisionVersion1 property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="revisionDate">Initial value of the RevisionDate property.</param>
        /// <param name="revisionTime">Initial value of the RevisionTime property.</param>
        public static FundingRevisionVersion CreateFundingRevisionVersion(global::System.Int32 fundingRevisionVersionID, global::System.Int32 fundingSummaryID, global::System.String fundingRevisionVersion1, global::System.String name_EN, global::System.String name_FR, global::System.DateTime revisionDate, global::System.TimeSpan revisionTime)
        {
            FundingRevisionVersion fundingRevisionVersion = new FundingRevisionVersion();
            fundingRevisionVersion.FundingRevisionVersionID = fundingRevisionVersionID;
            fundingRevisionVersion.FundingSummaryID = fundingSummaryID;
            fundingRevisionVersion.FundingRevisionVersion1 = fundingRevisionVersion1;
            fundingRevisionVersion.Name_EN = name_EN;
            fundingRevisionVersion.Name_FR = name_FR;
            fundingRevisionVersion.RevisionDate = revisionDate;
            fundingRevisionVersion.RevisionTime = revisionTime;
            return fundingRevisionVersion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingRevisionVersionID
        {
            get
            {
                return _FundingRevisionVersionID;
            }
            set
            {
                if (_FundingRevisionVersionID != value)
                {
                    OnFundingRevisionVersionIDChanging(value);
                    ReportPropertyChanging("FundingRevisionVersionID");
                    _FundingRevisionVersionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingRevisionVersionID");
                    OnFundingRevisionVersionIDChanged();
                }
            }
        }
        private global::System.Int32 _FundingRevisionVersionID;
        partial void OnFundingRevisionVersionIDChanging(global::System.Int32 value);
        partial void OnFundingRevisionVersionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSummaryID
        {
            get
            {
                return _FundingSummaryID;
            }
            set
            {
                OnFundingSummaryIDChanging(value);
                ReportPropertyChanging("FundingSummaryID");
                _FundingSummaryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundingSummaryID");
                OnFundingSummaryIDChanged();
            }
        }
        private global::System.Int32 _FundingSummaryID;
        partial void OnFundingSummaryIDChanging(global::System.Int32 value);
        partial void OnFundingSummaryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundingRevisionVersion1
        {
            get
            {
                return _FundingRevisionVersion1;
            }
            set
            {
                OnFundingRevisionVersion1Changing(value);
                ReportPropertyChanging("FundingRevisionVersion1");
                _FundingRevisionVersion1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FundingRevisionVersion1");
                OnFundingRevisionVersion1Changed();
            }
        }
        private global::System.String _FundingRevisionVersion1;
        partial void OnFundingRevisionVersion1Changing(global::System.String value);
        partial void OnFundingRevisionVersion1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RevisionDate
        {
            get
            {
                return _RevisionDate;
            }
            set
            {
                OnRevisionDateChanging(value);
                ReportPropertyChanging("RevisionDate");
                _RevisionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RevisionDate");
                OnRevisionDateChanged();
            }
        }
        private global::System.DateTime _RevisionDate;
        partial void OnRevisionDateChanging(global::System.DateTime value);
        partial void OnRevisionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan RevisionTime
        {
            get
            {
                return _RevisionTime;
            }
            set
            {
                OnRevisionTimeChanging(value);
                ReportPropertyChanging("RevisionTime");
                _RevisionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RevisionTime");
                OnRevisionTimeChanged();
            }
        }
        private global::System.TimeSpan _RevisionTime;
        partial void OnRevisionTimeChanging(global::System.TimeSpan value);
        partial void OnRevisionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingRevision_FundingRevisionVersionID", "FundingRevision")]
        public EntityCollection<FundingRevision> FundingRevisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingRevision>("OTP.Ring.Data.Model.FK_FundingRevision_FundingRevisionVersionID", "FundingRevision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingRevision>("OTP.Ring.Data.Model.FK_FundingRevision_FundingRevisionVersionID", "FundingRevision", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="FundingSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingSummary object.
        /// </summary>
        /// <param name="fundingSummaryID">Initial value of the FundingSummaryID property.</param>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        /// <param name="fundingStatus">Initial value of the FundingStatus property.</param>
        /// <param name="yearID">Initial value of the YearID property.</param>
        public static FundingSummary CreateFundingSummary(global::System.Int32 fundingSummaryID, global::System.String organizationTypeID, global::System.String fundingStatus, global::System.String yearID)
        {
            FundingSummary fundingSummary = new FundingSummary();
            fundingSummary.FundingSummaryID = fundingSummaryID;
            fundingSummary.OrganizationTypeID = organizationTypeID;
            fundingSummary.FundingStatus = fundingStatus;
            fundingSummary.YearID = yearID;
            return fundingSummary;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSummaryID
        {
            get
            {
                return _FundingSummaryID;
            }
            set
            {
                if (_FundingSummaryID != value)
                {
                    OnFundingSummaryIDChanging(value);
                    ReportPropertyChanging("FundingSummaryID");
                    _FundingSummaryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingSummaryID");
                    OnFundingSummaryIDChanged();
                }
            }
        }
        private global::System.Int32 _FundingSummaryID;
        partial void OnFundingSummaryIDChanging(global::System.Int32 value);
        partial void OnFundingSummaryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                OnOrganizationTypeIDChanging(value);
                ReportPropertyChanging("OrganizationTypeID");
                _OrganizationTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizationTypeID");
                OnOrganizationTypeIDChanged();
            }
        }
        private global::System.String _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.String value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.String _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.String value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundingStatus
        {
            get
            {
                return _FundingStatus;
            }
            set
            {
                OnFundingStatusChanging(value);
                ReportPropertyChanging("FundingStatus");
                _FundingStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FundingStatus");
                OnFundingStatusChanged();
            }
        }
        private global::System.String _FundingStatus;
        partial void OnFundingStatusChanging(global::System.String value);
        partial void OnFundingStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                OnYearIDChanging(value);
                ReportPropertyChanging("YearID");
                _YearID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearID");
                OnYearIDChanged();
            }
        }
        private global::System.String _YearID;
        partial void OnYearIDChanging(global::System.String value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundingSC
        {
            get
            {
                return _FundingSC;
            }
            set
            {
                OnFundingSCChanging(value);
                ReportPropertyChanging("FundingSC");
                _FundingSC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundingSC");
                OnFundingSCChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundingSC;
        partial void OnFundingSCChanging(Nullable<global::System.Decimal> value);
        partial void OnFundingSCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundingCOC
        {
            get
            {
                return _FundingCOC;
            }
            set
            {
                OnFundingCOCChanging(value);
                ReportPropertyChanging("FundingCOC");
                _FundingCOC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundingCOC");
                OnFundingCOCChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundingCOC;
        partial void OnFundingCOCChanging(Nullable<global::System.Decimal> value);
        partial void OnFundingCOCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundingOther
        {
            get
            {
                return _FundingOther;
            }
            set
            {
                OnFundingOtherChanging(value);
                ReportPropertyChanging("FundingOther");
                _FundingOther = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundingOther");
                OnFundingOtherChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundingOther;
        partial void OnFundingOtherChanging(Nullable<global::System.Decimal> value);
        partial void OnFundingOtherChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingBlock_FundingSummaryID", "FundingBlock")]
        public EntityCollection<FundingBlock> FundingBlocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingBlock>("OTP.Ring.Data.Model.FK_FundingBlock_FundingSummaryID", "FundingBlock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingBlock>("OTP.Ring.Data.Model.FK_FundingBlock_FundingSummaryID", "FundingBlock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_OrganizationID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_OrganizationTypeID", "OrganizationType")]
        public OrganizationType OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationTypeID", "OrganizationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationTypeID", "OrganizationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationType> OrganizationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationTypeID", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationTypeID", "OrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_FundingSummary_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_FundingSummary_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_FundingSummary_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_FundingSummary_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_YearID", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_FundingSummary_YearID", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_FundingSummary_YearID", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_FundingSummary_YearID", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("OTP.Ring.Data.Model.FK_FundingSummary_YearID", "Year", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingTracking_FundingSummaryID", "FundingTracking")]
        public EntityCollection<FundingTracking> FundingTrackings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingTracking>("OTP.Ring.Data.Model.FK_FundingTracking_FundingSummaryID", "FundingTracking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingTracking>("OTP.Ring.Data.Model.FK_FundingTracking_FundingSummaryID", "FundingTracking", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="FundingTracking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingTracking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingTracking object.
        /// </summary>
        /// <param name="fundingTrackingID">Initial value of the FundingTrackingID property.</param>
        /// <param name="fundingSummaryID">Initial value of the FundingSummaryID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="scheduledDate">Initial value of the ScheduledDate property.</param>
        /// <param name="scheduledAmount">Initial value of the ScheduledAmount property.</param>
        /// <param name="fundingTrackingStatus">Initial value of the FundingTrackingStatus property.</param>
        public static FundingTracking CreateFundingTracking(global::System.Int32 fundingTrackingID, global::System.Int32 fundingSummaryID, global::System.String description, global::System.DateTime scheduledDate, global::System.Decimal scheduledAmount, global::System.String fundingTrackingStatus)
        {
            FundingTracking fundingTracking = new FundingTracking();
            fundingTracking.FundingTrackingID = fundingTrackingID;
            fundingTracking.FundingSummaryID = fundingSummaryID;
            fundingTracking.Description = description;
            fundingTracking.ScheduledDate = scheduledDate;
            fundingTracking.ScheduledAmount = scheduledAmount;
            fundingTracking.FundingTrackingStatus = fundingTrackingStatus;
            return fundingTracking;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingTrackingID
        {
            get
            {
                return _FundingTrackingID;
            }
            set
            {
                if (_FundingTrackingID != value)
                {
                    OnFundingTrackingIDChanging(value);
                    ReportPropertyChanging("FundingTrackingID");
                    _FundingTrackingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingTrackingID");
                    OnFundingTrackingIDChanged();
                }
            }
        }
        private global::System.Int32 _FundingTrackingID;
        partial void OnFundingTrackingIDChanging(global::System.Int32 value);
        partial void OnFundingTrackingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSummaryID
        {
            get
            {
                return _FundingSummaryID;
            }
            set
            {
                OnFundingSummaryIDChanging(value);
                ReportPropertyChanging("FundingSummaryID");
                _FundingSummaryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundingSummaryID");
                OnFundingSummaryIDChanged();
            }
        }
        private global::System.Int32 _FundingSummaryID;
        partial void OnFundingSummaryIDChanging(global::System.Int32 value);
        partial void OnFundingSummaryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ScheduledDate
        {
            get
            {
                return _ScheduledDate;
            }
            set
            {
                OnScheduledDateChanging(value);
                ReportPropertyChanging("ScheduledDate");
                _ScheduledDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduledDate");
                OnScheduledDateChanged();
            }
        }
        private global::System.DateTime _ScheduledDate;
        partial void OnScheduledDateChanging(global::System.DateTime value);
        partial void OnScheduledDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ScheduledAmount
        {
            get
            {
                return _ScheduledAmount;
            }
            set
            {
                OnScheduledAmountChanging(value);
                ReportPropertyChanging("ScheduledAmount");
                _ScheduledAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduledAmount");
                OnScheduledAmountChanged();
            }
        }
        private global::System.Decimal _ScheduledAmount;
        partial void OnScheduledAmountChanging(global::System.Decimal value);
        partial void OnScheduledAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PaidDate
        {
            get
            {
                return _PaidDate;
            }
            set
            {
                OnPaidDateChanging(value);
                ReportPropertyChanging("PaidDate");
                _PaidDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaidDate");
                OnPaidDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PaidDate;
        partial void OnPaidDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPaidDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaidAmount
        {
            get
            {
                return _PaidAmount;
            }
            set
            {
                OnPaidAmountChanging(value);
                ReportPropertyChanging("PaidAmount");
                _PaidAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaidAmount");
                OnPaidAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaidAmount;
        partial void OnPaidAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPaidAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundingTrackingStatus
        {
            get
            {
                return _FundingTrackingStatus;
            }
            set
            {
                OnFundingTrackingStatusChanging(value);
                ReportPropertyChanging("FundingTrackingStatus");
                _FundingTrackingStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FundingTrackingStatus");
                OnFundingTrackingStatusChanged();
            }
        }
        private global::System.String _FundingTrackingStatus;
        partial void OnFundingTrackingStatusChanging(global::System.String value);
        partial void OnFundingTrackingStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingTracking_FundingSummaryID", "FundingSummary")]
        public FundingSummary FundingSummary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSummary>("OTP.Ring.Data.Model.FK_FundingTracking_FundingSummaryID", "FundingSummary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSummary>("OTP.Ring.Data.Model.FK_FundingTracking_FundingSummaryID", "FundingSummary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingSummary> FundingSummaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSummary>("OTP.Ring.Data.Model.FK_FundingTracking_FundingSummaryID", "FundingSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingSummary>("OTP.Ring.Data.Model.FK_FundingTracking_FundingSummaryID", "FundingSummary", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="HPA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HPA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HPA object.
        /// </summary>
        /// <param name="hPAID">Initial value of the HPAID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static HPA CreateHPA(global::System.String hPAID, global::System.String firstName, global::System.String lastName)
        {
            HPA hPA = new HPA();
            hPA.HPAID = hPAID;
            hPA.FirstName = firstName;
            hPA.LastName = lastName;
            return hPA;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HPAID
        {
            get
            {
                return _HPAID;
            }
            set
            {
                if (_HPAID != value)
                {
                    OnHPAIDChanging(value);
                    ReportPropertyChanging("HPAID");
                    _HPAID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HPAID");
                    OnHPAIDChanged();
                }
            }
        }
        private global::System.String _HPAID;
        partial void OnHPAIDChanging(global::System.String value);
        partial void OnHPAIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Sport_HPAID", "Sport")]
        public EntityCollection<Sport> Sports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sport>("OTP.Ring.Data.Model.FK_Sport_HPAID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sport>("OTP.Ring.Data.Model.FK_Sport_HPAID", "Sport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Language CreateLanguage(global::System.String languageID, global::System.String name)
        {
            Language language = new Language();
            language.LanguageID = languageID;
            language.Name = name;
            return language;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                if (_LanguageID != value)
                {
                    OnLanguageIDChanging(value);
                    ReportPropertyChanging("LanguageID");
                    _LanguageID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LanguageID");
                    OnLanguageIDChanged();
                }
            }
        }
        private global::System.String _LanguageID;
        partial void OnLanguageIDChanging(global::System.String value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static Organization CreateOrganization(global::System.String organizationID, global::System.String organizationTypeID, global::System.String name_EN, global::System.String name_FR)
        {
            Organization organization = new Organization();
            organization.OrganizationID = organizationID;
            organization.OrganizationTypeID = organizationTypeID;
            organization.Name_EN = name_EN;
            organization.Name_FR = name_FR;
            return organization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                if (_OrganizationID != value)
                {
                    OnOrganizationIDChanging(value);
                    ReportPropertyChanging("OrganizationID");
                    _OrganizationID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("OrganizationID");
                    OnOrganizationIDChanged();
                }
            }
        }
        private global::System.String _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.String value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                OnOrganizationTypeIDChanging(value);
                ReportPropertyChanging("OrganizationTypeID");
                _OrganizationTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizationTypeID");
                OnOrganizationTypeIDChanged();
            }
        }
        private global::System.String _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.String value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationURL
        {
            get
            {
                return _OrganizationURL;
            }
            set
            {
                OnOrganizationURLChanging(value);
                ReportPropertyChanging("OrganizationURL");
                _OrganizationURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrganizationURL");
                OnOrganizationURLChanged();
            }
        }
        private global::System.String _OrganizationURL;
        partial void OnOrganizationURLChanging(global::System.String value);
        partial void OnOrganizationURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingAddress
        {
            get
            {
                return _MailingAddress;
            }
            set
            {
                OnMailingAddressChanging(value);
                ReportPropertyChanging("MailingAddress");
                _MailingAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailingAddress");
                OnMailingAddressChanged();
            }
        }
        private global::System.String _MailingAddress;
        partial void OnMailingAddressChanging(global::System.String value);
        partial void OnMailingAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingCity
        {
            get
            {
                return _MailingCity;
            }
            set
            {
                OnMailingCityChanging(value);
                ReportPropertyChanging("MailingCity");
                _MailingCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailingCity");
                OnMailingCityChanged();
            }
        }
        private global::System.String _MailingCity;
        partial void OnMailingCityChanging(global::System.String value);
        partial void OnMailingCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMailAddress
        {
            get
            {
                return _EMailAddress;
            }
            set
            {
                OnEMailAddressChanging(value);
                ReportPropertyChanging("EMailAddress");
                _EMailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMailAddress");
                OnEMailAddressChanged();
            }
        }
        private global::System.String _EMailAddress;
        partial void OnEMailAddressChanging(global::System.String value);
        partial void OnEMailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNumber
        {
            get
            {
                return _FaxNumber;
            }
            set
            {
                OnFaxNumberChanging(value);
                ReportPropertyChanging("FaxNumber");
                _FaxNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FaxNumber");
                OnFaxNumberChanged();
            }
        }
        private global::System.String _FaxNumber;
        partial void OnFaxNumberChanging(global::System.String value);
        partial void OnFaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CEOPresidentName
        {
            get
            {
                return _CEOPresidentName;
            }
            set
            {
                OnCEOPresidentNameChanging(value);
                ReportPropertyChanging("CEOPresidentName");
                _CEOPresidentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CEOPresidentName");
                OnCEOPresidentNameChanged();
            }
        }
        private global::System.String _CEOPresidentName;
        partial void OnCEOPresidentNameChanging(global::System.String value);
        partial void OnCEOPresidentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CEOPresidentEmail
        {
            get
            {
                return _CEOPresidentEmail;
            }
            set
            {
                OnCEOPresidentEmailChanging(value);
                ReportPropertyChanging("CEOPresidentEmail");
                _CEOPresidentEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CEOPresidentEmail");
                OnCEOPresidentEmailChanged();
            }
        }
        private global::System.String _CEOPresidentEmail;
        partial void OnCEOPresidentEmailChanging(global::System.String value);
        partial void OnCEOPresidentEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CEOPresidentPhoneNumber
        {
            get
            {
                return _CEOPresidentPhoneNumber;
            }
            set
            {
                OnCEOPresidentPhoneNumberChanging(value);
                ReportPropertyChanging("CEOPresidentPhoneNumber");
                _CEOPresidentPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CEOPresidentPhoneNumber");
                OnCEOPresidentPhoneNumberChanged();
            }
        }
        private global::System.String _CEOPresidentPhoneNumber;
        partial void OnCEOPresidentPhoneNumberChanging(global::System.String value);
        partial void OnCEOPresidentPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HPDName
        {
            get
            {
                return _HPDName;
            }
            set
            {
                OnHPDNameChanging(value);
                ReportPropertyChanging("HPDName");
                _HPDName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HPDName");
                OnHPDNameChanged();
            }
        }
        private global::System.String _HPDName;
        partial void OnHPDNameChanging(global::System.String value);
        partial void OnHPDNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HPDEmail
        {
            get
            {
                return _HPDEmail;
            }
            set
            {
                OnHPDEmailChanging(value);
                ReportPropertyChanging("HPDEmail");
                _HPDEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HPDEmail");
                OnHPDEmailChanged();
            }
        }
        private global::System.String _HPDEmail;
        partial void OnHPDEmailChanging(global::System.String value);
        partial void OnHPDEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HPDPhoneNumber
        {
            get
            {
                return _HPDPhoneNumber;
            }
            set
            {
                OnHPDPhoneNumberChanging(value);
                ReportPropertyChanging("HPDPhoneNumber");
                _HPDPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HPDPhoneNumber");
                OnHPDPhoneNumberChanged();
            }
        }
        private global::System.String _HPDPhoneNumber;
        partial void OnHPDPhoneNumberChanging(global::System.String value);
        partial void OnHPDPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingProvinceID
        {
            get
            {
                return _MailingProvinceID;
            }
            set
            {
                OnMailingProvinceIDChanging(value);
                ReportPropertyChanging("MailingProvinceID");
                _MailingProvinceID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailingProvinceID");
                OnMailingProvinceIDChanged();
            }
        }
        private global::System.String _MailingProvinceID;
        partial void OnMailingProvinceIDChanging(global::System.String value);
        partial void OnMailingProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ActionItem_OrganizationID", "ActionItem")]
        public EntityCollection<ActionItem> ActionItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionItem>("OTP.Ring.Data.Model.FK_ActionItem_OrganizationID", "ActionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionItem>("OTP.Ring.Data.Model.FK_ActionItem_OrganizationID", "ActionItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingDetail_OrganzitionID", "FundingDetail")]
        public EntityCollection<FundingDetail> FundingDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingDetail>("OTP.Ring.Data.Model.FK_FundingDetail_OrganzitionID", "FundingDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingDetail>("OTP.Ring.Data.Model.FK_FundingDetail_OrganzitionID", "FundingDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_OrganizationID", "FundingSummary")]
        public EntityCollection<FundingSummary> FundingSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingSummary>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationID", "FundingSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingSummary>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationID", "FundingSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Organization_MailingProvinceID", "Province")]
        public Province Province
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("OTP.Ring.Data.Model.FK_Organization_MailingProvinceID", "Province").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("OTP.Ring.Data.Model.FK_Organization_MailingProvinceID", "Province").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Province> ProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("OTP.Ring.Data.Model.FK_Organization_MailingProvinceID", "Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Province>("OTP.Ring.Data.Model.FK_Organization_MailingProvinceID", "Province", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Organization_OrganizationTypeID", "OrganizationType")]
        public OrganizationType OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_Organization_OrganizationTypeID", "OrganizationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_Organization_OrganizationTypeID", "OrganizationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationType> OrganizationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_Organization_OrganizationTypeID", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationType>("OTP.Ring.Data.Model.FK_Organization_OrganizationTypeID", "OrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_PrimaryCSCID", "Resource")]
        public EntityCollection<Resource> Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_PrimaryCSCID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_PrimaryCSCID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_SecondaryCSCID", "Resource")]
        public EntityCollection<Resource> Resources1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_SecondaryCSCID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_SecondaryCSCID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Sport_OrganizationID", "Sport")]
        public EntityCollection<Sport> Sports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sport>("OTP.Ring.Data.Model.FK_Sport_OrganizationID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sport>("OTP.Ring.Data.Model.FK_Sport_OrganizationID", "Sport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="OrganizationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganizationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrganizationType object.
        /// </summary>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static OrganizationType CreateOrganizationType(global::System.String organizationTypeID, global::System.String name_EN, global::System.String name_FR)
        {
            OrganizationType organizationType = new OrganizationType();
            organizationType.OrganizationTypeID = organizationTypeID;
            organizationType.Name_EN = name_EN;
            organizationType.Name_FR = name_FR;
            return organizationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                if (_OrganizationTypeID != value)
                {
                    OnOrganizationTypeIDChanging(value);
                    ReportPropertyChanging("OrganizationTypeID");
                    _OrganizationTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("OrganizationTypeID");
                    OnOrganizationTypeIDChanged();
                }
            }
        }
        private global::System.String _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.String value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationMasterPillar_OrganizationTypeID", "EvaluationMasterPillar")]
        public EntityCollection<EvaluationMasterPillar> EvaluationMasterPillars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationMasterPillar>("OTP.Ring.Data.Model.FK_EvaluationMasterPillar_OrganizationTypeID", "EvaluationMasterPillar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationMasterPillar>("OTP.Ring.Data.Model.FK_EvaluationMasterPillar_OrganizationTypeID", "EvaluationMasterPillar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersion_OrganizationTypeID", "EvaluationVersion")]
        public EntityCollection<EvaluationVersion> EvaluationVersions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationVersion>("OTP.Ring.Data.Model.FK_EvaluationVersion_OrganizationTypeID", "EvaluationVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationVersion>("OTP.Ring.Data.Model.FK_EvaluationVersion_OrganizationTypeID", "EvaluationVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingBlockOrganizationType_OrganizationTypeID", "FundingBlockOrganizationType")]
        public EntityCollection<FundingBlockOrganizationType> FundingBlockOrganizationTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingBlockOrganizationType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_OrganizationTypeID", "FundingBlockOrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingBlockOrganizationType>("OTP.Ring.Data.Model.FK_FundingBlockOrganizationType_OrganizationTypeID", "FundingBlockOrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_OrganizationTypeID", "FundingSummary")]
        public EntityCollection<FundingSummary> FundingSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingSummary>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationTypeID", "FundingSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingSummary>("OTP.Ring.Data.Model.FK_FundingSummary_OrganizationTypeID", "FundingSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Organization_OrganizationTypeID", "Organization")]
        public EntityCollection<Organization> Organizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("OTP.Ring.Data.Model.FK_Organization_OrganizationTypeID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("OTP.Ring.Data.Model.FK_Organization_OrganizationTypeID", "Organization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Province")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Province : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Province object.
        /// </summary>
        /// <param name="provinceID">Initial value of the ProvinceID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static Province CreateProvince(global::System.String provinceID, global::System.String name_EN, global::System.String name_FR)
        {
            Province province = new Province();
            province.ProvinceID = provinceID;
            province.Name_EN = name_EN;
            province.Name_FR = name_FR;
            return province;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProvinceID
        {
            get
            {
                return _ProvinceID;
            }
            set
            {
                if (_ProvinceID != value)
                {
                    OnProvinceIDChanging(value);
                    ReportPropertyChanging("ProvinceID");
                    _ProvinceID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProvinceID");
                    OnProvinceIDChanged();
                }
            }
        }
        private global::System.String _ProvinceID;
        partial void OnProvinceIDChanging(global::System.String value);
        partial void OnProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Organization_MailingProvinceID", "Organization")]
        public EntityCollection<Organization> Organizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("OTP.Ring.Data.Model.FK_Organization_MailingProvinceID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("OTP.Ring.Data.Model.FK_Organization_MailingProvinceID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_HometownProvinceID", "Resource")]
        public EntityCollection<Resource> Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_HometownProvinceID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_HometownProvinceID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_MailingProvinceID", "Resource")]
        public EntityCollection<Resource> Resources1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_MailingProvinceID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_MailingProvinceID", "Resource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="QualificationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QualificationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QualificationType object.
        /// </summary>
        /// <param name="qualificationTypeID">Initial value of the QualificationTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static QualificationType CreateQualificationType(global::System.String qualificationTypeID, global::System.String name_EN, global::System.String name_FR)
        {
            QualificationType qualificationType = new QualificationType();
            qualificationType.QualificationTypeID = qualificationTypeID;
            qualificationType.Name_EN = name_EN;
            qualificationType.Name_FR = name_FR;
            return qualificationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QualificationTypeID
        {
            get
            {
                return _QualificationTypeID;
            }
            set
            {
                if (_QualificationTypeID != value)
                {
                    OnQualificationTypeIDChanging(value);
                    ReportPropertyChanging("QualificationTypeID");
                    _QualificationTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("QualificationTypeID");
                    OnQualificationTypeIDChanged();
                }
            }
        }
        private global::System.String _QualificationTypeID;
        partial void OnQualificationTypeIDChanging(global::System.String value);
        partial void OnQualificationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceQualification_QualificationTypeID", "ResourceQualification")]
        public EntityCollection<ResourceQualification> ResourceQualifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceQualification>("OTP.Ring.Data.Model.FK_ResourceQualification_QualificationTypeID", "ResourceQualification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceQualification>("OTP.Ring.Data.Model.FK_ResourceQualification_QualificationTypeID", "ResourceQualification", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Report : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Report object.
        /// </summary>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="locked">Initial value of the Locked property.</param>
        /// <param name="reportCategory">Initial value of the ReportCategory property.</param>
        /// <param name="securityUserSport">Initial value of the SecurityUserSport property.</param>
        /// <param name="reportType">Initial value of the ReportType property.</param>
        public static Report CreateReport(global::System.Int32 reportID, global::System.String name_EN, global::System.String name_FR, global::System.Boolean locked, global::System.String reportCategory, global::System.Boolean securityUserSport, global::System.String reportType)
        {
            Report report = new Report();
            report.ReportID = reportID;
            report.Name_EN = name_EN;
            report.Name_FR = name_FR;
            report.Locked = locked;
            report.ReportCategory = reportCategory;
            report.SecurityUserSport = securityUserSport;
            report.ReportType = reportType;
            return report;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                if (_ReportID != value)
                {
                    OnReportIDChanging(value);
                    ReportPropertyChanging("ReportID");
                    _ReportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportID");
                    OnReportIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportID;
        partial void OnReportIDChanging(global::System.Int32 value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description_EN
        {
            get
            {
                return _Description_EN;
            }
            set
            {
                OnDescription_ENChanging(value);
                ReportPropertyChanging("Description_EN");
                _Description_EN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description_EN");
                OnDescription_ENChanged();
            }
        }
        private global::System.String _Description_EN;
        partial void OnDescription_ENChanging(global::System.String value);
        partial void OnDescription_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description_FR
        {
            get
            {
                return _Description_FR;
            }
            set
            {
                OnDescription_FRChanging(value);
                ReportPropertyChanging("Description_FR");
                _Description_FR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description_FR");
                OnDescription_FRChanged();
            }
        }
        private global::System.String _Description_FR;
        partial void OnDescription_FRChanging(global::System.String value);
        partial void OnDescription_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Locked
        {
            get
            {
                return _Locked;
            }
            set
            {
                OnLockedChanging(value);
                ReportPropertyChanging("Locked");
                _Locked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Locked");
                OnLockedChanged();
            }
        }
        private global::System.Boolean _Locked;
        partial void OnLockedChanging(global::System.Boolean value);
        partial void OnLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportCategory
        {
            get
            {
                return _ReportCategory;
            }
            set
            {
                OnReportCategoryChanging(value);
                ReportPropertyChanging("ReportCategory");
                _ReportCategory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReportCategory");
                OnReportCategoryChanged();
            }
        }
        private global::System.String _ReportCategory;
        partial void OnReportCategoryChanging(global::System.String value);
        partial void OnReportCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SecurityUserSport
        {
            get
            {
                return _SecurityUserSport;
            }
            set
            {
                OnSecurityUserSportChanging(value);
                ReportPropertyChanging("SecurityUserSport");
                _SecurityUserSport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityUserSport");
                OnSecurityUserSportChanged();
            }
        }
        private global::System.Boolean _SecurityUserSport;
        partial void OnSecurityUserSportChanging(global::System.Boolean value);
        partial void OnSecurityUserSportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportDefinition
        {
            get
            {
                return _ReportDefinition;
            }
            set
            {
                OnReportDefinitionChanging(value);
                ReportPropertyChanging("ReportDefinition");
                _ReportDefinition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReportDefinition");
                OnReportDefinitionChanged();
            }
        }
        private global::System.String _ReportDefinition;
        partial void OnReportDefinitionChanging(global::System.String value);
        partial void OnReportDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportType
        {
            get
            {
                return _ReportType;
            }
            set
            {
                OnReportTypeChanging(value);
                ReportPropertyChanging("ReportType");
                _ReportType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReportType");
                OnReportTypeChanged();
            }
        }
        private global::System.String _ReportType;
        partial void OnReportTypeChanging(global::System.String value);
        partial void OnReportTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportViewID
        {
            get
            {
                return _ReportViewID;
            }
            set
            {
                OnReportViewIDChanging(value);
                ReportPropertyChanging("ReportViewID");
                _ReportViewID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReportViewID");
                OnReportViewIDChanged();
            }
        }
        private global::System.String _ReportViewID;
        partial void OnReportViewIDChanging(global::System.String value);
        partial void OnReportViewIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityUserProfileID
        {
            get
            {
                return _SecurityUserProfileID;
            }
            set
            {
                OnSecurityUserProfileIDChanging(value);
                ReportPropertyChanging("SecurityUserProfileID");
                _SecurityUserProfileID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityUserProfileID");
                OnSecurityUserProfileIDChanged();
            }
        }
        private global::System.String _SecurityUserProfileID;
        partial void OnSecurityUserProfileIDChanging(global::System.String value);
        partial void OnSecurityUserProfileIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Report_ReportViewID", "ReportView")]
        public ReportView ReportView
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportView>("OTP.Ring.Data.Model.FK_Report_ReportViewID", "ReportView").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportView>("OTP.Ring.Data.Model.FK_Report_ReportViewID", "ReportView").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReportView> ReportViewReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportView>("OTP.Ring.Data.Model.FK_Report_ReportViewID", "ReportView");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReportView>("OTP.Ring.Data.Model.FK_Report_ReportViewID", "ReportView", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Report_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Report_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Report_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Report_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Report_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportFilter_ReportID", "ReportFilter")]
        public EntityCollection<ReportFilter> ReportFilters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportFilter>("OTP.Ring.Data.Model.FK_ReportFilter_ReportID", "ReportFilter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportFilter>("OTP.Ring.Data.Model.FK_ReportFilter_ReportID", "ReportFilter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportGroup_ReportID", "ReportGroup")]
        public EntityCollection<ReportGroup> ReportGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportGroup>("OTP.Ring.Data.Model.FK_ReportGroup_ReportID", "ReportGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportGroup>("OTP.Ring.Data.Model.FK_ReportGroup_ReportID", "ReportGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportProcedure_ReportID", "ReportProcedure")]
        public EntityCollection<ReportProcedure> ReportProcedures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportProcedure>("OTP.Ring.Data.Model.FK_ReportProcedure_ReportID", "ReportProcedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportProcedure>("OTP.Ring.Data.Model.FK_ReportProcedure_ReportID", "ReportProcedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportSecurityGroupProfile_ReportID", "ReportSecurityGroupProfile")]
        public EntityCollection<ReportSecurityGroupProfile> ReportSecurityGroupProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportSecurityGroupProfile>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_ReportID", "ReportSecurityGroupProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportSecurityGroupProfile>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_ReportID", "ReportSecurityGroupProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ReportAggregation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportAggregation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportAggregation object.
        /// </summary>
        /// <param name="reportAggregationID">Initial value of the ReportAggregationID property.</param>
        /// <param name="xType">Initial value of the XType property.</param>
        /// <param name="reportAggregation1">Initial value of the ReportAggregation1 property.</param>
        public static ReportAggregation CreateReportAggregation(global::System.Int32 reportAggregationID, global::System.String xType, global::System.String reportAggregation1)
        {
            ReportAggregation reportAggregation = new ReportAggregation();
            reportAggregation.ReportAggregationID = reportAggregationID;
            reportAggregation.XType = xType;
            reportAggregation.ReportAggregation1 = reportAggregation1;
            return reportAggregation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportAggregationID
        {
            get
            {
                return _ReportAggregationID;
            }
            set
            {
                if (_ReportAggregationID != value)
                {
                    OnReportAggregationIDChanging(value);
                    ReportPropertyChanging("ReportAggregationID");
                    _ReportAggregationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportAggregationID");
                    OnReportAggregationIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportAggregationID;
        partial void OnReportAggregationIDChanging(global::System.Int32 value);
        partial void OnReportAggregationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String XType
        {
            get
            {
                return _XType;
            }
            set
            {
                OnXTypeChanging(value);
                ReportPropertyChanging("XType");
                _XType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("XType");
                OnXTypeChanged();
            }
        }
        private global::System.String _XType;
        partial void OnXTypeChanging(global::System.String value);
        partial void OnXTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportAggregation1
        {
            get
            {
                return _ReportAggregation1;
            }
            set
            {
                OnReportAggregation1Changing(value);
                ReportPropertyChanging("ReportAggregation1");
                _ReportAggregation1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReportAggregation1");
                OnReportAggregation1Changed();
            }
        }
        private global::System.String _ReportAggregation1;
        partial void OnReportAggregation1Changing(global::System.String value);
        partial void OnReportAggregation1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ReportColumn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportColumn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportColumn object.
        /// </summary>
        /// <param name="reportColumnID">Initial value of the ReportColumnID property.</param>
        /// <param name="reportGroupID">Initial value of the ReportGroupID property.</param>
        /// <param name="reportColumnLevel">Initial value of the ReportColumnLevel property.</param>
        /// <param name="displayName_EN">Initial value of the DisplayName_EN property.</param>
        /// <param name="fieldName_EN">Initial value of the FieldName_EN property.</param>
        /// <param name="reportAggregation">Initial value of the ReportAggregation property.</param>
        /// <param name="fieldSize">Initial value of the FieldSize property.</param>
        public static ReportColumn CreateReportColumn(global::System.Int32 reportColumnID, global::System.Int32 reportGroupID, global::System.Int32 reportColumnLevel, global::System.String displayName_EN, global::System.String fieldName_EN, global::System.String reportAggregation, global::System.String fieldSize)
        {
            ReportColumn reportColumn = new ReportColumn();
            reportColumn.ReportColumnID = reportColumnID;
            reportColumn.ReportGroupID = reportGroupID;
            reportColumn.ReportColumnLevel = reportColumnLevel;
            reportColumn.DisplayName_EN = displayName_EN;
            reportColumn.FieldName_EN = fieldName_EN;
            reportColumn.ReportAggregation = reportAggregation;
            reportColumn.FieldSize = fieldSize;
            return reportColumn;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportColumnID
        {
            get
            {
                return _ReportColumnID;
            }
            set
            {
                if (_ReportColumnID != value)
                {
                    OnReportColumnIDChanging(value);
                    ReportPropertyChanging("ReportColumnID");
                    _ReportColumnID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportColumnID");
                    OnReportColumnIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportColumnID;
        partial void OnReportColumnIDChanging(global::System.Int32 value);
        partial void OnReportColumnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportGroupID
        {
            get
            {
                return _ReportGroupID;
            }
            set
            {
                OnReportGroupIDChanging(value);
                ReportPropertyChanging("ReportGroupID");
                _ReportGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportGroupID");
                OnReportGroupIDChanged();
            }
        }
        private global::System.Int32 _ReportGroupID;
        partial void OnReportGroupIDChanging(global::System.Int32 value);
        partial void OnReportGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportColumnLevel
        {
            get
            {
                return _ReportColumnLevel;
            }
            set
            {
                OnReportColumnLevelChanging(value);
                ReportPropertyChanging("ReportColumnLevel");
                _ReportColumnLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportColumnLevel");
                OnReportColumnLevelChanged();
            }
        }
        private global::System.Int32 _ReportColumnLevel;
        partial void OnReportColumnLevelChanging(global::System.Int32 value);
        partial void OnReportColumnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName_EN
        {
            get
            {
                return _DisplayName_EN;
            }
            set
            {
                OnDisplayName_ENChanging(value);
                ReportPropertyChanging("DisplayName_EN");
                _DisplayName_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName_EN");
                OnDisplayName_ENChanged();
            }
        }
        private global::System.String _DisplayName_EN;
        partial void OnDisplayName_ENChanging(global::System.String value);
        partial void OnDisplayName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName_FR
        {
            get
            {
                return _DisplayName_FR;
            }
            set
            {
                OnDisplayName_FRChanging(value);
                ReportPropertyChanging("DisplayName_FR");
                _DisplayName_FR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName_FR");
                OnDisplayName_FRChanged();
            }
        }
        private global::System.String _DisplayName_FR;
        partial void OnDisplayName_FRChanging(global::System.String value);
        partial void OnDisplayName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName_EN
        {
            get
            {
                return _FieldName_EN;
            }
            set
            {
                OnFieldName_ENChanging(value);
                ReportPropertyChanging("FieldName_EN");
                _FieldName_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FieldName_EN");
                OnFieldName_ENChanged();
            }
        }
        private global::System.String _FieldName_EN;
        partial void OnFieldName_ENChanging(global::System.String value);
        partial void OnFieldName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldName_FR
        {
            get
            {
                return _FieldName_FR;
            }
            set
            {
                OnFieldName_FRChanging(value);
                ReportPropertyChanging("FieldName_FR");
                _FieldName_FR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldName_FR");
                OnFieldName_FRChanged();
            }
        }
        private global::System.String _FieldName_FR;
        partial void OnFieldName_FRChanging(global::System.String value);
        partial void OnFieldName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportAggregation
        {
            get
            {
                return _ReportAggregation;
            }
            set
            {
                OnReportAggregationChanging(value);
                ReportPropertyChanging("ReportAggregation");
                _ReportAggregation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReportAggregation");
                OnReportAggregationChanged();
            }
        }
        private global::System.String _ReportAggregation;
        partial void OnReportAggregationChanging(global::System.String value);
        partial void OnReportAggregationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldSize
        {
            get
            {
                return _FieldSize;
            }
            set
            {
                OnFieldSizeChanging(value);
                ReportPropertyChanging("FieldSize");
                _FieldSize = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FieldSize");
                OnFieldSizeChanged();
            }
        }
        private global::System.String _FieldSize;
        partial void OnFieldSizeChanging(global::System.String value);
        partial void OnFieldSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormatString
        {
            get
            {
                return _FormatString;
            }
            set
            {
                OnFormatStringChanging(value);
                ReportPropertyChanging("FormatString");
                _FormatString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormatString");
                OnFormatStringChanged();
            }
        }
        private global::System.String _FormatString;
        partial void OnFormatStringChanging(global::System.String value);
        partial void OnFormatStringChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportColumn_ReportGroupID", "ReportGroup")]
        public ReportGroup ReportGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportGroup>("OTP.Ring.Data.Model.FK_ReportColumn_ReportGroupID", "ReportGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportGroup>("OTP.Ring.Data.Model.FK_ReportColumn_ReportGroupID", "ReportGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReportGroup> ReportGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportGroup>("OTP.Ring.Data.Model.FK_ReportColumn_ReportGroupID", "ReportGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReportGroup>("OTP.Ring.Data.Model.FK_ReportColumn_ReportGroupID", "ReportGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ReportFilter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportFilter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportFilter object.
        /// </summary>
        /// <param name="reportFilterID">Initial value of the ReportFilterID property.</param>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="filterName_EN">Initial value of the FilterName_EN property.</param>
        /// <param name="filterName_FR">Initial value of the FilterName_FR property.</param>
        /// <param name="fieldName_EN">Initial value of the FieldName_EN property.</param>
        /// <param name="display">Initial value of the Display property.</param>
        /// <param name="reportOperand">Initial value of the ReportOperand property.</param>
        public static ReportFilter CreateReportFilter(global::System.Int32 reportFilterID, global::System.Int32 reportID, global::System.Int32 sortOrder, global::System.String filterName_EN, global::System.String filterName_FR, global::System.String fieldName_EN, global::System.Boolean display, global::System.String reportOperand)
        {
            ReportFilter reportFilter = new ReportFilter();
            reportFilter.ReportFilterID = reportFilterID;
            reportFilter.ReportID = reportID;
            reportFilter.SortOrder = sortOrder;
            reportFilter.FilterName_EN = filterName_EN;
            reportFilter.FilterName_FR = filterName_FR;
            reportFilter.FieldName_EN = fieldName_EN;
            reportFilter.Display = display;
            reportFilter.ReportOperand = reportOperand;
            return reportFilter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportFilterID
        {
            get
            {
                return _ReportFilterID;
            }
            set
            {
                if (_ReportFilterID != value)
                {
                    OnReportFilterIDChanging(value);
                    ReportPropertyChanging("ReportFilterID");
                    _ReportFilterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportFilterID");
                    OnReportFilterIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportFilterID;
        partial void OnReportFilterIDChanging(global::System.Int32 value);
        partial void OnReportFilterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private global::System.Int32 _ReportID;
        partial void OnReportIDChanging(global::System.Int32 value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilterName_EN
        {
            get
            {
                return _FilterName_EN;
            }
            set
            {
                OnFilterName_ENChanging(value);
                ReportPropertyChanging("FilterName_EN");
                _FilterName_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilterName_EN");
                OnFilterName_ENChanged();
            }
        }
        private global::System.String _FilterName_EN;
        partial void OnFilterName_ENChanging(global::System.String value);
        partial void OnFilterName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilterName_FR
        {
            get
            {
                return _FilterName_FR;
            }
            set
            {
                OnFilterName_FRChanging(value);
                ReportPropertyChanging("FilterName_FR");
                _FilterName_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilterName_FR");
                OnFilterName_FRChanged();
            }
        }
        private global::System.String _FilterName_FR;
        partial void OnFilterName_FRChanging(global::System.String value);
        partial void OnFilterName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName_EN
        {
            get
            {
                return _FieldName_EN;
            }
            set
            {
                OnFieldName_ENChanging(value);
                ReportPropertyChanging("FieldName_EN");
                _FieldName_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FieldName_EN");
                OnFieldName_ENChanged();
            }
        }
        private global::System.String _FieldName_EN;
        partial void OnFieldName_ENChanging(global::System.String value);
        partial void OnFieldName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldName_FR
        {
            get
            {
                return _FieldName_FR;
            }
            set
            {
                OnFieldName_FRChanging(value);
                ReportPropertyChanging("FieldName_FR");
                _FieldName_FR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldName_FR");
                OnFieldName_FRChanged();
            }
        }
        private global::System.String _FieldName_FR;
        partial void OnFieldName_FRChanging(global::System.String value);
        partial void OnFieldName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Display
        {
            get
            {
                return _Display;
            }
            set
            {
                OnDisplayChanging(value);
                ReportPropertyChanging("Display");
                _Display = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Display");
                OnDisplayChanged();
            }
        }
        private global::System.Boolean _Display;
        partial void OnDisplayChanging(global::System.Boolean value);
        partial void OnDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Default_EN
        {
            get
            {
                return _Default_EN;
            }
            set
            {
                OnDefault_ENChanging(value);
                ReportPropertyChanging("Default_EN");
                _Default_EN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Default_EN");
                OnDefault_ENChanged();
            }
        }
        private global::System.String _Default_EN;
        partial void OnDefault_ENChanging(global::System.String value);
        partial void OnDefault_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportOperand
        {
            get
            {
                return _ReportOperand;
            }
            set
            {
                OnReportOperandChanging(value);
                ReportPropertyChanging("ReportOperand");
                _ReportOperand = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReportOperand");
                OnReportOperandChanged();
            }
        }
        private global::System.String _ReportOperand;
        partial void OnReportOperandChanging(global::System.String value);
        partial void OnReportOperandChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportFilter_ReportID", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportFilter_ReportID", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportFilter_ReportID", "Report").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportFilter_ReportID", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportFilter_ReportID", "Report", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ReportFormatString")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportFormatString : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportFormatString object.
        /// </summary>
        /// <param name="reportFormatStringID">Initial value of the ReportFormatStringID property.</param>
        /// <param name="xType">Initial value of the XType property.</param>
        /// <param name="reportFormatString1">Initial value of the ReportFormatString1 property.</param>
        public static ReportFormatString CreateReportFormatString(global::System.Int32 reportFormatStringID, global::System.String xType, global::System.String reportFormatString1)
        {
            ReportFormatString reportFormatString = new ReportFormatString();
            reportFormatString.ReportFormatStringID = reportFormatStringID;
            reportFormatString.XType = xType;
            reportFormatString.ReportFormatString1 = reportFormatString1;
            return reportFormatString;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportFormatStringID
        {
            get
            {
                return _ReportFormatStringID;
            }
            set
            {
                if (_ReportFormatStringID != value)
                {
                    OnReportFormatStringIDChanging(value);
                    ReportPropertyChanging("ReportFormatStringID");
                    _ReportFormatStringID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportFormatStringID");
                    OnReportFormatStringIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportFormatStringID;
        partial void OnReportFormatStringIDChanging(global::System.Int32 value);
        partial void OnReportFormatStringIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String XType
        {
            get
            {
                return _XType;
            }
            set
            {
                OnXTypeChanging(value);
                ReportPropertyChanging("XType");
                _XType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("XType");
                OnXTypeChanged();
            }
        }
        private global::System.String _XType;
        partial void OnXTypeChanging(global::System.String value);
        partial void OnXTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportFormatString1
        {
            get
            {
                return _ReportFormatString1;
            }
            set
            {
                OnReportFormatString1Changing(value);
                ReportPropertyChanging("ReportFormatString1");
                _ReportFormatString1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReportFormatString1");
                OnReportFormatString1Changed();
            }
        }
        private global::System.String _ReportFormatString1;
        partial void OnReportFormatString1Changing(global::System.String value);
        partial void OnReportFormatString1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ReportGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportGroup object.
        /// </summary>
        /// <param name="reportGroupID">Initial value of the ReportGroupID property.</param>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="reportGroupLevel">Initial value of the ReportGroupLevel property.</param>
        /// <param name="fieldName_EN">Initial value of the FieldName_EN property.</param>
        public static ReportGroup CreateReportGroup(global::System.Int32 reportGroupID, global::System.Int32 reportID, global::System.Int32 reportGroupLevel, global::System.String fieldName_EN)
        {
            ReportGroup reportGroup = new ReportGroup();
            reportGroup.ReportGroupID = reportGroupID;
            reportGroup.ReportID = reportID;
            reportGroup.ReportGroupLevel = reportGroupLevel;
            reportGroup.FieldName_EN = fieldName_EN;
            return reportGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportGroupID
        {
            get
            {
                return _ReportGroupID;
            }
            set
            {
                if (_ReportGroupID != value)
                {
                    OnReportGroupIDChanging(value);
                    ReportPropertyChanging("ReportGroupID");
                    _ReportGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportGroupID");
                    OnReportGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportGroupID;
        partial void OnReportGroupIDChanging(global::System.Int32 value);
        partial void OnReportGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private global::System.Int32 _ReportID;
        partial void OnReportIDChanging(global::System.Int32 value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportGroupLevel
        {
            get
            {
                return _ReportGroupLevel;
            }
            set
            {
                OnReportGroupLevelChanging(value);
                ReportPropertyChanging("ReportGroupLevel");
                _ReportGroupLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportGroupLevel");
                OnReportGroupLevelChanged();
            }
        }
        private global::System.Int32 _ReportGroupLevel;
        partial void OnReportGroupLevelChanging(global::System.Int32 value);
        partial void OnReportGroupLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName_EN
        {
            get
            {
                return _FieldName_EN;
            }
            set
            {
                OnFieldName_ENChanging(value);
                ReportPropertyChanging("FieldName_EN");
                _FieldName_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FieldName_EN");
                OnFieldName_ENChanged();
            }
        }
        private global::System.String _FieldName_EN;
        partial void OnFieldName_ENChanging(global::System.String value);
        partial void OnFieldName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldName_FR
        {
            get
            {
                return _FieldName_FR;
            }
            set
            {
                OnFieldName_FRChanging(value);
                ReportPropertyChanging("FieldName_FR");
                _FieldName_FR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldName_FR");
                OnFieldName_FRChanged();
            }
        }
        private global::System.String _FieldName_FR;
        partial void OnFieldName_FRChanging(global::System.String value);
        partial void OnFieldName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportGroup_ReportID", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportGroup_ReportID", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportGroup_ReportID", "Report").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportGroup_ReportID", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportGroup_ReportID", "Report", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportColumn_ReportGroupID", "ReportColumn")]
        public EntityCollection<ReportColumn> ReportColumns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportColumn>("OTP.Ring.Data.Model.FK_ReportColumn_ReportGroupID", "ReportColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportColumn>("OTP.Ring.Data.Model.FK_ReportColumn_ReportGroupID", "ReportColumn", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ReportParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportParameter object.
        /// </summary>
        /// <param name="reportParameterID">Initial value of the ReportParameterID property.</param>
        /// <param name="reportProcedureID">Initial value of the ReportProcedureID property.</param>
        /// <param name="reportProcedureIDParameter">Initial value of the ReportProcedureIDParameter property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ReportParameter CreateReportParameter(global::System.Int32 reportParameterID, global::System.Int32 reportProcedureID, global::System.Int32 reportProcedureIDParameter, global::System.Int32 sortOrder)
        {
            ReportParameter reportParameter = new ReportParameter();
            reportParameter.ReportParameterID = reportParameterID;
            reportParameter.ReportProcedureID = reportProcedureID;
            reportParameter.ReportProcedureIDParameter = reportProcedureIDParameter;
            reportParameter.SortOrder = sortOrder;
            return reportParameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportParameterID
        {
            get
            {
                return _ReportParameterID;
            }
            set
            {
                if (_ReportParameterID != value)
                {
                    OnReportParameterIDChanging(value);
                    ReportPropertyChanging("ReportParameterID");
                    _ReportParameterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportParameterID");
                    OnReportParameterIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportParameterID;
        partial void OnReportParameterIDChanging(global::System.Int32 value);
        partial void OnReportParameterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportProcedureID
        {
            get
            {
                return _ReportProcedureID;
            }
            set
            {
                OnReportProcedureIDChanging(value);
                ReportPropertyChanging("ReportProcedureID");
                _ReportProcedureID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportProcedureID");
                OnReportProcedureIDChanged();
            }
        }
        private global::System.Int32 _ReportProcedureID;
        partial void OnReportProcedureIDChanging(global::System.Int32 value);
        partial void OnReportProcedureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportProcedureIDParameter
        {
            get
            {
                return _ReportProcedureIDParameter;
            }
            set
            {
                OnReportProcedureIDParameterChanging(value);
                ReportPropertyChanging("ReportProcedureIDParameter");
                _ReportProcedureIDParameter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportProcedureIDParameter");
                OnReportProcedureIDParameterChanged();
            }
        }
        private global::System.Int32 _ReportProcedureIDParameter;
        partial void OnReportProcedureIDParameterChanging(global::System.Int32 value);
        partial void OnReportProcedureIDParameterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportParameter_ReportProcedureID", "ReportProcedure")]
        public ReportProcedure ReportProcedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportProcedure>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureID", "ReportProcedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportProcedure>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureID", "ReportProcedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReportProcedure> ReportProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportProcedure>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureID", "ReportProcedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReportProcedure>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureID", "ReportProcedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportParameter_ReportProcedureIDParameter", "ReportProcedure")]
        public ReportProcedure ReportProcedure1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportProcedure>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureIDParameter", "ReportProcedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportProcedure>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureIDParameter", "ReportProcedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReportProcedure> ReportProcedure1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportProcedure>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureIDParameter", "ReportProcedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReportProcedure>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureIDParameter", "ReportProcedure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ReportProcedure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportProcedure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportProcedure object.
        /// </summary>
        /// <param name="reportProcedureID">Initial value of the ReportProcedureID property.</param>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="procedureName">Initial value of the ProcedureName property.</param>
        /// <param name="procedureType">Initial value of the ProcedureType property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ReportProcedure CreateReportProcedure(global::System.Int32 reportProcedureID, global::System.Int32 reportID, global::System.String name_EN, global::System.String name_FR, global::System.String procedureName, global::System.String procedureType, global::System.Int32 sortOrder)
        {
            ReportProcedure reportProcedure = new ReportProcedure();
            reportProcedure.ReportProcedureID = reportProcedureID;
            reportProcedure.ReportID = reportID;
            reportProcedure.Name_EN = name_EN;
            reportProcedure.Name_FR = name_FR;
            reportProcedure.ProcedureName = procedureName;
            reportProcedure.ProcedureType = procedureType;
            reportProcedure.SortOrder = sortOrder;
            return reportProcedure;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportProcedureID
        {
            get
            {
                return _ReportProcedureID;
            }
            set
            {
                if (_ReportProcedureID != value)
                {
                    OnReportProcedureIDChanging(value);
                    ReportPropertyChanging("ReportProcedureID");
                    _ReportProcedureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportProcedureID");
                    OnReportProcedureIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportProcedureID;
        partial void OnReportProcedureIDChanging(global::System.Int32 value);
        partial void OnReportProcedureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private global::System.Int32 _ReportID;
        partial void OnReportIDChanging(global::System.Int32 value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcedureName
        {
            get
            {
                return _ProcedureName;
            }
            set
            {
                OnProcedureNameChanging(value);
                ReportPropertyChanging("ProcedureName");
                _ProcedureName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcedureName");
                OnProcedureNameChanged();
            }
        }
        private global::System.String _ProcedureName;
        partial void OnProcedureNameChanging(global::System.String value);
        partial void OnProcedureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcedureType
        {
            get
            {
                return _ProcedureType;
            }
            set
            {
                OnProcedureTypeChanging(value);
                ReportPropertyChanging("ProcedureType");
                _ProcedureType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcedureType");
                OnProcedureTypeChanged();
            }
        }
        private global::System.String _ProcedureType;
        partial void OnProcedureTypeChanging(global::System.String value);
        partial void OnProcedureTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataSetRef
        {
            get
            {
                return _DataSetRef;
            }
            set
            {
                OnDataSetRefChanging(value);
                ReportPropertyChanging("DataSetRef");
                _DataSetRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataSetRef");
                OnDataSetRefChanged();
            }
        }
        private global::System.String _DataSetRef;
        partial void OnDataSetRefChanging(global::System.String value);
        partial void OnDataSetRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportProcedure_ReportID", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportProcedure_ReportID", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportProcedure_ReportID", "Report").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportProcedure_ReportID", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportProcedure_ReportID", "Report", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportParameter_ReportProcedureID", "ReportParameter")]
        public EntityCollection<ReportParameter> ReportParameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportParameter>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureID", "ReportParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportParameter>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureID", "ReportParameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportParameter_ReportProcedureIDParameter", "ReportParameter")]
        public EntityCollection<ReportParameter> ReportParameters1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportParameter>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureIDParameter", "ReportParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportParameter>("OTP.Ring.Data.Model.FK_ReportParameter_ReportProcedureIDParameter", "ReportParameter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ReportSecurityGroupProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportSecurityGroupProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportSecurityGroupProfile object.
        /// </summary>
        /// <param name="reportSecurityGroupProfileID">Initial value of the ReportSecurityGroupProfileID property.</param>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="securityGroupProfileID">Initial value of the SecurityGroupProfileID property.</param>
        public static ReportSecurityGroupProfile CreateReportSecurityGroupProfile(global::System.Int32 reportSecurityGroupProfileID, global::System.Int32 reportID, global::System.String securityGroupProfileID)
        {
            ReportSecurityGroupProfile reportSecurityGroupProfile = new ReportSecurityGroupProfile();
            reportSecurityGroupProfile.ReportSecurityGroupProfileID = reportSecurityGroupProfileID;
            reportSecurityGroupProfile.ReportID = reportID;
            reportSecurityGroupProfile.SecurityGroupProfileID = securityGroupProfileID;
            return reportSecurityGroupProfile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportSecurityGroupProfileID
        {
            get
            {
                return _ReportSecurityGroupProfileID;
            }
            set
            {
                if (_ReportSecurityGroupProfileID != value)
                {
                    OnReportSecurityGroupProfileIDChanging(value);
                    ReportPropertyChanging("ReportSecurityGroupProfileID");
                    _ReportSecurityGroupProfileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportSecurityGroupProfileID");
                    OnReportSecurityGroupProfileIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportSecurityGroupProfileID;
        partial void OnReportSecurityGroupProfileIDChanging(global::System.Int32 value);
        partial void OnReportSecurityGroupProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private global::System.Int32 _ReportID;
        partial void OnReportIDChanging(global::System.Int32 value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityGroupProfileID
        {
            get
            {
                return _SecurityGroupProfileID;
            }
            set
            {
                OnSecurityGroupProfileIDChanging(value);
                ReportPropertyChanging("SecurityGroupProfileID");
                _SecurityGroupProfileID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityGroupProfileID");
                OnSecurityGroupProfileIDChanged();
            }
        }
        private global::System.String _SecurityGroupProfileID;
        partial void OnSecurityGroupProfileIDChanging(global::System.String value);
        partial void OnSecurityGroupProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportSecurityGroupProfile_ReportID", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_ReportID", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_ReportID", "Report").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_ReportID", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_ReportID", "Report", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportSecurityGroupProfile_SecurityGroupProfileID", "SecurityGroupProfile")]
        public SecurityGroupProfile SecurityGroupProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_SecurityGroupProfileID", "SecurityGroupProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_SecurityGroupProfileID", "SecurityGroupProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityGroupProfile> SecurityGroupProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_SecurityGroupProfileID", "SecurityGroupProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_SecurityGroupProfileID", "SecurityGroupProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ReportView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportView object.
        /// </summary>
        /// <param name="reportViewID">Initial value of the ReportViewID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="objectName">Initial value of the ObjectName property.</param>
        public static ReportView CreateReportView(global::System.String reportViewID, global::System.String name_EN, global::System.String name_FR, global::System.String objectName)
        {
            ReportView reportView = new ReportView();
            reportView.ReportViewID = reportViewID;
            reportView.Name_EN = name_EN;
            reportView.Name_FR = name_FR;
            reportView.ObjectName = objectName;
            return reportView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportViewID
        {
            get
            {
                return _ReportViewID;
            }
            set
            {
                if (_ReportViewID != value)
                {
                    OnReportViewIDChanging(value);
                    ReportPropertyChanging("ReportViewID");
                    _ReportViewID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ReportViewID");
                    OnReportViewIDChanged();
                }
            }
        }
        private global::System.String _ReportViewID;
        partial void OnReportViewIDChanging(global::System.String value);
        partial void OnReportViewIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectName
        {
            get
            {
                return _ObjectName;
            }
            set
            {
                OnObjectNameChanging(value);
                ReportPropertyChanging("ObjectName");
                _ObjectName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectName");
                OnObjectNameChanged();
            }
        }
        private global::System.String _ObjectName;
        partial void OnObjectNameChanging(global::System.String value);
        partial void OnObjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Report_ReportViewID", "Report")]
        public EntityCollection<Report> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("OTP.Ring.Data.Model.FK_Report_ReportViewID", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("OTP.Ring.Data.Model.FK_Report_ReportViewID", "Report", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Resource object.
        /// </summary>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        /// <param name="resourceTypeID">Initial value of the ResourceTypeID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="tBD">Initial value of the TBD property.</param>
        /// <param name="pooled">Initial value of the Pooled property.</param>
        /// <param name="new">Initial value of the New property.</param>
        public static Resource CreateResource(global::System.Int32 resourceID, global::System.String resourceTypeID, global::System.String firstName, global::System.String lastName, global::System.String countryID, global::System.Boolean active, global::System.Boolean tBD, global::System.Boolean pooled, global::System.Boolean @new)
        {
            Resource resource = new Resource();
            resource.ResourceID = resourceID;
            resource.ResourceTypeID = resourceTypeID;
            resource.FirstName = firstName;
            resource.LastName = lastName;
            resource.CountryID = countryID;
            resource.Active = active;
            resource.TBD = tBD;
            resource.Pooled = pooled;
            resource.New = @new;
            return resource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResourceTypeID
        {
            get
            {
                return _ResourceTypeID;
            }
            set
            {
                OnResourceTypeIDChanging(value);
                ReportPropertyChanging("ResourceTypeID");
                _ResourceTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResourceTypeID");
                OnResourceTypeIDChanged();
            }
        }
        private global::System.String _ResourceTypeID;
        partial void OnResourceTypeIDChanging(global::System.String value);
        partial void OnResourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceClassID
        {
            get
            {
                return _ResourceClassID;
            }
            set
            {
                OnResourceClassIDChanging(value);
                ReportPropertyChanging("ResourceClassID");
                _ResourceClassID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceClassID");
                OnResourceClassIDChanged();
            }
        }
        private global::System.String _ResourceClassID;
        partial void OnResourceClassIDChanging(global::System.String value);
        partial void OnResourceClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceSpecialtyID
        {
            get
            {
                return _ResourceSpecialtyID;
            }
            set
            {
                OnResourceSpecialtyIDChanging(value);
                ReportPropertyChanging("ResourceSpecialtyID");
                _ResourceSpecialtyID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceSpecialtyID");
                OnResourceSpecialtyIDChanged();
            }
        }
        private global::System.String _ResourceSpecialtyID;
        partial void OnResourceSpecialtyIDChanging(global::System.String value);
        partial void OnResourceSpecialtyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingAddress
        {
            get
            {
                return _MailingAddress;
            }
            set
            {
                OnMailingAddressChanging(value);
                ReportPropertyChanging("MailingAddress");
                _MailingAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailingAddress");
                OnMailingAddressChanged();
            }
        }
        private global::System.String _MailingAddress;
        partial void OnMailingAddressChanging(global::System.String value);
        partial void OnMailingAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingCity
        {
            get
            {
                return _MailingCity;
            }
            set
            {
                OnMailingCityChanging(value);
                ReportPropertyChanging("MailingCity");
                _MailingCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailingCity");
                OnMailingCityChanged();
            }
        }
        private global::System.String _MailingCity;
        partial void OnMailingCityChanging(global::System.String value);
        partial void OnMailingCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingProvinceID
        {
            get
            {
                return _MailingProvinceID;
            }
            set
            {
                OnMailingProvinceIDChanging(value);
                ReportPropertyChanging("MailingProvinceID");
                _MailingProvinceID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailingProvinceID");
                OnMailingProvinceIDChanged();
            }
        }
        private global::System.String _MailingProvinceID;
        partial void OnMailingProvinceIDChanging(global::System.String value);
        partial void OnMailingProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMailAddress
        {
            get
            {
                return _EMailAddress;
            }
            set
            {
                OnEMailAddressChanging(value);
                ReportPropertyChanging("EMailAddress");
                _EMailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMailAddress");
                OnEMailAddressChanged();
            }
        }
        private global::System.String _EMailAddress;
        partial void OnEMailAddressChanging(global::System.String value);
        partial void OnEMailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HometownCity
        {
            get
            {
                return _HometownCity;
            }
            set
            {
                OnHometownCityChanging(value);
                ReportPropertyChanging("HometownCity");
                _HometownCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HometownCity");
                OnHometownCityChanged();
            }
        }
        private global::System.String _HometownCity;
        partial void OnHometownCityChanging(global::System.String value);
        partial void OnHometownCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HometownProvinceID
        {
            get
            {
                return _HometownProvinceID;
            }
            set
            {
                OnHometownProvinceIDChanging(value);
                ReportPropertyChanging("HometownProvinceID");
                _HometownProvinceID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HometownProvinceID");
                OnHometownProvinceIDChanged();
            }
        }
        private global::System.String _HometownProvinceID;
        partial void OnHometownProvinceIDChanging(global::System.String value);
        partial void OnHometownProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrimaryCSCID
        {
            get
            {
                return _PrimaryCSCID;
            }
            set
            {
                OnPrimaryCSCIDChanging(value);
                ReportPropertyChanging("PrimaryCSCID");
                _PrimaryCSCID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrimaryCSCID");
                OnPrimaryCSCIDChanged();
            }
        }
        private global::System.String _PrimaryCSCID;
        partial void OnPrimaryCSCIDChanging(global::System.String value);
        partial void OnPrimaryCSCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondaryCSCID
        {
            get
            {
                return _SecondaryCSCID;
            }
            set
            {
                OnSecondaryCSCIDChanging(value);
                ReportPropertyChanging("SecondaryCSCID");
                _SecondaryCSCID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecondaryCSCID");
                OnSecondaryCSCIDChanged();
            }
        }
        private global::System.String _SecondaryCSCID;
        partial void OnSecondaryCSCIDChanging(global::System.String value);
        partial void OnSecondaryCSCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TBD
        {
            get
            {
                return _TBD;
            }
            set
            {
                OnTBDChanging(value);
                ReportPropertyChanging("TBD");
                _TBD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TBD");
                OnTBDChanged();
            }
        }
        private global::System.Boolean _TBD;
        partial void OnTBDChanging(global::System.Boolean value);
        partial void OnTBDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Pooled
        {
            get
            {
                return _Pooled;
            }
            set
            {
                OnPooledChanging(value);
                ReportPropertyChanging("Pooled");
                _Pooled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pooled");
                OnPooledChanged();
            }
        }
        private global::System.Boolean _Pooled;
        partial void OnPooledChanging(global::System.Boolean value);
        partial void OnPooledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean New
        {
            get
            {
                return _New;
            }
            set
            {
                OnNewChanging(value);
                ReportPropertyChanging("New");
                _New = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("New");
                OnNewChanged();
            }
        }
        private global::System.Boolean _New;
        partial void OnNewChanging(global::System.Boolean value);
        partial void OnNewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingCountryID
        {
            get
            {
                return _MailingCountryID;
            }
            set
            {
                OnMailingCountryIDChanging(value);
                ReportPropertyChanging("MailingCountryID");
                _MailingCountryID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailingCountryID");
                OnMailingCountryIDChanged();
            }
        }
        private global::System.String _MailingCountryID;
        partial void OnMailingCountryIDChanging(global::System.String value);
        partial void OnMailingCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingPostalCode
        {
            get
            {
                return _MailingPostalCode;
            }
            set
            {
                OnMailingPostalCodeChanging(value);
                ReportPropertyChanging("MailingPostalCode");
                _MailingPostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailingPostalCode");
                OnMailingPostalCodeChanged();
            }
        }
        private global::System.String _MailingPostalCode;
        partial void OnMailingPostalCodeChanging(global::System.String value);
        partial void OnMailingPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HometownCountryID
        {
            get
            {
                return _HometownCountryID;
            }
            set
            {
                OnHometownCountryIDChanging(value);
                ReportPropertyChanging("HometownCountryID");
                _HometownCountryID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HometownCountryID");
                OnHometownCountryIDChanged();
            }
        }
        private global::System.String _HometownCountryID;
        partial void OnHometownCountryIDChanging(global::System.String value);
        partial void OnHometownCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellPhone
        {
            get
            {
                return _CellPhone;
            }
            set
            {
                OnCellPhoneChanging(value);
                ReportPropertyChanging("CellPhone");
                _CellPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellPhone");
                OnCellPhoneChanged();
            }
        }
        private global::System.String _CellPhone;
        partial void OnCellPhoneChanging(global::System.String value);
        partial void OnCellPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SkypeName
        {
            get
            {
                return _SkypeName;
            }
            set
            {
                OnSkypeNameChanging(value);
                ReportPropertyChanging("SkypeName");
                _SkypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SkypeName");
                OnSkypeNameChanged();
            }
        }
        private global::System.String _SkypeName;
        partial void OnSkypeNameChanging(global::System.String value);
        partial void OnSkypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WDBID
        {
            get
            {
                return _WDBID;
            }
            set
            {
                OnWDBIDChanging(value);
                ReportPropertyChanging("WDBID");
                _WDBID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WDBID");
                OnWDBIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WDBID;
        partial void OnWDBIDChanging(Nullable<global::System.Int32> value);
        partial void OnWDBIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_CountryID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_CountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_CountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_CountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_CountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_HometownCountryID", "Country")]
        public Country Country1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_HometownCountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_HometownCountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> Country1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_HometownCountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_HometownCountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_MailingCountryID", "Country")]
        public Country Country2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_MailingCountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_MailingCountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> Country2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_MailingCountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OTP.Ring.Data.Model.FK_Resource_MailingCountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingDetail_ResourceID", "FundingDetail")]
        public EntityCollection<FundingDetail> FundingDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingDetail>("OTP.Ring.Data.Model.FK_FundingDetail_ResourceID", "FundingDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingDetail>("OTP.Ring.Data.Model.FK_FundingDetail_ResourceID", "FundingDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_PrimaryCSCID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Resource_PrimaryCSCID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Resource_PrimaryCSCID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Resource_PrimaryCSCID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Resource_PrimaryCSCID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_SecondaryCSCID", "Organization")]
        public Organization Organization1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Resource_SecondaryCSCID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Resource_SecondaryCSCID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> Organization1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Resource_SecondaryCSCID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Resource_SecondaryCSCID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_HometownProvinceID", "Province")]
        public Province Province
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("OTP.Ring.Data.Model.FK_Resource_HometownProvinceID", "Province").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("OTP.Ring.Data.Model.FK_Resource_HometownProvinceID", "Province").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Province> ProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("OTP.Ring.Data.Model.FK_Resource_HometownProvinceID", "Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Province>("OTP.Ring.Data.Model.FK_Resource_HometownProvinceID", "Province", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_MailingProvinceID", "Province")]
        public Province Province1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("OTP.Ring.Data.Model.FK_Resource_MailingProvinceID", "Province").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("OTP.Ring.Data.Model.FK_Resource_MailingProvinceID", "Province").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Province> Province1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("OTP.Ring.Data.Model.FK_Resource_MailingProvinceID", "Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Province>("OTP.Ring.Data.Model.FK_Resource_MailingProvinceID", "Province", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_ResourceClassID", "ResourceClass")]
        public ResourceClass ResourceClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("OTP.Ring.Data.Model.FK_Resource_ResourceClassID", "ResourceClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("OTP.Ring.Data.Model.FK_Resource_ResourceClassID", "ResourceClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceClass> ResourceClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("OTP.Ring.Data.Model.FK_Resource_ResourceClassID", "ResourceClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceClass>("OTP.Ring.Data.Model.FK_Resource_ResourceClassID", "ResourceClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_ResourceSpecialtyID", "ResourceSpecialty")]
        public ResourceSpecialty ResourceSpecialty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceSpecialty>("OTP.Ring.Data.Model.FK_Resource_ResourceSpecialtyID", "ResourceSpecialty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceSpecialty>("OTP.Ring.Data.Model.FK_Resource_ResourceSpecialtyID", "ResourceSpecialty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceSpecialty> ResourceSpecialtyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceSpecialty>("OTP.Ring.Data.Model.FK_Resource_ResourceSpecialtyID", "ResourceSpecialty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceSpecialty>("OTP.Ring.Data.Model.FK_Resource_ResourceSpecialtyID", "ResourceSpecialty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_ResourceTypeID", "ResourceType")]
        public ResourceType ResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_Resource_ResourceTypeID", "ResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_Resource_ResourceTypeID", "ResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceType> ResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_Resource_ResourceTypeID", "ResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_Resource_ResourceTypeID", "ResourceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_ResourceID", "ResourceAffiliate")]
        public EntityCollection<ResourceAffiliate> ResourceAffiliates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceAffiliate>("OTP.Ring.Data.Model.FK_ResourceAffiliate_ResourceID", "ResourceAffiliate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceAffiliate>("OTP.Ring.Data.Model.FK_ResourceAffiliate_ResourceID", "ResourceAffiliate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceDirectAthleteSupport_ResourceID", "ResourceDirectAthleteSupport")]
        public EntityCollection<ResourceDirectAthleteSupport> ResourceDirectAthleteSupports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceDirectAthleteSupport>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_ResourceID", "ResourceDirectAthleteSupport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceDirectAthleteSupport>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_ResourceID", "ResourceDirectAthleteSupport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourcePoolAssignment_ResourceIDAssignment", "ResourcePoolAssignment")]
        public EntityCollection<ResourcePoolAssignment> ResourcePoolAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourcePoolAssignment>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDAssignment", "ResourcePoolAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourcePoolAssignment>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDAssignment", "ResourcePoolAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourcePoolAssignment_ResourceIDPool", "ResourcePoolAssignment")]
        public EntityCollection<ResourcePoolAssignment> ResourcePoolAssignments1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourcePoolAssignment>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDPool", "ResourcePoolAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourcePoolAssignment>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDPool", "ResourcePoolAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceQualification_ResourceID", "ResourceQualification")]
        public EntityCollection<ResourceQualification> ResourceQualifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceQualification>("OTP.Ring.Data.Model.FK_ResourceQualification_ResourceID", "ResourceQualification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceQualification>("OTP.Ring.Data.Model.FK_ResourceQualification_ResourceID", "ResourceQualification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_ResourceID", "ResourceSport")]
        public EntityCollection<ResourceSport> ResourceSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSport>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceID", "ResourceSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSport>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceID", "ResourceSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_TeamResource_ResourceID", "TeamResource")]
        public EntityCollection<TeamResource> TeamResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamResource>("OTP.Ring.Data.Model.FK_TeamResource_ResourceID", "TeamResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamResource>("OTP.Ring.Data.Model.FK_TeamResource_ResourceID", "TeamResource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResourceAffiliate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceAffiliate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceAffiliate object.
        /// </summary>
        /// <param name="resourceAffiliateID">Initial value of the ResourceAffiliateID property.</param>
        /// <param name="affiliateTypeID">Initial value of the AffiliateTypeID property.</param>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        /// <param name="yearFromID">Initial value of the YearFromID property.</param>
        /// <param name="yearToID">Initial value of the YearToID property.</param>
        /// <param name="affiliateName">Initial value of the AffiliateName property.</param>
        public static ResourceAffiliate CreateResourceAffiliate(global::System.Int32 resourceAffiliateID, global::System.String affiliateTypeID, global::System.Int32 resourceID, global::System.String yearFromID, global::System.String yearToID, global::System.String affiliateName)
        {
            ResourceAffiliate resourceAffiliate = new ResourceAffiliate();
            resourceAffiliate.ResourceAffiliateID = resourceAffiliateID;
            resourceAffiliate.AffiliateTypeID = affiliateTypeID;
            resourceAffiliate.ResourceID = resourceID;
            resourceAffiliate.YearFromID = yearFromID;
            resourceAffiliate.YearToID = yearToID;
            resourceAffiliate.AffiliateName = affiliateName;
            return resourceAffiliate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceAffiliateID
        {
            get
            {
                return _ResourceAffiliateID;
            }
            set
            {
                if (_ResourceAffiliateID != value)
                {
                    OnResourceAffiliateIDChanging(value);
                    ReportPropertyChanging("ResourceAffiliateID");
                    _ResourceAffiliateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceAffiliateID");
                    OnResourceAffiliateIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceAffiliateID;
        partial void OnResourceAffiliateIDChanging(global::System.Int32 value);
        partial void OnResourceAffiliateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AffiliateTypeID
        {
            get
            {
                return _AffiliateTypeID;
            }
            set
            {
                OnAffiliateTypeIDChanging(value);
                ReportPropertyChanging("AffiliateTypeID");
                _AffiliateTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AffiliateTypeID");
                OnAffiliateTypeIDChanged();
            }
        }
        private global::System.String _AffiliateTypeID;
        partial void OnAffiliateTypeIDChanging(global::System.String value);
        partial void OnAffiliateTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearFromID
        {
            get
            {
                return _YearFromID;
            }
            set
            {
                OnYearFromIDChanging(value);
                ReportPropertyChanging("YearFromID");
                _YearFromID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearFromID");
                OnYearFromIDChanged();
            }
        }
        private global::System.String _YearFromID;
        partial void OnYearFromIDChanging(global::System.String value);
        partial void OnYearFromIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearToID
        {
            get
            {
                return _YearToID;
            }
            set
            {
                OnYearToIDChanging(value);
                ReportPropertyChanging("YearToID");
                _YearToID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearToID");
                OnYearToIDChanged();
            }
        }
        private global::System.String _YearToID;
        partial void OnYearToIDChanging(global::System.String value);
        partial void OnYearToIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AffiliateName
        {
            get
            {
                return _AffiliateName;
            }
            set
            {
                OnAffiliateNameChanging(value);
                ReportPropertyChanging("AffiliateName");
                _AffiliateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AffiliateName");
                OnAffiliateNameChanged();
            }
        }
        private global::System.String _AffiliateName;
        partial void OnAffiliateNameChanging(global::System.String value);
        partial void OnAffiliateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AffiliateContact
        {
            get
            {
                return _AffiliateContact;
            }
            set
            {
                OnAffiliateContactChanging(value);
                ReportPropertyChanging("AffiliateContact");
                _AffiliateContact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AffiliateContact");
                OnAffiliateContactChanged();
            }
        }
        private global::System.String _AffiliateContact;
        partial void OnAffiliateContactChanging(global::System.String value);
        partial void OnAffiliateContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AffiliateEmail
        {
            get
            {
                return _AffiliateEmail;
            }
            set
            {
                OnAffiliateEmailChanging(value);
                ReportPropertyChanging("AffiliateEmail");
                _AffiliateEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AffiliateEmail");
                OnAffiliateEmailChanged();
            }
        }
        private global::System.String _AffiliateEmail;
        partial void OnAffiliateEmailChanging(global::System.String value);
        partial void OnAffiliateEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_AffiliateTypeID", "AffiliateType")]
        public AffiliateType AffiliateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AffiliateType>("OTP.Ring.Data.Model.FK_ResourceAffiliate_AffiliateTypeID", "AffiliateType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AffiliateType>("OTP.Ring.Data.Model.FK_ResourceAffiliate_AffiliateTypeID", "AffiliateType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AffiliateType> AffiliateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AffiliateType>("OTP.Ring.Data.Model.FK_ResourceAffiliate_AffiliateTypeID", "AffiliateType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AffiliateType>("OTP.Ring.Data.Model.FK_ResourceAffiliate_AffiliateTypeID", "AffiliateType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_ResourceID", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceAffiliate_ResourceID", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceAffiliate_ResourceID", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceAffiliate_ResourceID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceAffiliate_ResourceID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_YearFromID", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearFromID", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearFromID", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearFromID", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearFromID", "Year", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_YearToID", "Year")]
        public Year Year1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearToID", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearToID", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> Year1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearToID", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearToID", "Year", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResourceClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceClass object.
        /// </summary>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ResourceClass CreateResourceClass(global::System.String resourceClassID, global::System.String name_EN, global::System.String name_FR, global::System.Int32 sortOrder)
        {
            ResourceClass resourceClass = new ResourceClass();
            resourceClass.ResourceClassID = resourceClassID;
            resourceClass.Name_EN = name_EN;
            resourceClass.Name_FR = name_FR;
            resourceClass.SortOrder = sortOrder;
            return resourceClass;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResourceClassID
        {
            get
            {
                return _ResourceClassID;
            }
            set
            {
                if (_ResourceClassID != value)
                {
                    OnResourceClassIDChanging(value);
                    ReportPropertyChanging("ResourceClassID");
                    _ResourceClassID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ResourceClassID");
                    OnResourceClassIDChanged();
                }
            }
        }
        private global::System.String _ResourceClassID;
        partial void OnResourceClassIDChanging(global::System.String value);
        partial void OnResourceClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_ResourceClassID", "Resource")]
        public EntityCollection<Resource> Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_ResourceClassID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_ResourceClassID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_ResourceClassID", "ResourceSport")]
        public EntityCollection<ResourceSport> ResourceSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSport>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceClassID", "ResourceSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSport>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceClassID", "ResourceSport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResourceDirectAthleteSupport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceDirectAthleteSupport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceDirectAthleteSupport object.
        /// </summary>
        /// <param name="resourceDirectAthleteSupportID">Initial value of the ResourceDirectAthleteSupportID property.</param>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        /// <param name="directAthleteSupportID">Initial value of the DirectAthleteSupportID property.</param>
        /// <param name="yearID">Initial value of the YearID property.</param>
        /// <param name="supportName">Initial value of the SupportName property.</param>
        public static ResourceDirectAthleteSupport CreateResourceDirectAthleteSupport(global::System.Int32 resourceDirectAthleteSupportID, global::System.Int32 resourceID, global::System.String directAthleteSupportID, global::System.String yearID, global::System.String supportName)
        {
            ResourceDirectAthleteSupport resourceDirectAthleteSupport = new ResourceDirectAthleteSupport();
            resourceDirectAthleteSupport.ResourceDirectAthleteSupportID = resourceDirectAthleteSupportID;
            resourceDirectAthleteSupport.ResourceID = resourceID;
            resourceDirectAthleteSupport.DirectAthleteSupportID = directAthleteSupportID;
            resourceDirectAthleteSupport.YearID = yearID;
            resourceDirectAthleteSupport.SupportName = supportName;
            return resourceDirectAthleteSupport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceDirectAthleteSupportID
        {
            get
            {
                return _ResourceDirectAthleteSupportID;
            }
            set
            {
                if (_ResourceDirectAthleteSupportID != value)
                {
                    OnResourceDirectAthleteSupportIDChanging(value);
                    ReportPropertyChanging("ResourceDirectAthleteSupportID");
                    _ResourceDirectAthleteSupportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceDirectAthleteSupportID");
                    OnResourceDirectAthleteSupportIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceDirectAthleteSupportID;
        partial void OnResourceDirectAthleteSupportIDChanging(global::System.Int32 value);
        partial void OnResourceDirectAthleteSupportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DirectAthleteSupportID
        {
            get
            {
                return _DirectAthleteSupportID;
            }
            set
            {
                OnDirectAthleteSupportIDChanging(value);
                ReportPropertyChanging("DirectAthleteSupportID");
                _DirectAthleteSupportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DirectAthleteSupportID");
                OnDirectAthleteSupportIDChanged();
            }
        }
        private global::System.String _DirectAthleteSupportID;
        partial void OnDirectAthleteSupportIDChanging(global::System.String value);
        partial void OnDirectAthleteSupportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                OnYearIDChanging(value);
                ReportPropertyChanging("YearID");
                _YearID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearID");
                OnYearIDChanged();
            }
        }
        private global::System.String _YearID;
        partial void OnYearIDChanging(global::System.String value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupportName
        {
            get
            {
                return _SupportName;
            }
            set
            {
                OnSupportNameChanging(value);
                ReportPropertyChanging("SupportName");
                _SupportName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupportName");
                OnSupportNameChanged();
            }
        }
        private global::System.String _SupportName;
        partial void OnSupportNameChanging(global::System.String value);
        partial void OnSupportNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupportContact
        {
            get
            {
                return _SupportContact;
            }
            set
            {
                OnSupportContactChanging(value);
                ReportPropertyChanging("SupportContact");
                _SupportContact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SupportContact");
                OnSupportContactChanged();
            }
        }
        private global::System.String _SupportContact;
        partial void OnSupportContactChanging(global::System.String value);
        partial void OnSupportContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupportEmail
        {
            get
            {
                return _SupportEmail;
            }
            set
            {
                OnSupportEmailChanging(value);
                ReportPropertyChanging("SupportEmail");
                _SupportEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SupportEmail");
                OnSupportEmailChanged();
            }
        }
        private global::System.String _SupportEmail;
        partial void OnSupportEmailChanging(global::System.String value);
        partial void OnSupportEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceDirectAthleteSupport_DirectAthleteSupportID", "DirectAthleteSupport")]
        public DirectAthleteSupport DirectAthleteSupport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectAthleteSupport>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_DirectAthleteSupportID", "DirectAthleteSupport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectAthleteSupport>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_DirectAthleteSupportID", "DirectAthleteSupport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DirectAthleteSupport> DirectAthleteSupportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectAthleteSupport>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_DirectAthleteSupportID", "DirectAthleteSupport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DirectAthleteSupport>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_DirectAthleteSupportID", "DirectAthleteSupport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceDirectAthleteSupport_ResourceID", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_ResourceID", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_ResourceID", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_ResourceID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_ResourceID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceDirectAthleteSupport_YearFrom", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_YearFrom", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_YearFrom", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_YearFrom", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_YearFrom", "Year", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResourcePoolAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourcePoolAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourcePoolAssignment object.
        /// </summary>
        /// <param name="resourcePoolAssignmentID">Initial value of the ResourcePoolAssignmentID property.</param>
        /// <param name="resourceIDPool">Initial value of the ResourceIDPool property.</param>
        /// <param name="resourceIDAssignment">Initial value of the ResourceIDAssignment property.</param>
        public static ResourcePoolAssignment CreateResourcePoolAssignment(global::System.Int32 resourcePoolAssignmentID, global::System.Int32 resourceIDPool, global::System.Int32 resourceIDAssignment)
        {
            ResourcePoolAssignment resourcePoolAssignment = new ResourcePoolAssignment();
            resourcePoolAssignment.ResourcePoolAssignmentID = resourcePoolAssignmentID;
            resourcePoolAssignment.ResourceIDPool = resourceIDPool;
            resourcePoolAssignment.ResourceIDAssignment = resourceIDAssignment;
            return resourcePoolAssignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourcePoolAssignmentID
        {
            get
            {
                return _ResourcePoolAssignmentID;
            }
            set
            {
                if (_ResourcePoolAssignmentID != value)
                {
                    OnResourcePoolAssignmentIDChanging(value);
                    ReportPropertyChanging("ResourcePoolAssignmentID");
                    _ResourcePoolAssignmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourcePoolAssignmentID");
                    OnResourcePoolAssignmentIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourcePoolAssignmentID;
        partial void OnResourcePoolAssignmentIDChanging(global::System.Int32 value);
        partial void OnResourcePoolAssignmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceIDPool
        {
            get
            {
                return _ResourceIDPool;
            }
            set
            {
                OnResourceIDPoolChanging(value);
                ReportPropertyChanging("ResourceIDPool");
                _ResourceIDPool = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceIDPool");
                OnResourceIDPoolChanged();
            }
        }
        private global::System.Int32 _ResourceIDPool;
        partial void OnResourceIDPoolChanging(global::System.Int32 value);
        partial void OnResourceIDPoolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceIDAssignment
        {
            get
            {
                return _ResourceIDAssignment;
            }
            set
            {
                OnResourceIDAssignmentChanging(value);
                ReportPropertyChanging("ResourceIDAssignment");
                _ResourceIDAssignment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceIDAssignment");
                OnResourceIDAssignmentChanged();
            }
        }
        private global::System.Int32 _ResourceIDAssignment;
        partial void OnResourceIDAssignmentChanging(global::System.Int32 value);
        partial void OnResourceIDAssignmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourcePoolAssignment_ResourceIDAssignment", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDAssignment", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDAssignment", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDAssignment", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDAssignment", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourcePoolAssignment_ResourceIDPool", "Resource")]
        public Resource Resource1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDPool", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDPool", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> Resource1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDPool", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourcePoolAssignment_ResourceIDPool", "Resource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResourceQualification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceQualification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceQualification object.
        /// </summary>
        /// <param name="resourceQualificationID">Initial value of the ResourceQualificationID property.</param>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        /// <param name="qualificationTypeID">Initial value of the QualificationTypeID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="qualified">Initial value of the Qualified property.</param>
        public static ResourceQualification CreateResourceQualification(global::System.Int32 resourceQualificationID, global::System.Int32 resourceID, global::System.String qualificationTypeID, global::System.String description, global::System.Boolean qualified)
        {
            ResourceQualification resourceQualification = new ResourceQualification();
            resourceQualification.ResourceQualificationID = resourceQualificationID;
            resourceQualification.ResourceID = resourceID;
            resourceQualification.QualificationTypeID = qualificationTypeID;
            resourceQualification.Description = description;
            resourceQualification.Qualified = qualified;
            return resourceQualification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceQualificationID
        {
            get
            {
                return _ResourceQualificationID;
            }
            set
            {
                if (_ResourceQualificationID != value)
                {
                    OnResourceQualificationIDChanging(value);
                    ReportPropertyChanging("ResourceQualificationID");
                    _ResourceQualificationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceQualificationID");
                    OnResourceQualificationIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceQualificationID;
        partial void OnResourceQualificationIDChanging(global::System.Int32 value);
        partial void OnResourceQualificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QualificationTypeID
        {
            get
            {
                return _QualificationTypeID;
            }
            set
            {
                OnQualificationTypeIDChanging(value);
                ReportPropertyChanging("QualificationTypeID");
                _QualificationTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QualificationTypeID");
                OnQualificationTypeIDChanged();
            }
        }
        private global::System.String _QualificationTypeID;
        partial void OnQualificationTypeIDChanging(global::System.String value);
        partial void OnQualificationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Qualified
        {
            get
            {
                return _Qualified;
            }
            set
            {
                OnQualifiedChanging(value);
                ReportPropertyChanging("Qualified");
                _Qualified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qualified");
                OnQualifiedChanged();
            }
        }
        private global::System.Boolean _Qualified;
        partial void OnQualifiedChanging(global::System.Boolean value);
        partial void OnQualifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceQualification_QualificationTypeID", "QualificationType")]
        public QualificationType QualificationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QualificationType>("OTP.Ring.Data.Model.FK_ResourceQualification_QualificationTypeID", "QualificationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QualificationType>("OTP.Ring.Data.Model.FK_ResourceQualification_QualificationTypeID", "QualificationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QualificationType> QualificationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QualificationType>("OTP.Ring.Data.Model.FK_ResourceQualification_QualificationTypeID", "QualificationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QualificationType>("OTP.Ring.Data.Model.FK_ResourceQualification_QualificationTypeID", "QualificationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceQualification_ResourceID", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceQualification_ResourceID", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceQualification_ResourceID", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceQualification_ResourceID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceQualification_ResourceID", "Resource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResourceSpecialty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceSpecialty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceSpecialty object.
        /// </summary>
        /// <param name="resourceSpecialtyID">Initial value of the ResourceSpecialtyID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="coachIndicator">Initial value of the CoachIndicator property.</param>
        /// <param name="resourceTypeID">Initial value of the ResourceTypeID property.</param>
        public static ResourceSpecialty CreateResourceSpecialty(global::System.String resourceSpecialtyID, global::System.String name_EN, global::System.String name_FR, global::System.Boolean coachIndicator, global::System.String resourceTypeID)
        {
            ResourceSpecialty resourceSpecialty = new ResourceSpecialty();
            resourceSpecialty.ResourceSpecialtyID = resourceSpecialtyID;
            resourceSpecialty.Name_EN = name_EN;
            resourceSpecialty.Name_FR = name_FR;
            resourceSpecialty.CoachIndicator = coachIndicator;
            resourceSpecialty.ResourceTypeID = resourceTypeID;
            return resourceSpecialty;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResourceSpecialtyID
        {
            get
            {
                return _ResourceSpecialtyID;
            }
            set
            {
                if (_ResourceSpecialtyID != value)
                {
                    OnResourceSpecialtyIDChanging(value);
                    ReportPropertyChanging("ResourceSpecialtyID");
                    _ResourceSpecialtyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ResourceSpecialtyID");
                    OnResourceSpecialtyIDChanged();
                }
            }
        }
        private global::System.String _ResourceSpecialtyID;
        partial void OnResourceSpecialtyIDChanging(global::System.String value);
        partial void OnResourceSpecialtyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CoachIndicator
        {
            get
            {
                return _CoachIndicator;
            }
            set
            {
                OnCoachIndicatorChanging(value);
                ReportPropertyChanging("CoachIndicator");
                _CoachIndicator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoachIndicator");
                OnCoachIndicatorChanged();
            }
        }
        private global::System.Boolean _CoachIndicator;
        partial void OnCoachIndicatorChanging(global::System.Boolean value);
        partial void OnCoachIndicatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResourceTypeID
        {
            get
            {
                return _ResourceTypeID;
            }
            set
            {
                OnResourceTypeIDChanging(value);
                ReportPropertyChanging("ResourceTypeID");
                _ResourceTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResourceTypeID");
                OnResourceTypeIDChanged();
            }
        }
        private global::System.String _ResourceTypeID;
        partial void OnResourceTypeIDChanging(global::System.String value);
        partial void OnResourceTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_ResourceSpecialtyID", "Resource")]
        public EntityCollection<Resource> Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_ResourceSpecialtyID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_ResourceSpecialtyID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceSpecialty_ResourceTypeID", "ResourceType")]
        public ResourceType ResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_ResourceSpecialty_ResourceTypeID", "ResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_ResourceSpecialty_ResourceTypeID", "ResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceType> ResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_ResourceSpecialty_ResourceTypeID", "ResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceType>("OTP.Ring.Data.Model.FK_ResourceSpecialty_ResourceTypeID", "ResourceType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResourceSport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceSport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceSport object.
        /// </summary>
        /// <param name="resourceSportID">Initial value of the ResourceSportID property.</param>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="yearID">Initial value of the YearID property.</param>
        public static ResourceSport CreateResourceSport(global::System.Int32 resourceSportID, global::System.Int32 resourceID, global::System.String sportID, global::System.String yearID)
        {
            ResourceSport resourceSport = new ResourceSport();
            resourceSport.ResourceSportID = resourceSportID;
            resourceSport.ResourceID = resourceID;
            resourceSport.SportID = sportID;
            resourceSport.YearID = yearID;
            return resourceSport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceSportID
        {
            get
            {
                return _ResourceSportID;
            }
            set
            {
                if (_ResourceSportID != value)
                {
                    OnResourceSportIDChanging(value);
                    ReportPropertyChanging("ResourceSportID");
                    _ResourceSportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceSportID");
                    OnResourceSportIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceSportID;
        partial void OnResourceSportIDChanging(global::System.Int32 value);
        partial void OnResourceSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                OnYearIDChanging(value);
                ReportPropertyChanging("YearID");
                _YearID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearID");
                OnYearIDChanged();
            }
        }
        private global::System.String _YearID;
        partial void OnYearIDChanging(global::System.String value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceClassID
        {
            get
            {
                return _ResourceClassID;
            }
            set
            {
                OnResourceClassIDChanging(value);
                ReportPropertyChanging("ResourceClassID");
                _ResourceClassID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceClassID");
                OnResourceClassIDChanged();
            }
        }
        private global::System.String _ResourceClassID;
        partial void OnResourceClassIDChanging(global::System.String value);
        partial void OnResourceClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportTrackingRef
        {
            get
            {
                return _SportTrackingRef;
            }
            set
            {
                OnSportTrackingRefChanging(value);
                ReportPropertyChanging("SportTrackingRef");
                _SportTrackingRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportTrackingRef");
                OnSportTrackingRefChanged();
            }
        }
        private global::System.String _SportTrackingRef;
        partial void OnSportTrackingRefChanging(global::System.String value);
        partial void OnSportTrackingRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CoachResourceID
        {
            get
            {
                return _CoachResourceID;
            }
            set
            {
                OnCoachResourceIDChanging(value);
                ReportPropertyChanging("CoachResourceID");
                _CoachResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoachResourceID");
                OnCoachResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CoachResourceID;
        partial void OnCoachResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnCoachResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ISTCrossCompetency
        {
            get
            {
                return _ISTCrossCompetency;
            }
            set
            {
                OnISTCrossCompetencyChanging(value);
                ReportPropertyChanging("ISTCrossCompetency");
                _ISTCrossCompetency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ISTCrossCompetency");
                OnISTCrossCompetencyChanged();
            }
        }
        private Nullable<global::System.Boolean> _ISTCrossCompetency;
        partial void OnISTCrossCompetencyChanging(Nullable<global::System.Boolean> value);
        partial void OnISTCrossCompetencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ISTPrimary
        {
            get
            {
                return _ISTPrimary;
            }
            set
            {
                OnISTPrimaryChanging(value);
                ReportPropertyChanging("ISTPrimary");
                _ISTPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ISTPrimary");
                OnISTPrimaryChanged();
            }
        }
        private Nullable<global::System.Boolean> _ISTPrimary;
        partial void OnISTPrimaryChanging(Nullable<global::System.Boolean> value);
        partial void OnISTPrimaryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_ResourceSportID", "BenchmarkResource")]
        public EntityCollection<BenchmarkResource> BenchmarkResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenchmarkResource>("OTP.Ring.Data.Model.FK_BenchmarkResource_ResourceSportID", "BenchmarkResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenchmarkResource>("OTP.Ring.Data.Model.FK_BenchmarkResource_ResourceSportID", "BenchmarkResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_ResourceID", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceID", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceID", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_ResourceClassID", "ResourceClass")]
        public ResourceClass ResourceClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceClassID", "ResourceClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceClassID", "ResourceClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceClass> ResourceClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceClassID", "ResourceClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceClass>("OTP.Ring.Data.Model.FK_ResourceSport_ResourceClassID", "ResourceClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ResourceSport_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ResourceSport_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ResourceSport_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ResourceSport_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_Year", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceSport_Year", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceSport_Year", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceSport_Year", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("OTP.Ring.Data.Model.FK_ResourceSport_Year", "Year", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceType object.
        /// </summary>
        /// <param name="resourceTypeID">Initial value of the ResourceTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static ResourceType CreateResourceType(global::System.String resourceTypeID, global::System.String name_EN, global::System.String name_FR)
        {
            ResourceType resourceType = new ResourceType();
            resourceType.ResourceTypeID = resourceTypeID;
            resourceType.Name_EN = name_EN;
            resourceType.Name_FR = name_FR;
            return resourceType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResourceTypeID
        {
            get
            {
                return _ResourceTypeID;
            }
            set
            {
                if (_ResourceTypeID != value)
                {
                    OnResourceTypeIDChanging(value);
                    ReportPropertyChanging("ResourceTypeID");
                    _ResourceTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ResourceTypeID");
                    OnResourceTypeIDChanged();
                }
            }
        }
        private global::System.String _ResourceTypeID;
        partial void OnResourceTypeIDChanging(global::System.String value);
        partial void OnResourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingCategoryType_ResourceTypeID", "FundingCategoryType")]
        public EntityCollection<FundingCategoryType> FundingCategoryTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingCategoryType>("OTP.Ring.Data.Model.FK_FundingCategoryType_ResourceTypeID", "FundingCategoryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingCategoryType>("OTP.Ring.Data.Model.FK_FundingCategoryType_ResourceTypeID", "FundingCategoryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Resource_ResourceTypeID", "Resource")]
        public EntityCollection<Resource> Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_ResourceTypeID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("OTP.Ring.Data.Model.FK_Resource_ResourceTypeID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceSpecialty_ResourceTypeID", "ResourceSpecialty")]
        public EntityCollection<ResourceSpecialty> ResourceSpecialties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSpecialty>("OTP.Ring.Data.Model.FK_ResourceSpecialty_ResourceTypeID", "ResourceSpecialty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSpecialty>("OTP.Ring.Data.Model.FK_ResourceSpecialty_ResourceTypeID", "ResourceSpecialty", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Result")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Result : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Result object.
        /// </summary>
        /// <param name="resultID">Initial value of the ResultID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="competitionID">Initial value of the CompetitionID property.</param>
        /// <param name="eventDate">Initial value of the EventDate property.</param>
        /// <param name="eventDescription">Initial value of the EventDescription property.</param>
        /// <param name="benchmarkTypeID">Initial value of the BenchmarkTypeID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static Result CreateResult(global::System.Int32 resultID, global::System.String sportID, global::System.Int32 competitionID, global::System.DateTime eventDate, global::System.String eventDescription, global::System.Int32 benchmarkTypeID, global::System.String countryID, global::System.Int32 teamID, global::System.Int32 position)
        {
            Result result = new Result();
            result.ResultID = resultID;
            result.SportID = sportID;
            result.CompetitionID = competitionID;
            result.EventDate = eventDate;
            result.EventDescription = eventDescription;
            result.BenchmarkTypeID = benchmarkTypeID;
            result.CountryID = countryID;
            result.TeamID = teamID;
            result.Position = position;
            return result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultID
        {
            get
            {
                return _ResultID;
            }
            set
            {
                if (_ResultID != value)
                {
                    OnResultIDChanging(value);
                    ReportPropertyChanging("ResultID");
                    _ResultID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultID");
                    OnResultIDChanged();
                }
            }
        }
        private global::System.Int32 _ResultID;
        partial void OnResultIDChanging(global::System.Int32 value);
        partial void OnResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionID
        {
            get
            {
                return _CompetitionID;
            }
            set
            {
                OnCompetitionIDChanging(value);
                ReportPropertyChanging("CompetitionID");
                _CompetitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionID");
                OnCompetitionIDChanged();
            }
        }
        private global::System.Int32 _CompetitionID;
        partial void OnCompetitionIDChanging(global::System.Int32 value);
        partial void OnCompetitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDate
        {
            get
            {
                return _EventDate;
            }
            set
            {
                OnEventDateChanging(value);
                ReportPropertyChanging("EventDate");
                _EventDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDate");
                OnEventDateChanged();
            }
        }
        private global::System.DateTime _EventDate;
        partial void OnEventDateChanging(global::System.DateTime value);
        partial void OnEventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventDescription
        {
            get
            {
                return _EventDescription;
            }
            set
            {
                OnEventDescriptionChanging(value);
                ReportPropertyChanging("EventDescription");
                _EventDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventDescription");
                OnEventDescriptionChanged();
            }
        }
        private global::System.String _EventDescription;
        partial void OnEventDescriptionChanging(global::System.String value);
        partial void OnEventDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTypeID
        {
            get
            {
                return _BenchmarkTypeID;
            }
            set
            {
                OnBenchmarkTypeIDChanging(value);
                ReportPropertyChanging("BenchmarkTypeID");
                _BenchmarkTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenchmarkTypeID");
                OnBenchmarkTypeIDChanged();
            }
        }
        private global::System.Int32 _BenchmarkTypeID;
        partial void OnBenchmarkTypeIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PerfValue
        {
            get
            {
                return _PerfValue;
            }
            set
            {
                OnPerfValueChanging(value);
                ReportPropertyChanging("PerfValue");
                _PerfValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerfValue");
                OnPerfValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _PerfValue;
        partial void OnPerfValueChanging(Nullable<global::System.Decimal> value);
        partial void OnPerfValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> PerfTime
        {
            get
            {
                return _PerfTime;
            }
            set
            {
                OnPerfTimeChanging(value);
                ReportPropertyChanging("PerfTime");
                _PerfTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerfTime");
                OnPerfTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _PerfTime;
        partial void OnPerfTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnPerfTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Result_CompetitionID", "Competition")]
        public Competition Competition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_Result_CompetitionID", "Competition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_Result_CompetitionID", "Competition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competition> CompetitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_Result_CompetitionID", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competition>("OTP.Ring.Data.Model.FK_Result_CompetitionID", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Result_CountryID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Result_CountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Result_CountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Result_CountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OTP.Ring.Data.Model.FK_Result_CountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Result_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Result_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Result_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Result_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Result_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Result_TeamID", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("OTP.Ring.Data.Model.FK_Result_TeamID", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("OTP.Ring.Data.Model.FK_Result_TeamID", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("OTP.Ring.Data.Model.FK_Result_TeamID", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("OTP.Ring.Data.Model.FK_Result_TeamID", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultResource_ResultID", "ResultResource")]
        public EntityCollection<ResultResource> ResultResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultResource>("OTP.Ring.Data.Model.FK_ResultResource_ResultID", "ResultResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultResource>("OTP.Ring.Data.Model.FK_ResultResource_ResultID", "ResultResource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResultPositionMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResultPositionMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResultPositionMapping object.
        /// </summary>
        /// <param name="resultPositionMappingID">Initial value of the ResultPositionMappingID property.</param>
        /// <param name="resultPositionValue">Initial value of the ResultPositionValue property.</param>
        /// <param name="resultPositionDecode">Initial value of the ResultPositionDecode property.</param>
        public static ResultPositionMapping CreateResultPositionMapping(global::System.Int32 resultPositionMappingID, global::System.String resultPositionValue, global::System.Int32 resultPositionDecode)
        {
            ResultPositionMapping resultPositionMapping = new ResultPositionMapping();
            resultPositionMapping.ResultPositionMappingID = resultPositionMappingID;
            resultPositionMapping.ResultPositionValue = resultPositionValue;
            resultPositionMapping.ResultPositionDecode = resultPositionDecode;
            return resultPositionMapping;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultPositionMappingID
        {
            get
            {
                return _ResultPositionMappingID;
            }
            set
            {
                if (_ResultPositionMappingID != value)
                {
                    OnResultPositionMappingIDChanging(value);
                    ReportPropertyChanging("ResultPositionMappingID");
                    _ResultPositionMappingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultPositionMappingID");
                    OnResultPositionMappingIDChanged();
                }
            }
        }
        private global::System.Int32 _ResultPositionMappingID;
        partial void OnResultPositionMappingIDChanging(global::System.Int32 value);
        partial void OnResultPositionMappingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResultPositionValue
        {
            get
            {
                return _ResultPositionValue;
            }
            set
            {
                OnResultPositionValueChanging(value);
                ReportPropertyChanging("ResultPositionValue");
                _ResultPositionValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResultPositionValue");
                OnResultPositionValueChanged();
            }
        }
        private global::System.String _ResultPositionValue;
        partial void OnResultPositionValueChanging(global::System.String value);
        partial void OnResultPositionValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultPositionDecode
        {
            get
            {
                return _ResultPositionDecode;
            }
            set
            {
                OnResultPositionDecodeChanging(value);
                ReportPropertyChanging("ResultPositionDecode");
                _ResultPositionDecode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultPositionDecode");
                OnResultPositionDecodeChanged();
            }
        }
        private global::System.Int32 _ResultPositionDecode;
        partial void OnResultPositionDecodeChanging(global::System.Int32 value);
        partial void OnResultPositionDecodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResultResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResultResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResultResource object.
        /// </summary>
        /// <param name="resultResourceID">Initial value of the ResultResourceID property.</param>
        /// <param name="resultID">Initial value of the ResultID property.</param>
        /// <param name="teamMember">Initial value of the TeamMember property.</param>
        /// <param name="downloadLastName">Initial value of the DownloadLastName property.</param>
        /// <param name="downloadFirstName">Initial value of the DownloadFirstName property.</param>
        public static ResultResource CreateResultResource(global::System.Int32 resultResourceID, global::System.Int32 resultID, global::System.Int32 teamMember, global::System.String downloadLastName, global::System.String downloadFirstName)
        {
            ResultResource resultResource = new ResultResource();
            resultResource.ResultResourceID = resultResourceID;
            resultResource.ResultID = resultID;
            resultResource.TeamMember = teamMember;
            resultResource.DownloadLastName = downloadLastName;
            resultResource.DownloadFirstName = downloadFirstName;
            return resultResource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultResourceID
        {
            get
            {
                return _ResultResourceID;
            }
            set
            {
                if (_ResultResourceID != value)
                {
                    OnResultResourceIDChanging(value);
                    ReportPropertyChanging("ResultResourceID");
                    _ResultResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultResourceID");
                    OnResultResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResultResourceID;
        partial void OnResultResourceIDChanging(global::System.Int32 value);
        partial void OnResultResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultID
        {
            get
            {
                return _ResultID;
            }
            set
            {
                OnResultIDChanging(value);
                ReportPropertyChanging("ResultID");
                _ResultID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultID");
                OnResultIDChanged();
            }
        }
        private global::System.Int32 _ResultID;
        partial void OnResultIDChanging(global::System.Int32 value);
        partial void OnResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamMember
        {
            get
            {
                return _TeamMember;
            }
            set
            {
                OnTeamMemberChanging(value);
                ReportPropertyChanging("TeamMember");
                _TeamMember = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamMember");
                OnTeamMemberChanged();
            }
        }
        private global::System.Int32 _TeamMember;
        partial void OnTeamMemberChanging(global::System.Int32 value);
        partial void OnTeamMemberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportTrackingRef
        {
            get
            {
                return _SportTrackingRef;
            }
            set
            {
                OnSportTrackingRefChanging(value);
                ReportPropertyChanging("SportTrackingRef");
                _SportTrackingRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportTrackingRef");
                OnSportTrackingRefChanged();
            }
        }
        private global::System.String _SportTrackingRef;
        partial void OnSportTrackingRefChanging(global::System.String value);
        partial void OnSportTrackingRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DownloadLastName
        {
            get
            {
                return _DownloadLastName;
            }
            set
            {
                OnDownloadLastNameChanging(value);
                ReportPropertyChanging("DownloadLastName");
                _DownloadLastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DownloadLastName");
                OnDownloadLastNameChanged();
            }
        }
        private global::System.String _DownloadLastName;
        partial void OnDownloadLastNameChanging(global::System.String value);
        partial void OnDownloadLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DownloadFirstName
        {
            get
            {
                return _DownloadFirstName;
            }
            set
            {
                OnDownloadFirstNameChanging(value);
                ReportPropertyChanging("DownloadFirstName");
                _DownloadFirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DownloadFirstName");
                OnDownloadFirstNameChanged();
            }
        }
        private global::System.String _DownloadFirstName;
        partial void OnDownloadFirstNameChanging(global::System.String value);
        partial void OnDownloadFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceID;
        partial void OnResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultResource_ResultID", "Result")]
        public Result Result
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Result>("OTP.Ring.Data.Model.FK_ResultResource_ResultID", "Result").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Result>("OTP.Ring.Data.Model.FK_ResultResource_ResultID", "Result").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Result> ResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Result>("OTP.Ring.Data.Model.FK_ResultResource_ResultID", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Result>("OTP.Ring.Data.Model.FK_ResultResource_ResultID", "Result", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResultStaging")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResultStaging : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResultStaging object.
        /// </summary>
        /// <param name="resultStagingID">Initial value of the ResultStagingID property.</param>
        /// <param name="downloadSourceType">Initial value of the DownloadSourceType property.</param>
        /// <param name="downloadSourceID">Initial value of the DownloadSourceID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="approved">Initial value of the Approved property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="competitionID">Initial value of the CompetitionID property.</param>
        /// <param name="eventDate">Initial value of the EventDate property.</param>
        /// <param name="eventDescription">Initial value of the EventDescription property.</param>
        /// <param name="benchmarkTypeID">Initial value of the BenchmarkTypeID property.</param>
        /// <param name="sourceRow">Initial value of the SourceRow property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static ResultStaging CreateResultStaging(global::System.Int32 resultStagingID, global::System.String downloadSourceType, global::System.Int32 downloadSourceID, global::System.String status, global::System.Boolean approved, global::System.String sportID, global::System.Int32 competitionID, global::System.DateTime eventDate, global::System.String eventDescription, global::System.Int32 benchmarkTypeID, global::System.Int32 sourceRow, global::System.String countryID, global::System.Int32 position)
        {
            ResultStaging resultStaging = new ResultStaging();
            resultStaging.ResultStagingID = resultStagingID;
            resultStaging.DownloadSourceType = downloadSourceType;
            resultStaging.DownloadSourceID = downloadSourceID;
            resultStaging.Status = status;
            resultStaging.Approved = approved;
            resultStaging.SportID = sportID;
            resultStaging.CompetitionID = competitionID;
            resultStaging.EventDate = eventDate;
            resultStaging.EventDescription = eventDescription;
            resultStaging.BenchmarkTypeID = benchmarkTypeID;
            resultStaging.SourceRow = sourceRow;
            resultStaging.CountryID = countryID;
            resultStaging.Position = position;
            return resultStaging;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultStagingID
        {
            get
            {
                return _ResultStagingID;
            }
            set
            {
                if (_ResultStagingID != value)
                {
                    OnResultStagingIDChanging(value);
                    ReportPropertyChanging("ResultStagingID");
                    _ResultStagingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultStagingID");
                    OnResultStagingIDChanged();
                }
            }
        }
        private global::System.Int32 _ResultStagingID;
        partial void OnResultStagingIDChanging(global::System.Int32 value);
        partial void OnResultStagingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DownloadSourceType
        {
            get
            {
                return _DownloadSourceType;
            }
            set
            {
                OnDownloadSourceTypeChanging(value);
                ReportPropertyChanging("DownloadSourceType");
                _DownloadSourceType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DownloadSourceType");
                OnDownloadSourceTypeChanged();
            }
        }
        private global::System.String _DownloadSourceType;
        partial void OnDownloadSourceTypeChanging(global::System.String value);
        partial void OnDownloadSourceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DownloadTemplateID
        {
            get
            {
                return _DownloadTemplateID;
            }
            set
            {
                OnDownloadTemplateIDChanging(value);
                ReportPropertyChanging("DownloadTemplateID");
                _DownloadTemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownloadTemplateID");
                OnDownloadTemplateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DownloadTemplateID;
        partial void OnDownloadTemplateIDChanging(Nullable<global::System.Int32> value);
        partial void OnDownloadTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownloadSourceID
        {
            get
            {
                return _DownloadSourceID;
            }
            set
            {
                OnDownloadSourceIDChanging(value);
                ReportPropertyChanging("DownloadSourceID");
                _DownloadSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownloadSourceID");
                OnDownloadSourceIDChanged();
            }
        }
        private global::System.Int32 _DownloadSourceID;
        partial void OnDownloadSourceIDChanging(global::System.Int32 value);
        partial void OnDownloadSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private global::System.Boolean _Approved;
        partial void OnApprovedChanging(global::System.Boolean value);
        partial void OnApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionID
        {
            get
            {
                return _CompetitionID;
            }
            set
            {
                OnCompetitionIDChanging(value);
                ReportPropertyChanging("CompetitionID");
                _CompetitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionID");
                OnCompetitionIDChanged();
            }
        }
        private global::System.Int32 _CompetitionID;
        partial void OnCompetitionIDChanging(global::System.Int32 value);
        partial void OnCompetitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDate
        {
            get
            {
                return _EventDate;
            }
            set
            {
                OnEventDateChanging(value);
                ReportPropertyChanging("EventDate");
                _EventDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDate");
                OnEventDateChanged();
            }
        }
        private global::System.DateTime _EventDate;
        partial void OnEventDateChanging(global::System.DateTime value);
        partial void OnEventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventDescription
        {
            get
            {
                return _EventDescription;
            }
            set
            {
                OnEventDescriptionChanging(value);
                ReportPropertyChanging("EventDescription");
                _EventDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventDescription");
                OnEventDescriptionChanged();
            }
        }
        private global::System.String _EventDescription;
        partial void OnEventDescriptionChanging(global::System.String value);
        partial void OnEventDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTypeID
        {
            get
            {
                return _BenchmarkTypeID;
            }
            set
            {
                OnBenchmarkTypeIDChanging(value);
                ReportPropertyChanging("BenchmarkTypeID");
                _BenchmarkTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenchmarkTypeID");
                OnBenchmarkTypeIDChanged();
            }
        }
        private global::System.Int32 _BenchmarkTypeID;
        partial void OnBenchmarkTypeIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceRow
        {
            get
            {
                return _SourceRow;
            }
            set
            {
                OnSourceRowChanging(value);
                ReportPropertyChanging("SourceRow");
                _SourceRow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceRow");
                OnSourceRowChanged();
            }
        }
        private global::System.Int32 _SourceRow;
        partial void OnSourceRowChanging(global::System.Int32 value);
        partial void OnSourceRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TeamID;
        partial void OnTeamIDChanging(Nullable<global::System.Int32> value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PerfValue
        {
            get
            {
                return _PerfValue;
            }
            set
            {
                OnPerfValueChanging(value);
                ReportPropertyChanging("PerfValue");
                _PerfValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerfValue");
                OnPerfValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _PerfValue;
        partial void OnPerfValueChanging(Nullable<global::System.Decimal> value);
        partial void OnPerfValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> PerfTime
        {
            get
            {
                return _PerfTime;
            }
            set
            {
                OnPerfTimeChanging(value);
                ReportPropertyChanging("PerfTime");
                _PerfTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerfTime");
                OnPerfTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _PerfTime;
        partial void OnPerfTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnPerfTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_BenchmarkTypeID", "BenchmarkType")]
        public BenchmarkType BenchmarkType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_ResultStaging_BenchmarkTypeID", "BenchmarkType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_ResultStaging_BenchmarkTypeID", "BenchmarkType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenchmarkType> BenchmarkTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_ResultStaging_BenchmarkTypeID", "BenchmarkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenchmarkType>("OTP.Ring.Data.Model.FK_ResultStaging_BenchmarkTypeID", "BenchmarkType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_CompetitionID", "Competition")]
        public Competition Competition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_ResultStaging_CompetitionID", "Competition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_ResultStaging_CompetitionID", "Competition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competition> CompetitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("OTP.Ring.Data.Model.FK_ResultStaging_CompetitionID", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competition>("OTP.Ring.Data.Model.FK_ResultStaging_CompetitionID", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_CountryID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_ResultStaging_CountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_ResultStaging_CountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_ResultStaging_CountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OTP.Ring.Data.Model.FK_ResultStaging_CountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_DownloadTemplateID", "DownloadTemplate")]
        public DownloadTemplate DownloadTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_ResultStaging_DownloadTemplateID", "DownloadTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_ResultStaging_DownloadTemplateID", "DownloadTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DownloadTemplate> DownloadTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_ResultStaging_DownloadTemplateID", "DownloadTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DownloadTemplate>("OTP.Ring.Data.Model.FK_ResultStaging_DownloadTemplateID", "DownloadTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ResultStaging_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ResultStaging_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ResultStaging_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_ResultStaging_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStagingResource_ResultStagingID", "ResultStagingResource")]
        public EntityCollection<ResultStagingResource> ResultStagingResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultStagingResource>("OTP.Ring.Data.Model.FK_ResultStagingResource_ResultStagingID", "ResultStagingResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultStagingResource>("OTP.Ring.Data.Model.FK_ResultStagingResource_ResultStagingID", "ResultStagingResource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="ResultStagingResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResultStagingResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResultStagingResource object.
        /// </summary>
        /// <param name="resultStagingResourceID">Initial value of the ResultStagingResourceID property.</param>
        /// <param name="resultStagingID">Initial value of the ResultStagingID property.</param>
        /// <param name="sourceRow">Initial value of the SourceRow property.</param>
        /// <param name="teamMember">Initial value of the TeamMember property.</param>
        /// <param name="downloadLastName">Initial value of the DownloadLastName property.</param>
        /// <param name="downloadFirstName">Initial value of the DownloadFirstName property.</param>
        public static ResultStagingResource CreateResultStagingResource(global::System.Int32 resultStagingResourceID, global::System.Int32 resultStagingID, global::System.Int32 sourceRow, global::System.Int32 teamMember, global::System.String downloadLastName, global::System.String downloadFirstName)
        {
            ResultStagingResource resultStagingResource = new ResultStagingResource();
            resultStagingResource.ResultStagingResourceID = resultStagingResourceID;
            resultStagingResource.ResultStagingID = resultStagingID;
            resultStagingResource.SourceRow = sourceRow;
            resultStagingResource.TeamMember = teamMember;
            resultStagingResource.DownloadLastName = downloadLastName;
            resultStagingResource.DownloadFirstName = downloadFirstName;
            return resultStagingResource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultStagingResourceID
        {
            get
            {
                return _ResultStagingResourceID;
            }
            set
            {
                if (_ResultStagingResourceID != value)
                {
                    OnResultStagingResourceIDChanging(value);
                    ReportPropertyChanging("ResultStagingResourceID");
                    _ResultStagingResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultStagingResourceID");
                    OnResultStagingResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResultStagingResourceID;
        partial void OnResultStagingResourceIDChanging(global::System.Int32 value);
        partial void OnResultStagingResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultStagingID
        {
            get
            {
                return _ResultStagingID;
            }
            set
            {
                OnResultStagingIDChanging(value);
                ReportPropertyChanging("ResultStagingID");
                _ResultStagingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultStagingID");
                OnResultStagingIDChanged();
            }
        }
        private global::System.Int32 _ResultStagingID;
        partial void OnResultStagingIDChanging(global::System.Int32 value);
        partial void OnResultStagingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceRow
        {
            get
            {
                return _SourceRow;
            }
            set
            {
                OnSourceRowChanging(value);
                ReportPropertyChanging("SourceRow");
                _SourceRow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceRow");
                OnSourceRowChanged();
            }
        }
        private global::System.Int32 _SourceRow;
        partial void OnSourceRowChanging(global::System.Int32 value);
        partial void OnSourceRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamMember
        {
            get
            {
                return _TeamMember;
            }
            set
            {
                OnTeamMemberChanging(value);
                ReportPropertyChanging("TeamMember");
                _TeamMember = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamMember");
                OnTeamMemberChanged();
            }
        }
        private global::System.Int32 _TeamMember;
        partial void OnTeamMemberChanging(global::System.Int32 value);
        partial void OnTeamMemberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportTrackingRef
        {
            get
            {
                return _SportTrackingRef;
            }
            set
            {
                OnSportTrackingRefChanging(value);
                ReportPropertyChanging("SportTrackingRef");
                _SportTrackingRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportTrackingRef");
                OnSportTrackingRefChanged();
            }
        }
        private global::System.String _SportTrackingRef;
        partial void OnSportTrackingRefChanging(global::System.String value);
        partial void OnSportTrackingRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DownloadLastName
        {
            get
            {
                return _DownloadLastName;
            }
            set
            {
                OnDownloadLastNameChanging(value);
                ReportPropertyChanging("DownloadLastName");
                _DownloadLastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DownloadLastName");
                OnDownloadLastNameChanged();
            }
        }
        private global::System.String _DownloadLastName;
        partial void OnDownloadLastNameChanging(global::System.String value);
        partial void OnDownloadLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DownloadFirstName
        {
            get
            {
                return _DownloadFirstName;
            }
            set
            {
                OnDownloadFirstNameChanging(value);
                ReportPropertyChanging("DownloadFirstName");
                _DownloadFirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DownloadFirstName");
                OnDownloadFirstNameChanged();
            }
        }
        private global::System.String _DownloadFirstName;
        partial void OnDownloadFirstNameChanging(global::System.String value);
        partial void OnDownloadFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceID;
        partial void OnResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStagingResource_ResultStagingID", "ResultStaging")]
        public ResultStaging ResultStaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStagingResource_ResultStagingID", "ResultStaging").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStagingResource_ResultStagingID", "ResultStaging").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResultStaging> ResultStagingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStagingResource_ResultStagingID", "ResultStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStagingResource_ResultStagingID", "ResultStaging", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="SecurityGroupPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityGroupPage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityGroupPage object.
        /// </summary>
        /// <param name="securityGroupPageID">Initial value of the SecurityGroupPageID property.</param>
        /// <param name="securityGroupProfileID">Initial value of the SecurityGroupProfileID property.</param>
        /// <param name="securityPageID">Initial value of the SecurityPageID property.</param>
        /// <param name="readAccess">Initial value of the ReadAccess property.</param>
        /// <param name="writeAccess">Initial value of the WriteAccess property.</param>
        /// <param name="recursive">Initial value of the Recursive property.</param>
        public static SecurityGroupPage CreateSecurityGroupPage(global::System.Int32 securityGroupPageID, global::System.String securityGroupProfileID, global::System.String securityPageID, global::System.Int32 readAccess, global::System.Int32 writeAccess, global::System.Boolean recursive)
        {
            SecurityGroupPage securityGroupPage = new SecurityGroupPage();
            securityGroupPage.SecurityGroupPageID = securityGroupPageID;
            securityGroupPage.SecurityGroupProfileID = securityGroupProfileID;
            securityGroupPage.SecurityPageID = securityPageID;
            securityGroupPage.ReadAccess = readAccess;
            securityGroupPage.WriteAccess = writeAccess;
            securityGroupPage.Recursive = recursive;
            return securityGroupPage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityGroupPageID
        {
            get
            {
                return _SecurityGroupPageID;
            }
            set
            {
                if (_SecurityGroupPageID != value)
                {
                    OnSecurityGroupPageIDChanging(value);
                    ReportPropertyChanging("SecurityGroupPageID");
                    _SecurityGroupPageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecurityGroupPageID");
                    OnSecurityGroupPageIDChanged();
                }
            }
        }
        private global::System.Int32 _SecurityGroupPageID;
        partial void OnSecurityGroupPageIDChanging(global::System.Int32 value);
        partial void OnSecurityGroupPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityGroupProfileID
        {
            get
            {
                return _SecurityGroupProfileID;
            }
            set
            {
                OnSecurityGroupProfileIDChanging(value);
                ReportPropertyChanging("SecurityGroupProfileID");
                _SecurityGroupProfileID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityGroupProfileID");
                OnSecurityGroupProfileIDChanged();
            }
        }
        private global::System.String _SecurityGroupProfileID;
        partial void OnSecurityGroupProfileIDChanging(global::System.String value);
        partial void OnSecurityGroupProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityPageID
        {
            get
            {
                return _SecurityPageID;
            }
            set
            {
                OnSecurityPageIDChanging(value);
                ReportPropertyChanging("SecurityPageID");
                _SecurityPageID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityPageID");
                OnSecurityPageIDChanged();
            }
        }
        private global::System.String _SecurityPageID;
        partial void OnSecurityPageIDChanging(global::System.String value);
        partial void OnSecurityPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReadAccess
        {
            get
            {
                return _ReadAccess;
            }
            set
            {
                OnReadAccessChanging(value);
                ReportPropertyChanging("ReadAccess");
                _ReadAccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReadAccess");
                OnReadAccessChanged();
            }
        }
        private global::System.Int32 _ReadAccess;
        partial void OnReadAccessChanging(global::System.Int32 value);
        partial void OnReadAccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WriteAccess
        {
            get
            {
                return _WriteAccess;
            }
            set
            {
                OnWriteAccessChanging(value);
                ReportPropertyChanging("WriteAccess");
                _WriteAccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WriteAccess");
                OnWriteAccessChanged();
            }
        }
        private global::System.Int32 _WriteAccess;
        partial void OnWriteAccessChanging(global::System.Int32 value);
        partial void OnWriteAccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Recursive
        {
            get
            {
                return _Recursive;
            }
            set
            {
                OnRecursiveChanging(value);
                ReportPropertyChanging("Recursive");
                _Recursive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recursive");
                OnRecursiveChanged();
            }
        }
        private global::System.Boolean _Recursive;
        partial void OnRecursiveChanging(global::System.Boolean value);
        partial void OnRecursiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityGroupPage_SecurityGroupProfileID", "SecurityGroupProfile")]
        public SecurityGroupProfile SecurityGroupProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityGroupProfileID", "SecurityGroupProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityGroupProfileID", "SecurityGroupProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityGroupProfile> SecurityGroupProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityGroupProfileID", "SecurityGroupProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityGroupProfileID", "SecurityGroupProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityGroupPage_SecurityPageID", "SecurityPage")]
        public SecurityPage SecurityPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityPageID", "SecurityPage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityPageID", "SecurityPage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityPage> SecurityPageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityPageID", "SecurityPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityPageID", "SecurityPage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="SecurityGroupProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityGroupProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityGroupProfile object.
        /// </summary>
        /// <param name="securityGroupProfileID">Initial value of the SecurityGroupProfileID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="public">Initial value of the Public property.</param>
        /// <param name="external">Initial value of the External property.</param>
        /// <param name="securityPageIDHome">Initial value of the SecurityPageIDHome property.</param>
        public static SecurityGroupProfile CreateSecurityGroupProfile(global::System.String securityGroupProfileID, global::System.String name, global::System.Boolean @public, global::System.Boolean external, global::System.String securityPageIDHome)
        {
            SecurityGroupProfile securityGroupProfile = new SecurityGroupProfile();
            securityGroupProfile.SecurityGroupProfileID = securityGroupProfileID;
            securityGroupProfile.Name = name;
            securityGroupProfile.Public = @public;
            securityGroupProfile.External = external;
            securityGroupProfile.SecurityPageIDHome = securityPageIDHome;
            return securityGroupProfile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityGroupProfileID
        {
            get
            {
                return _SecurityGroupProfileID;
            }
            set
            {
                if (_SecurityGroupProfileID != value)
                {
                    OnSecurityGroupProfileIDChanging(value);
                    ReportPropertyChanging("SecurityGroupProfileID");
                    _SecurityGroupProfileID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SecurityGroupProfileID");
                    OnSecurityGroupProfileIDChanged();
                }
            }
        }
        private global::System.String _SecurityGroupProfileID;
        partial void OnSecurityGroupProfileIDChanging(global::System.String value);
        partial void OnSecurityGroupProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Public
        {
            get
            {
                return _Public;
            }
            set
            {
                OnPublicChanging(value);
                ReportPropertyChanging("Public");
                _Public = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Public");
                OnPublicChanged();
            }
        }
        private global::System.Boolean _Public;
        partial void OnPublicChanging(global::System.Boolean value);
        partial void OnPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean External
        {
            get
            {
                return _External;
            }
            set
            {
                OnExternalChanging(value);
                ReportPropertyChanging("External");
                _External = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("External");
                OnExternalChanged();
            }
        }
        private global::System.Boolean _External;
        partial void OnExternalChanging(global::System.Boolean value);
        partial void OnExternalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityPageIDHome
        {
            get
            {
                return _SecurityPageIDHome;
            }
            set
            {
                OnSecurityPageIDHomeChanging(value);
                ReportPropertyChanging("SecurityPageIDHome");
                _SecurityPageIDHome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityPageIDHome");
                OnSecurityPageIDHomeChanged();
            }
        }
        private global::System.String _SecurityPageIDHome;
        partial void OnSecurityPageIDHomeChanging(global::System.String value);
        partial void OnSecurityPageIDHomeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ReportSecurityGroupProfile_SecurityGroupProfileID", "ReportSecurityGroupProfile")]
        public EntityCollection<ReportSecurityGroupProfile> ReportSecurityGroupProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportSecurityGroupProfile>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_SecurityGroupProfileID", "ReportSecurityGroupProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportSecurityGroupProfile>("OTP.Ring.Data.Model.FK_ReportSecurityGroupProfile_SecurityGroupProfileID", "ReportSecurityGroupProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityGroupPage_SecurityGroupProfileID", "SecurityGroupPage")]
        public EntityCollection<SecurityGroupPage> SecurityGroupPages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityGroupPage>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityGroupProfileID", "SecurityGroupPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityGroupPage>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityGroupProfileID", "SecurityGroupPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityGroupProfile_SecurityPageIDHome", "SecurityPage")]
        public SecurityPage SecurityPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityGroupProfile_SecurityPageIDHome", "SecurityPage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityGroupProfile_SecurityPageIDHome", "SecurityPage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityPage> SecurityPageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityGroupProfile_SecurityPageIDHome", "SecurityPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityGroupProfile_SecurityPageIDHome", "SecurityPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityUserProfile_SecurityGroupProfileID", "SecurityUserProfile")]
        public EntityCollection<SecurityUserProfile> SecurityUserProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityUserProfile>("OTP.Ring.Data.Model.FK_SecurityUserProfile_SecurityGroupProfileID", "SecurityUserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityUserProfile>("OTP.Ring.Data.Model.FK_SecurityUserProfile_SecurityGroupProfileID", "SecurityUserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="SecurityPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityPage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityPage object.
        /// </summary>
        /// <param name="securityPageID">Initial value of the SecurityPageID property.</param>
        /// <param name="order">Initial value of the Order property.</param>
        /// <param name="stylingCode">Initial value of the StylingCode property.</param>
        /// <param name="visible">Initial value of the Visible property.</param>
        public static SecurityPage CreateSecurityPage(global::System.String securityPageID, global::System.String order, global::System.Int32 stylingCode, global::System.Boolean visible)
        {
            SecurityPage securityPage = new SecurityPage();
            securityPage.SecurityPageID = securityPageID;
            securityPage.Order = order;
            securityPage.StylingCode = stylingCode;
            securityPage.Visible = visible;
            return securityPage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityPageID
        {
            get
            {
                return _SecurityPageID;
            }
            set
            {
                if (_SecurityPageID != value)
                {
                    OnSecurityPageIDChanging(value);
                    ReportPropertyChanging("SecurityPageID");
                    _SecurityPageID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SecurityPageID");
                    OnSecurityPageIDChanged();
                }
            }
        }
        private global::System.String _SecurityPageID;
        partial void OnSecurityPageIDChanging(global::System.String value);
        partial void OnSecurityPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentSecurityPageID
        {
            get
            {
                return _ParentSecurityPageID;
            }
            set
            {
                OnParentSecurityPageIDChanging(value);
                ReportPropertyChanging("ParentSecurityPageID");
                _ParentSecurityPageID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentSecurityPageID");
                OnParentSecurityPageIDChanged();
            }
        }
        private global::System.String _ParentSecurityPageID;
        partial void OnParentSecurityPageIDChanging(global::System.String value);
        partial void OnParentSecurityPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private global::System.String _Order;
        partial void OnOrderChanging(global::System.String value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IconURL
        {
            get
            {
                return _IconURL;
            }
            set
            {
                OnIconURLChanging(value);
                ReportPropertyChanging("IconURL");
                _IconURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IconURL");
                OnIconURLChanged();
            }
        }
        private global::System.String _IconURL;
        partial void OnIconURLChanging(global::System.String value);
        partial void OnIconURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StylingCode
        {
            get
            {
                return _StylingCode;
            }
            set
            {
                OnStylingCodeChanging(value);
                ReportPropertyChanging("StylingCode");
                _StylingCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StylingCode");
                OnStylingCodeChanged();
            }
        }
        private global::System.Int32 _StylingCode;
        partial void OnStylingCodeChanging(global::System.Int32 value);
        partial void OnStylingCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SportFilterCode
        {
            get
            {
                return _SportFilterCode;
            }
            set
            {
                OnSportFilterCodeChanging(value);
                ReportPropertyChanging("SportFilterCode");
                _SportFilterCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportFilterCode");
                OnSportFilterCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _SportFilterCode;
        partial void OnSportFilterCodeChanging(Nullable<global::System.Int32> value);
        partial void OnSportFilterCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NodeLeafCode
        {
            get
            {
                return _NodeLeafCode;
            }
            set
            {
                OnNodeLeafCodeChanging(value);
                ReportPropertyChanging("NodeLeafCode");
                _NodeLeafCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeLeafCode");
                OnNodeLeafCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _NodeLeafCode;
        partial void OnNodeLeafCodeChanging(Nullable<global::System.Int32> value);
        partial void OnNodeLeafCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description_EN
        {
            get
            {
                return _Description_EN;
            }
            set
            {
                OnDescription_ENChanging(value);
                ReportPropertyChanging("Description_EN");
                _Description_EN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description_EN");
                OnDescription_ENChanged();
            }
        }
        private global::System.String _Description_EN;
        partial void OnDescription_ENChanging(global::System.String value);
        partial void OnDescription_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description_FR
        {
            get
            {
                return _Description_FR;
            }
            set
            {
                OnDescription_FRChanging(value);
                ReportPropertyChanging("Description_FR");
                _Description_FR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description_FR");
                OnDescription_FRChanged();
            }
        }
        private global::System.String _Description_FR;
        partial void OnDescription_FRChanging(global::System.String value);
        partial void OnDescription_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Visible
        {
            get
            {
                return _Visible;
            }
            set
            {
                OnVisibleChanging(value);
                ReportPropertyChanging("Visible");
                _Visible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visible");
                OnVisibleChanged();
            }
        }
        private global::System.Boolean _Visible;
        partial void OnVisibleChanging(global::System.Boolean value);
        partial void OnVisibleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityGroupPage_SecurityPageID", "SecurityGroupPage")]
        public EntityCollection<SecurityGroupPage> SecurityGroupPages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityGroupPage>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityPageID", "SecurityGroupPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityGroupPage>("OTP.Ring.Data.Model.FK_SecurityGroupPage_SecurityPageID", "SecurityGroupPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityGroupProfile_SecurityPageIDHome", "SecurityGroupProfile")]
        public EntityCollection<SecurityGroupProfile> SecurityGroupProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_SecurityGroupProfile_SecurityPageIDHome", "SecurityGroupProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_SecurityGroupProfile_SecurityPageIDHome", "SecurityGroupProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityPage_ParentSecurityPageID", "SecurityPage1")]
        public EntityCollection<SecurityPage> ChildSecurityPages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityPage_ParentSecurityPageID", "SecurityPage1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityPage_ParentSecurityPageID", "SecurityPage1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityPage_ParentSecurityPageID", "SecurityPage")]
        public SecurityPage ParentSecurityPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityPage_ParentSecurityPageID", "SecurityPage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityPage_ParentSecurityPageID", "SecurityPage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityPage> ParentSecurityPageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityPage_ParentSecurityPageID", "SecurityPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityPage>("OTP.Ring.Data.Model.FK_SecurityPage_ParentSecurityPageID", "SecurityPage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="SecurityUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityUser object.
        /// </summary>
        /// <param name="securityUserID">Initial value of the SecurityUserID property.</param>
        /// <param name="securityUserProfileID">Initial value of the SecurityUserProfileID property.</param>
        /// <param name="liveID">Initial value of the LiveID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static SecurityUser CreateSecurityUser(global::System.Int32 securityUserID, global::System.String securityUserProfileID, global::System.String liveID, global::System.String firstName, global::System.String lastName, global::System.Boolean active)
        {
            SecurityUser securityUser = new SecurityUser();
            securityUser.SecurityUserID = securityUserID;
            securityUser.SecurityUserProfileID = securityUserProfileID;
            securityUser.LiveID = liveID;
            securityUser.FirstName = firstName;
            securityUser.LastName = lastName;
            securityUser.Active = active;
            return securityUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityUserID
        {
            get
            {
                return _SecurityUserID;
            }
            set
            {
                if (_SecurityUserID != value)
                {
                    OnSecurityUserIDChanging(value);
                    ReportPropertyChanging("SecurityUserID");
                    _SecurityUserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecurityUserID");
                    OnSecurityUserIDChanged();
                }
            }
        }
        private global::System.Int32 _SecurityUserID;
        partial void OnSecurityUserIDChanging(global::System.Int32 value);
        partial void OnSecurityUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityUserProfileID
        {
            get
            {
                return _SecurityUserProfileID;
            }
            set
            {
                OnSecurityUserProfileIDChanging(value);
                ReportPropertyChanging("SecurityUserProfileID");
                _SecurityUserProfileID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityUserProfileID");
                OnSecurityUserProfileIDChanged();
            }
        }
        private global::System.String _SecurityUserProfileID;
        partial void OnSecurityUserProfileIDChanging(global::System.String value);
        partial void OnSecurityUserProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LiveID
        {
            get
            {
                return _LiveID;
            }
            set
            {
                OnLiveIDChanging(value);
                ReportPropertyChanging("LiveID");
                _LiveID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LiveID");
                OnLiveIDChanged();
            }
        }
        private global::System.String _LiveID;
        partial void OnLiveIDChanging(global::System.String value);
        partial void OnLiveIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityUser_SecurityUserProfileID", "SecurityUserProfile")]
        public SecurityUserProfile SecurityUserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityUserProfile>("OTP.Ring.Data.Model.FK_SecurityUser_SecurityUserProfileID", "SecurityUserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityUserProfile>("OTP.Ring.Data.Model.FK_SecurityUser_SecurityUserProfileID", "SecurityUserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityUserProfile> SecurityUserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityUserProfile>("OTP.Ring.Data.Model.FK_SecurityUser_SecurityUserProfileID", "SecurityUserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityUserProfile>("OTP.Ring.Data.Model.FK_SecurityUser_SecurityUserProfileID", "SecurityUserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="SecurityUserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityUserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityUserProfile object.
        /// </summary>
        /// <param name="securityUserProfileID">Initial value of the SecurityUserProfileID property.</param>
        /// <param name="securityGroupProfileID">Initial value of the SecurityGroupProfileID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SecurityUserProfile CreateSecurityUserProfile(global::System.String securityUserProfileID, global::System.String securityGroupProfileID, global::System.String name)
        {
            SecurityUserProfile securityUserProfile = new SecurityUserProfile();
            securityUserProfile.SecurityUserProfileID = securityUserProfileID;
            securityUserProfile.SecurityGroupProfileID = securityGroupProfileID;
            securityUserProfile.Name = name;
            return securityUserProfile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityUserProfileID
        {
            get
            {
                return _SecurityUserProfileID;
            }
            set
            {
                if (_SecurityUserProfileID != value)
                {
                    OnSecurityUserProfileIDChanging(value);
                    ReportPropertyChanging("SecurityUserProfileID");
                    _SecurityUserProfileID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SecurityUserProfileID");
                    OnSecurityUserProfileIDChanged();
                }
            }
        }
        private global::System.String _SecurityUserProfileID;
        partial void OnSecurityUserProfileIDChanging(global::System.String value);
        partial void OnSecurityUserProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityGroupProfileID
        {
            get
            {
                return _SecurityGroupProfileID;
            }
            set
            {
                OnSecurityGroupProfileIDChanging(value);
                ReportPropertyChanging("SecurityGroupProfileID");
                _SecurityGroupProfileID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityGroupProfileID");
                OnSecurityGroupProfileIDChanged();
            }
        }
        private global::System.String _SecurityGroupProfileID;
        partial void OnSecurityGroupProfileIDChanging(global::System.String value);
        partial void OnSecurityGroupProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityUserProfile_SecurityGroupProfileID", "SecurityGroupProfile")]
        public SecurityGroupProfile SecurityGroupProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_SecurityUserProfile_SecurityGroupProfileID", "SecurityGroupProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_SecurityUserProfile_SecurityGroupProfileID", "SecurityGroupProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityGroupProfile> SecurityGroupProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_SecurityUserProfile_SecurityGroupProfileID", "SecurityGroupProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityGroupProfile>("OTP.Ring.Data.Model.FK_SecurityUserProfile_SecurityGroupProfileID", "SecurityGroupProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityUser_SecurityUserProfileID", "SecurityUser")]
        public EntityCollection<SecurityUser> SecurityUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityUser>("OTP.Ring.Data.Model.FK_SecurityUser_SecurityUserProfileID", "SecurityUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityUser>("OTP.Ring.Data.Model.FK_SecurityUser_SecurityUserProfileID", "SecurityUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityUserSport_SecurityUserProfileID", "SecurityUserSport")]
        public EntityCollection<SecurityUserSport> SecurityUserSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityUserSport>("OTP.Ring.Data.Model.FK_SecurityUserSport_SecurityUserProfileID", "SecurityUserSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityUserSport>("OTP.Ring.Data.Model.FK_SecurityUserSport_SecurityUserProfileID", "SecurityUserSport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="SecurityUserSport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityUserSport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityUserSport object.
        /// </summary>
        /// <param name="securityUserSportID">Initial value of the SecurityUserSportID property.</param>
        /// <param name="securityUserProfileID">Initial value of the SecurityUserProfileID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        public static SecurityUserSport CreateSecurityUserSport(global::System.Int32 securityUserSportID, global::System.String securityUserProfileID, global::System.String sportID)
        {
            SecurityUserSport securityUserSport = new SecurityUserSport();
            securityUserSport.SecurityUserSportID = securityUserSportID;
            securityUserSport.SecurityUserProfileID = securityUserProfileID;
            securityUserSport.SportID = sportID;
            return securityUserSport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityUserSportID
        {
            get
            {
                return _SecurityUserSportID;
            }
            set
            {
                if (_SecurityUserSportID != value)
                {
                    OnSecurityUserSportIDChanging(value);
                    ReportPropertyChanging("SecurityUserSportID");
                    _SecurityUserSportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecurityUserSportID");
                    OnSecurityUserSportIDChanged();
                }
            }
        }
        private global::System.Int32 _SecurityUserSportID;
        partial void OnSecurityUserSportIDChanging(global::System.Int32 value);
        partial void OnSecurityUserSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityUserProfileID
        {
            get
            {
                return _SecurityUserProfileID;
            }
            set
            {
                OnSecurityUserProfileIDChanging(value);
                ReportPropertyChanging("SecurityUserProfileID");
                _SecurityUserProfileID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityUserProfileID");
                OnSecurityUserProfileIDChanged();
            }
        }
        private global::System.String _SecurityUserProfileID;
        partial void OnSecurityUserProfileIDChanging(global::System.String value);
        partial void OnSecurityUserProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityUserSport_SecurityUserProfileID", "SecurityUserProfile")]
        public SecurityUserProfile SecurityUserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityUserProfile>("OTP.Ring.Data.Model.FK_SecurityUserSport_SecurityUserProfileID", "SecurityUserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityUserProfile>("OTP.Ring.Data.Model.FK_SecurityUserSport_SecurityUserProfileID", "SecurityUserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityUserProfile> SecurityUserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityUserProfile>("OTP.Ring.Data.Model.FK_SecurityUserSport_SecurityUserProfileID", "SecurityUserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityUserProfile>("OTP.Ring.Data.Model.FK_SecurityUserSport_SecurityUserProfileID", "SecurityUserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityUserSport_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_SecurityUserSport_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_SecurityUserSport_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_SecurityUserSport_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_SecurityUserSport_SportID", "Sport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Sport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sport object.
        /// </summary>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="sportLevelID">Initial value of the SportLevelID property.</param>
        /// <param name="sportCode">Initial value of the SportCode property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="parentSportID">Initial value of the ParentSportID property.</param>
        /// <param name="benchmark">Initial value of the Benchmark property.</param>
        /// <param name="stylingCode">Initial value of the StylingCode property.</param>
        /// <param name="active">Initial value of the active property.</param>
        /// <param name="uniqueKey">Initial value of the UniqueKey property.</param>
        public static Sport CreateSport(global::System.String sportID, global::System.Int32 sportLevelID, global::System.String sportCode, global::System.String name_EN, global::System.String name_FR, global::System.String parentSportID, global::System.Boolean benchmark, global::System.Int32 stylingCode, global::System.Boolean active, global::System.Int32 uniqueKey)
        {
            Sport sport = new Sport();
            sport.SportID = sportID;
            sport.SportLevelID = sportLevelID;
            sport.SportCode = sportCode;
            sport.Name_EN = name_EN;
            sport.Name_FR = name_FR;
            sport.ParentSportID = parentSportID;
            sport.Benchmark = benchmark;
            sport.StylingCode = stylingCode;
            sport.active = active;
            sport.UniqueKey = uniqueKey;
            return sport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                if (_SportID != value)
                {
                    OnSportIDChanging(value);
                    ReportPropertyChanging("SportID");
                    _SportID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SportID");
                    OnSportIDChanged();
                }
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportLevelID
        {
            get
            {
                return _SportLevelID;
            }
            set
            {
                OnSportLevelIDChanging(value);
                ReportPropertyChanging("SportLevelID");
                _SportLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportLevelID");
                OnSportLevelIDChanged();
            }
        }
        private global::System.Int32 _SportLevelID;
        partial void OnSportLevelIDChanging(global::System.Int32 value);
        partial void OnSportLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportCode
        {
            get
            {
                return _SportCode;
            }
            set
            {
                OnSportCodeChanging(value);
                ReportPropertyChanging("SportCode");
                _SportCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportCode");
                OnSportCodeChanged();
            }
        }
        private global::System.String _SportCode;
        partial void OnSportCodeChanging(global::System.String value);
        partial void OnSportCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParentSportID
        {
            get
            {
                return _ParentSportID;
            }
            set
            {
                OnParentSportIDChanging(value);
                ReportPropertyChanging("ParentSportID");
                _ParentSportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParentSportID");
                OnParentSportIDChanged();
            }
        }
        private global::System.String _ParentSportID;
        partial void OnParentSportIDChanging(global::System.String value);
        partial void OnParentSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.String _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.String value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HPAID
        {
            get
            {
                return _HPAID;
            }
            set
            {
                OnHPAIDChanging(value);
                ReportPropertyChanging("HPAID");
                _HPAID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HPAID");
                OnHPAIDChanged();
            }
        }
        private global::System.String _HPAID;
        partial void OnHPAIDChanging(global::System.String value);
        partial void OnHPAIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Benchmark
        {
            get
            {
                return _Benchmark;
            }
            set
            {
                OnBenchmarkChanging(value);
                ReportPropertyChanging("Benchmark");
                _Benchmark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Benchmark");
                OnBenchmarkChanged();
            }
        }
        private global::System.Boolean _Benchmark;
        partial void OnBenchmarkChanging(global::System.Boolean value);
        partial void OnBenchmarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MedalEvent
        {
            get
            {
                return _MedalEvent;
            }
            set
            {
                OnMedalEventChanging(value);
                ReportPropertyChanging("MedalEvent");
                _MedalEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedalEvent");
                OnMedalEventChanged();
            }
        }
        private Nullable<global::System.Boolean> _MedalEvent;
        partial void OnMedalEventChanging(Nullable<global::System.Boolean> value);
        partial void OnMedalEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StylingCode
        {
            get
            {
                return _StylingCode;
            }
            set
            {
                OnStylingCodeChanging(value);
                ReportPropertyChanging("StylingCode");
                _StylingCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StylingCode");
                OnStylingCodeChanged();
            }
        }
        private global::System.Int32 _StylingCode;
        partial void OnStylingCodeChanging(global::System.Int32 value);
        partial void OnStylingCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniqueKey
        {
            get
            {
                return _UniqueKey;
            }
            set
            {
                OnUniqueKeyChanging(value);
                ReportPropertyChanging("UniqueKey");
                _UniqueKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueKey");
                OnUniqueKeyChanged();
            }
        }
        private global::System.Int32 _UniqueKey;
        partial void OnUniqueKeyChanging(global::System.Int32 value);
        partial void OnUniqueKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TeamSport
        {
            get
            {
                return _TeamSport;
            }
            set
            {
                OnTeamSportChanging(value);
                ReportPropertyChanging("TeamSport");
                _TeamSport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamSport");
                OnTeamSportChanged();
            }
        }
        private Nullable<global::System.Boolean> _TeamSport;
        partial void OnTeamSportChanging(Nullable<global::System.Boolean> value);
        partial void OnTeamSportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ResourceTracking
        {
            get
            {
                return _ResourceTracking;
            }
            set
            {
                OnResourceTrackingChanging(value);
                ReportPropertyChanging("ResourceTracking");
                _ResourceTracking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceTracking");
                OnResourceTrackingChanged();
            }
        }
        private Nullable<global::System.Boolean> _ResourceTracking;
        partial void OnResourceTrackingChanging(Nullable<global::System.Boolean> value);
        partial void OnResourceTrackingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ActionItem_SportID", "ActionItem")]
        public EntityCollection<ActionItem> ActionItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionItem>("OTP.Ring.Data.Model.FK_ActionItem_SportID", "ActionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionItem>("OTP.Ring.Data.Model.FK_ActionItem_SportID", "ActionItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_SportID", "BenchmarkSport")]
        public EntityCollection<BenchmarkSport> BenchmarkSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenchmarkSport>("OTP.Ring.Data.Model.FK_BenchmarkSport_SportID", "BenchmarkSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenchmarkSport>("OTP.Ring.Data.Model.FK_BenchmarkSport_SportID", "BenchmarkSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkTier_SportID", "BenchmarkTier")]
        public EntityCollection<BenchmarkTier> BenchmarkTiers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenchmarkTier>("OTP.Ring.Data.Model.FK_BenchmarkTier_SportID", "BenchmarkTier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenchmarkTier>("OTP.Ring.Data.Model.FK_BenchmarkTier_SportID", "BenchmarkTier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Competition_SportID", "Competition")]
        public EntityCollection<Competition> Competitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competition>("OTP.Ring.Data.Model.FK_Competition_SportID", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competition>("OTP.Ring.Data.Model.FK_Competition_SportID", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_CompetitionSport_SportID", "CompetitionSport")]
        public EntityCollection<CompetitionSport> CompetitionSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionSport>("OTP.Ring.Data.Model.FK_CompetitionSport_SportID", "CompetitionSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionSport>("OTP.Ring.Data.Model.FK_CompetitionSport_SportID", "CompetitionSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadStaging_SportID", "DownloadStaging")]
        public EntityCollection<DownloadStaging> DownloadStagings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DownloadStaging>("OTP.Ring.Data.Model.FK_DownloadStaging_SportID", "DownloadStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DownloadStaging>("OTP.Ring.Data.Model.FK_DownloadStaging_SportID", "DownloadStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Evaluation_SportID", "Evaluation")]
        public EntityCollection<Evaluation> Evaluations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Evaluation>("OTP.Ring.Data.Model.FK_Evaluation_SportID", "Evaluation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Evaluation>("OTP.Ring.Data.Model.FK_Evaluation_SportID", "Evaluation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationMasterQuestion_SportID", "EvaluationMasterQuestion")]
        public EntityCollection<EvaluationMasterQuestion> EvaluationMasterQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationMasterQuestion>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_SportID", "EvaluationMasterQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationMasterQuestion>("OTP.Ring.Data.Model.FK_EvaluationMasterQuestion_SportID", "EvaluationMasterQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_SportID", "FundingSummary")]
        public EntityCollection<FundingSummary> FundingSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingSummary>("OTP.Ring.Data.Model.FK_FundingSummary_SportID", "FundingSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingSummary>("OTP.Ring.Data.Model.FK_FundingSummary_SportID", "FundingSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Sport_HPAID", "HPA")]
        public HPA HPA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HPA>("OTP.Ring.Data.Model.FK_Sport_HPAID", "HPA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HPA>("OTP.Ring.Data.Model.FK_Sport_HPAID", "HPA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HPA> HPAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HPA>("OTP.Ring.Data.Model.FK_Sport_HPAID", "HPA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HPA>("OTP.Ring.Data.Model.FK_Sport_HPAID", "HPA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Sport_OrganizationID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Sport_OrganizationID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Sport_OrganizationID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Sport_OrganizationID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("OTP.Ring.Data.Model.FK_Sport_OrganizationID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Report_SportID", "Report")]
        public EntityCollection<Report> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("OTP.Ring.Data.Model.FK_Report_SportID", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("OTP.Ring.Data.Model.FK_Report_SportID", "Report", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_SportID", "ResourceSport")]
        public EntityCollection<ResourceSport> ResourceSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSport>("OTP.Ring.Data.Model.FK_ResourceSport_SportID", "ResourceSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSport>("OTP.Ring.Data.Model.FK_ResourceSport_SportID", "ResourceSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Result_SportID", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("OTP.Ring.Data.Model.FK_Result_SportID", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("OTP.Ring.Data.Model.FK_Result_SportID", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResultStaging_SportID", "ResultStaging")]
        public EntityCollection<ResultStaging> ResultStagings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStaging_SportID", "ResultStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultStaging>("OTP.Ring.Data.Model.FK_ResultStaging_SportID", "ResultStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SecurityUserSport_SportID", "SecurityUserSport")]
        public EntityCollection<SecurityUserSport> SecurityUserSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityUserSport>("OTP.Ring.Data.Model.FK_SecurityUserSport_SportID", "SecurityUserSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityUserSport>("OTP.Ring.Data.Model.FK_SecurityUserSport_SportID", "SecurityUserSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Sport_ParentSportID", "Sport1")]
        public EntityCollection<Sport> ChildSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sport>("OTP.Ring.Data.Model.FK_Sport_ParentSportID", "Sport1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sport>("OTP.Ring.Data.Model.FK_Sport_ParentSportID", "Sport1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Sport_ParentSportID", "Sport")]
        public Sport ParentSport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Sport_ParentSportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Sport_ParentSportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> ParentSportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Sport_ParentSportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Sport_ParentSportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Sport_SportLevelID", "SportLevel")]
        public SportLevel SportLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportLevel>("OTP.Ring.Data.Model.FK_Sport_SportLevelID", "SportLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportLevel>("OTP.Ring.Data.Model.FK_Sport_SportLevelID", "SportLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportLevel> SportLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportLevel>("OTP.Ring.Data.Model.FK_Sport_SportLevelID", "SportLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportLevel>("OTP.Ring.Data.Model.FK_Sport_SportLevelID", "SportLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SportRanking_SportID", "SportRanking")]
        public EntityCollection<SportRanking> SportRankings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SportRanking>("OTP.Ring.Data.Model.FK_SportRanking_SportID", "SportRanking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SportRanking>("OTP.Ring.Data.Model.FK_SportRanking_SportID", "SportRanking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Team_SportID", "Team")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("OTP.Ring.Data.Model.FK_Team_SportID", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("OTP.Ring.Data.Model.FK_Team_SportID", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="SportLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportLevel object.
        /// </summary>
        /// <param name="sportLevelID">Initial value of the SportLevelID property.</param>
        public static SportLevel CreateSportLevel(global::System.Int32 sportLevelID)
        {
            SportLevel sportLevel = new SportLevel();
            sportLevel.SportLevelID = sportLevelID;
            return sportLevel;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportLevelID
        {
            get
            {
                return _SportLevelID;
            }
            set
            {
                if (_SportLevelID != value)
                {
                    OnSportLevelIDChanging(value);
                    ReportPropertyChanging("SportLevelID");
                    _SportLevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportLevelID");
                    OnSportLevelIDChanged();
                }
            }
        }
        private global::System.Int32 _SportLevelID;
        partial void OnSportLevelIDChanging(global::System.Int32 value);
        partial void OnSportLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Sport_SportLevelID", "Sport")]
        public EntityCollection<Sport> Sports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sport>("OTP.Ring.Data.Model.FK_Sport_SportLevelID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sport>("OTP.Ring.Data.Model.FK_Sport_SportLevelID", "Sport", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="SportRanking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportRanking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportRanking object.
        /// </summary>
        /// <param name="sportRankingID">Initial value of the SportRankingID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="yearID">Initial value of the YearID property.</param>
        /// <param name="sportRankingCategoryID">Initial value of the SportRankingCategoryID property.</param>
        public static SportRanking CreateSportRanking(global::System.Int32 sportRankingID, global::System.String sportID, global::System.String yearID, global::System.String sportRankingCategoryID)
        {
            SportRanking sportRanking = new SportRanking();
            sportRanking.SportRankingID = sportRankingID;
            sportRanking.SportID = sportID;
            sportRanking.YearID = yearID;
            sportRanking.SportRankingCategoryID = sportRankingCategoryID;
            return sportRanking;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportRankingID
        {
            get
            {
                return _SportRankingID;
            }
            set
            {
                if (_SportRankingID != value)
                {
                    OnSportRankingIDChanging(value);
                    ReportPropertyChanging("SportRankingID");
                    _SportRankingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportRankingID");
                    OnSportRankingIDChanged();
                }
            }
        }
        private global::System.Int32 _SportRankingID;
        partial void OnSportRankingIDChanging(global::System.Int32 value);
        partial void OnSportRankingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                OnYearIDChanging(value);
                ReportPropertyChanging("YearID");
                _YearID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearID");
                OnYearIDChanged();
            }
        }
        private global::System.String _YearID;
        partial void OnYearIDChanging(global::System.String value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportRankingCategoryID
        {
            get
            {
                return _SportRankingCategoryID;
            }
            set
            {
                OnSportRankingCategoryIDChanging(value);
                ReportPropertyChanging("SportRankingCategoryID");
                _SportRankingCategoryID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportRankingCategoryID");
                OnSportRankingCategoryIDChanged();
            }
        }
        private global::System.String _SportRankingCategoryID;
        partial void OnSportRankingCategoryIDChanging(global::System.String value);
        partial void OnSportRankingCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SportRanking_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_SportRanking_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_SportRanking_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_SportRanking_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_SportRanking_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SportRanking_SportRankingCategoryID", "SportRankingCategory")]
        public SportRankingCategory SportRankingCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportRankingCategory>("OTP.Ring.Data.Model.FK_SportRanking_SportRankingCategoryID", "SportRankingCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportRankingCategory>("OTP.Ring.Data.Model.FK_SportRanking_SportRankingCategoryID", "SportRankingCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportRankingCategory> SportRankingCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportRankingCategory>("OTP.Ring.Data.Model.FK_SportRanking_SportRankingCategoryID", "SportRankingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportRankingCategory>("OTP.Ring.Data.Model.FK_SportRanking_SportRankingCategoryID", "SportRankingCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SportRanking_YearID", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_SportRanking_YearID", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_SportRanking_YearID", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("OTP.Ring.Data.Model.FK_SportRanking_YearID", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("OTP.Ring.Data.Model.FK_SportRanking_YearID", "Year", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="SportRankingCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportRankingCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportRankingCategory object.
        /// </summary>
        /// <param name="sportRankingCategoryID">Initial value of the SportRankingCategoryID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        /// <param name="oTPRank">Initial value of the OTPRank property.</param>
        /// <param name="oTPRankClass">Initial value of the OTPRankClass property.</param>
        public static SportRankingCategory CreateSportRankingCategory(global::System.String sportRankingCategoryID, global::System.String name_EN, global::System.String name_FR, global::System.String oTPRank, global::System.String oTPRankClass)
        {
            SportRankingCategory sportRankingCategory = new SportRankingCategory();
            sportRankingCategory.SportRankingCategoryID = sportRankingCategoryID;
            sportRankingCategory.Name_EN = name_EN;
            sportRankingCategory.Name_FR = name_FR;
            sportRankingCategory.OTPRank = oTPRank;
            sportRankingCategory.OTPRankClass = oTPRankClass;
            return sportRankingCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportRankingCategoryID
        {
            get
            {
                return _SportRankingCategoryID;
            }
            set
            {
                if (_SportRankingCategoryID != value)
                {
                    OnSportRankingCategoryIDChanging(value);
                    ReportPropertyChanging("SportRankingCategoryID");
                    _SportRankingCategoryID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SportRankingCategoryID");
                    OnSportRankingCategoryIDChanged();
                }
            }
        }
        private global::System.String _SportRankingCategoryID;
        partial void OnSportRankingCategoryIDChanging(global::System.String value);
        partial void OnSportRankingCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OTPRank
        {
            get
            {
                return _OTPRank;
            }
            set
            {
                OnOTPRankChanging(value);
                ReportPropertyChanging("OTPRank");
                _OTPRank = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OTPRank");
                OnOTPRankChanged();
            }
        }
        private global::System.String _OTPRank;
        partial void OnOTPRankChanging(global::System.String value);
        partial void OnOTPRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OTPRankClass
        {
            get
            {
                return _OTPRankClass;
            }
            set
            {
                OnOTPRankClassChanging(value);
                ReportPropertyChanging("OTPRankClass");
                _OTPRankClass = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OTPRankClass");
                OnOTPRankClassChanged();
            }
        }
        private global::System.String _OTPRankClass;
        partial void OnOTPRankClassChanging(global::System.String value);
        partial void OnOTPRankClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SportRanking_SportRankingCategoryID", "SportRanking")]
        public EntityCollection<SportRanking> SportRankings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SportRanking>("OTP.Ring.Data.Model.FK_SportRanking_SportRankingCategoryID", "SportRanking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SportRanking>("OTP.Ring.Data.Model.FK_SportRanking_SportRankingCategoryID", "SportRanking", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="TableTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TableTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TableTemplate object.
        /// </summary>
        /// <param name="tableTemplateID">Initial value of the TableTemplateID property.</param>
        /// <param name="tableName">Initial value of the TableName property.</param>
        public static TableTemplate CreateTableTemplate(global::System.String tableTemplateID, global::System.String tableName)
        {
            TableTemplate tableTemplate = new TableTemplate();
            tableTemplate.TableTemplateID = tableTemplateID;
            tableTemplate.TableName = tableName;
            return tableTemplate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableTemplateID
        {
            get
            {
                return _TableTemplateID;
            }
            set
            {
                if (_TableTemplateID != value)
                {
                    OnTableTemplateIDChanging(value);
                    ReportPropertyChanging("TableTemplateID");
                    _TableTemplateID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TableTemplateID");
                    OnTableTemplateIDChanged();
                }
            }
        }
        private global::System.String _TableTemplateID;
        partial void OnTableTemplateIDChanging(global::System.String value);
        partial void OnTableTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_DownloadTemplate_TableTemplateID", "DownloadTemplate")]
        public EntityCollection<DownloadTemplate> DownloadTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DownloadTemplate>("OTP.Ring.Data.Model.FK_DownloadTemplate_TableTemplateID", "DownloadTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DownloadTemplate>("OTP.Ring.Data.Model.FK_DownloadTemplate_TableTemplateID", "DownloadTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_TableTemplateField_TableTemplateID", "TableTemplateField")]
        public EntityCollection<TableTemplateField> TableTemplateFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TableTemplateField>("OTP.Ring.Data.Model.FK_TableTemplateField_TableTemplateID", "TableTemplateField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TableTemplateField>("OTP.Ring.Data.Model.FK_TableTemplateField_TableTemplateID", "TableTemplateField", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="TableTemplateField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TableTemplateField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TableTemplateField object.
        /// </summary>
        /// <param name="tableTemplateFieldID">Initial value of the TableTemplateFieldID property.</param>
        /// <param name="tableTemplateID">Initial value of the TableTemplateID property.</param>
        /// <param name="fieldName">Initial value of the FieldName property.</param>
        /// <param name="detail">Initial value of the Detail property.</param>
        /// <param name="replaceKey">Initial value of the ReplaceKey property.</param>
        /// <param name="businessKey">Initial value of the BusinessKey property.</param>
        /// <param name="requiredTR">Initial value of the RequiredTR property.</param>
        /// <param name="requiredTNR">Initial value of the RequiredTNR property.</param>
        /// <param name="requiredNTR">Initial value of the RequiredNTR property.</param>
        public static TableTemplateField CreateTableTemplateField(global::System.Int32 tableTemplateFieldID, global::System.String tableTemplateID, global::System.String fieldName, global::System.Boolean detail, global::System.Boolean replaceKey, global::System.Boolean businessKey, global::System.Boolean requiredTR, global::System.Boolean requiredTNR, global::System.Boolean requiredNTR)
        {
            TableTemplateField tableTemplateField = new TableTemplateField();
            tableTemplateField.TableTemplateFieldID = tableTemplateFieldID;
            tableTemplateField.TableTemplateID = tableTemplateID;
            tableTemplateField.FieldName = fieldName;
            tableTemplateField.Detail = detail;
            tableTemplateField.ReplaceKey = replaceKey;
            tableTemplateField.BusinessKey = businessKey;
            tableTemplateField.RequiredTR = requiredTR;
            tableTemplateField.RequiredTNR = requiredTNR;
            tableTemplateField.RequiredNTR = requiredNTR;
            return tableTemplateField;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableTemplateFieldID
        {
            get
            {
                return _TableTemplateFieldID;
            }
            set
            {
                if (_TableTemplateFieldID != value)
                {
                    OnTableTemplateFieldIDChanging(value);
                    ReportPropertyChanging("TableTemplateFieldID");
                    _TableTemplateFieldID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TableTemplateFieldID");
                    OnTableTemplateFieldIDChanged();
                }
            }
        }
        private global::System.Int32 _TableTemplateFieldID;
        partial void OnTableTemplateFieldIDChanging(global::System.Int32 value);
        partial void OnTableTemplateFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableTemplateID
        {
            get
            {
                return _TableTemplateID;
            }
            set
            {
                OnTableTemplateIDChanging(value);
                ReportPropertyChanging("TableTemplateID");
                _TableTemplateID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TableTemplateID");
                OnTableTemplateIDChanged();
            }
        }
        private global::System.String _TableTemplateID;
        partial void OnTableTemplateIDChanging(global::System.String value);
        partial void OnTableTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Detail
        {
            get
            {
                return _Detail;
            }
            set
            {
                OnDetailChanging(value);
                ReportPropertyChanging("Detail");
                _Detail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Detail");
                OnDetailChanged();
            }
        }
        private global::System.Boolean _Detail;
        partial void OnDetailChanging(global::System.Boolean value);
        partial void OnDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReplaceKey
        {
            get
            {
                return _ReplaceKey;
            }
            set
            {
                OnReplaceKeyChanging(value);
                ReportPropertyChanging("ReplaceKey");
                _ReplaceKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReplaceKey");
                OnReplaceKeyChanged();
            }
        }
        private global::System.Boolean _ReplaceKey;
        partial void OnReplaceKeyChanging(global::System.Boolean value);
        partial void OnReplaceKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean BusinessKey
        {
            get
            {
                return _BusinessKey;
            }
            set
            {
                OnBusinessKeyChanging(value);
                ReportPropertyChanging("BusinessKey");
                _BusinessKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessKey");
                OnBusinessKeyChanged();
            }
        }
        private global::System.Boolean _BusinessKey;
        partial void OnBusinessKeyChanging(global::System.Boolean value);
        partial void OnBusinessKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RequiredTR
        {
            get
            {
                return _RequiredTR;
            }
            set
            {
                OnRequiredTRChanging(value);
                ReportPropertyChanging("RequiredTR");
                _RequiredTR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiredTR");
                OnRequiredTRChanged();
            }
        }
        private global::System.Boolean _RequiredTR;
        partial void OnRequiredTRChanging(global::System.Boolean value);
        partial void OnRequiredTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RequiredTNR
        {
            get
            {
                return _RequiredTNR;
            }
            set
            {
                OnRequiredTNRChanging(value);
                ReportPropertyChanging("RequiredTNR");
                _RequiredTNR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiredTNR");
                OnRequiredTNRChanged();
            }
        }
        private global::System.Boolean _RequiredTNR;
        partial void OnRequiredTNRChanging(global::System.Boolean value);
        partial void OnRequiredTNRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RequiredNTR
        {
            get
            {
                return _RequiredNTR;
            }
            set
            {
                OnRequiredNTRChanging(value);
                ReportPropertyChanging("RequiredNTR");
                _RequiredNTR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiredNTR");
                OnRequiredNTRChanged();
            }
        }
        private global::System.Boolean _RequiredNTR;
        partial void OnRequiredNTRChanging(global::System.Boolean value);
        partial void OnRequiredNTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ForeignKeyTable
        {
            get
            {
                return _ForeignKeyTable;
            }
            set
            {
                OnForeignKeyTableChanging(value);
                ReportPropertyChanging("ForeignKeyTable");
                _ForeignKeyTable = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ForeignKeyTable");
                OnForeignKeyTableChanged();
            }
        }
        private global::System.String _ForeignKeyTable;
        partial void OnForeignKeyTableChanging(global::System.String value);
        partial void OnForeignKeyTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ForeignKeyField
        {
            get
            {
                return _ForeignKeyField;
            }
            set
            {
                OnForeignKeyFieldChanging(value);
                ReportPropertyChanging("ForeignKeyField");
                _ForeignKeyField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ForeignKeyField");
                OnForeignKeyFieldChanged();
            }
        }
        private global::System.String _ForeignKeyField;
        partial void OnForeignKeyFieldChanging(global::System.String value);
        partial void OnForeignKeyFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormatType
        {
            get
            {
                return _FormatType;
            }
            set
            {
                OnFormatTypeChanging(value);
                ReportPropertyChanging("FormatType");
                _FormatType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormatType");
                OnFormatTypeChanged();
            }
        }
        private global::System.String _FormatType;
        partial void OnFormatTypeChanging(global::System.String value);
        partial void OnFormatTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_TableTemplateField_TableTemplateID", "TableTemplate")]
        public TableTemplate TableTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TableTemplate>("OTP.Ring.Data.Model.FK_TableTemplateField_TableTemplateID", "TableTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TableTemplate>("OTP.Ring.Data.Model.FK_TableTemplateField_TableTemplateID", "TableTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TableTemplate> TableTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TableTemplate>("OTP.Ring.Data.Model.FK_TableTemplateField_TableTemplateID", "TableTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TableTemplate>("OTP.Ring.Data.Model.FK_TableTemplateField_TableTemplateID", "TableTemplate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="teamTypeID">Initial value of the TeamTypeID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static Team CreateTeam(global::System.Int32 teamID, global::System.String teamTypeID, global::System.String sportID, global::System.String countryID, global::System.String name_EN, global::System.String name_FR)
        {
            Team team = new Team();
            team.TeamID = teamID;
            team.TeamTypeID = teamTypeID;
            team.SportID = sportID;
            team.CountryID = countryID;
            team.Name_EN = name_EN;
            team.Name_FR = name_FR;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                if (_TeamID != value)
                {
                    OnTeamIDChanging(value);
                    ReportPropertyChanging("TeamID");
                    _TeamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamID");
                    OnTeamIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamTypeID
        {
            get
            {
                return _TeamTypeID;
            }
            set
            {
                OnTeamTypeIDChanging(value);
                ReportPropertyChanging("TeamTypeID");
                _TeamTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TeamTypeID");
                OnTeamTypeIDChanged();
            }
        }
        private global::System.String _TeamTypeID;
        partial void OnTeamTypeIDChanging(global::System.String value);
        partial void OnTeamTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WDBID
        {
            get
            {
                return _WDBID;
            }
            set
            {
                OnWDBIDChanging(value);
                ReportPropertyChanging("WDBID");
                _WDBID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WDBID");
                OnWDBIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WDBID;
        partial void OnWDBIDChanging(Nullable<global::System.Int32> value);
        partial void OnWDBIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Team_CountryID", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Team_CountryID", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Team_CountryID", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OTP.Ring.Data.Model.FK_Team_CountryID", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OTP.Ring.Data.Model.FK_Team_CountryID", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Result_TeamID", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("OTP.Ring.Data.Model.FK_Result_TeamID", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("OTP.Ring.Data.Model.FK_Result_TeamID", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Team_SportID", "Sport")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Team_SportID", "Sport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Team_SportID", "Sport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Team_SportID", "Sport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("OTP.Ring.Data.Model.FK_Team_SportID", "Sport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Team_TeamTypeID", "TeamType")]
        public TeamType TeamType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamType>("OTP.Ring.Data.Model.FK_Team_TeamTypeID", "TeamType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamType>("OTP.Ring.Data.Model.FK_Team_TeamTypeID", "TeamType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeamType> TeamTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamType>("OTP.Ring.Data.Model.FK_Team_TeamTypeID", "TeamType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeamType>("OTP.Ring.Data.Model.FK_Team_TeamTypeID", "TeamType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_TeamResource_TeamID", "TeamResource")]
        public EntityCollection<TeamResource> TeamResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamResource>("OTP.Ring.Data.Model.FK_TeamResource_TeamID", "TeamResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamResource>("OTP.Ring.Data.Model.FK_TeamResource_TeamID", "TeamResource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="TeamResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamResource object.
        /// </summary>
        /// <param name="teamResourceID">Initial value of the TeamResourceID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        public static TeamResource CreateTeamResource(global::System.Int32 teamResourceID, global::System.Int32 teamID, global::System.Int32 resourceID)
        {
            TeamResource teamResource = new TeamResource();
            teamResource.TeamResourceID = teamResourceID;
            teamResource.TeamID = teamID;
            teamResource.ResourceID = resourceID;
            return teamResource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamResourceID
        {
            get
            {
                return _TeamResourceID;
            }
            set
            {
                if (_TeamResourceID != value)
                {
                    OnTeamResourceIDChanging(value);
                    ReportPropertyChanging("TeamResourceID");
                    _TeamResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamResourceID");
                    OnTeamResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamResourceID;
        partial void OnTeamResourceIDChanging(global::System.Int32 value);
        partial void OnTeamResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_TeamResource_ResourceID", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_TeamResource_ResourceID", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_TeamResource_ResourceID", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("OTP.Ring.Data.Model.FK_TeamResource_ResourceID", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("OTP.Ring.Data.Model.FK_TeamResource_ResourceID", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_TeamResource_TeamID", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("OTP.Ring.Data.Model.FK_TeamResource_TeamID", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("OTP.Ring.Data.Model.FK_TeamResource_TeamID", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("OTP.Ring.Data.Model.FK_TeamResource_TeamID", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("OTP.Ring.Data.Model.FK_TeamResource_TeamID", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="TeamType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamType object.
        /// </summary>
        /// <param name="teamTypeID">Initial value of the TeamTypeID property.</param>
        /// <param name="name_EN">Initial value of the Name_EN property.</param>
        /// <param name="name_FR">Initial value of the Name_FR property.</param>
        public static TeamType CreateTeamType(global::System.String teamTypeID, global::System.String name_EN, global::System.String name_FR)
        {
            TeamType teamType = new TeamType();
            teamType.TeamTypeID = teamTypeID;
            teamType.Name_EN = name_EN;
            teamType.Name_FR = name_FR;
            return teamType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamTypeID
        {
            get
            {
                return _TeamTypeID;
            }
            set
            {
                if (_TeamTypeID != value)
                {
                    OnTeamTypeIDChanging(value);
                    ReportPropertyChanging("TeamTypeID");
                    _TeamTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TeamTypeID");
                    OnTeamTypeIDChanged();
                }
            }
        }
        private global::System.String _TeamTypeID;
        partial void OnTeamTypeIDChanging(global::System.String value);
        partial void OnTeamTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_EN
        {
            get
            {
                return _Name_EN;
            }
            set
            {
                OnName_ENChanging(value);
                ReportPropertyChanging("Name_EN");
                _Name_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_EN");
                OnName_ENChanged();
            }
        }
        private global::System.String _Name_EN;
        partial void OnName_ENChanging(global::System.String value);
        partial void OnName_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_FR
        {
            get
            {
                return _Name_FR;
            }
            set
            {
                OnName_FRChanging(value);
                ReportPropertyChanging("Name_FR");
                _Name_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_FR");
                OnName_FRChanged();
            }
        }
        private global::System.String _Name_FR;
        partial void OnName_FRChanging(global::System.String value);
        partial void OnName_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Team_TeamTypeID", "Team")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("OTP.Ring.Data.Model.FK_Team_TeamTypeID", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("OTP.Ring.Data.Model.FK_Team_TeamTypeID", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="Year")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Year : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Year object.
        /// </summary>
        /// <param name="yearID">Initial value of the YearID property.</param>
        /// <param name="yearFrom">Initial value of the YearFrom property.</param>
        /// <param name="yearTo">Initial value of the YearTo property.</param>
        public static Year CreateYear(global::System.String yearID, global::System.Int32 yearFrom, global::System.Int32 yearTo)
        {
            Year year = new Year();
            year.YearID = yearID;
            year.YearFrom = yearFrom;
            year.YearTo = yearTo;
            return year;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                if (_YearID != value)
                {
                    OnYearIDChanging(value);
                    ReportPropertyChanging("YearID");
                    _YearID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("YearID");
                    OnYearIDChanged();
                }
            }
        }
        private global::System.String _YearID;
        partial void OnYearIDChanging(global::System.String value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comments
        {
            get
            {
                return _comments;
            }
            set
            {
                OncommentsChanging(value);
                ReportPropertyChanging("comments");
                _comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comments");
                OncommentsChanged();
            }
        }
        private global::System.String _comments;
        partial void OncommentsChanging(global::System.String value);
        partial void OncommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearFrom
        {
            get
            {
                return _YearFrom;
            }
            set
            {
                OnYearFromChanging(value);
                ReportPropertyChanging("YearFrom");
                _YearFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearFrom");
                OnYearFromChanged();
            }
        }
        private global::System.Int32 _YearFrom;
        partial void OnYearFromChanging(global::System.Int32 value);
        partial void OnYearFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearTo
        {
            get
            {
                return _YearTo;
            }
            set
            {
                OnYearToChanging(value);
                ReportPropertyChanging("YearTo");
                _YearTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearTo");
                OnYearToChanged();
            }
        }
        private global::System.Int32 _YearTo;
        partial void OnYearToChanging(global::System.Int32 value);
        partial void OnYearToChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkResource_YearID", "BenchmarkResource")]
        public EntityCollection<BenchmarkResource> BenchmarkResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenchmarkResource>("OTP.Ring.Data.Model.FK_BenchmarkResource_YearID", "BenchmarkResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenchmarkResource>("OTP.Ring.Data.Model.FK_BenchmarkResource_YearID", "BenchmarkResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_BenchmarkSport_YearID", "BenchmarkSport")]
        public EntityCollection<BenchmarkSport> BenchmarkSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenchmarkSport>("OTP.Ring.Data.Model.FK_BenchmarkSport_YearID", "BenchmarkSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenchmarkSport>("OTP.Ring.Data.Model.FK_BenchmarkSport_YearID", "BenchmarkSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_Competition_YearID", "Competition")]
        public EntityCollection<Competition> Competitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competition>("OTP.Ring.Data.Model.FK_Competition_YearID", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competition>("OTP.Ring.Data.Model.FK_Competition_YearID", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_EvaluationVersion_YearID", "EvaluationVersion")]
        public EntityCollection<EvaluationVersion> EvaluationVersions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EvaluationVersion>("OTP.Ring.Data.Model.FK_EvaluationVersion_YearID", "EvaluationVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EvaluationVersion>("OTP.Ring.Data.Model.FK_EvaluationVersion_YearID", "EvaluationVersion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_FundingSummary_YearID", "FundingSummary")]
        public EntityCollection<FundingSummary> FundingSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingSummary>("OTP.Ring.Data.Model.FK_FundingSummary_YearID", "FundingSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingSummary>("OTP.Ring.Data.Model.FK_FundingSummary_YearID", "FundingSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_YearFromID", "ResourceAffiliate")]
        public EntityCollection<ResourceAffiliate> ResourceAffiliates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceAffiliate>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearFromID", "ResourceAffiliate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceAffiliate>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearFromID", "ResourceAffiliate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceAffiliate_YearToID", "ResourceAffiliate")]
        public EntityCollection<ResourceAffiliate> ResourceAffiliates1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceAffiliate>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearToID", "ResourceAffiliate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceAffiliate>("OTP.Ring.Data.Model.FK_ResourceAffiliate_YearToID", "ResourceAffiliate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceDirectAthleteSupport_YearFrom", "ResourceDirectAthleteSupport")]
        public EntityCollection<ResourceDirectAthleteSupport> ResourceDirectAthleteSupports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceDirectAthleteSupport>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_YearFrom", "ResourceDirectAthleteSupport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceDirectAthleteSupport>("OTP.Ring.Data.Model.FK_ResourceDirectAthleteSupport_YearFrom", "ResourceDirectAthleteSupport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_ResourceSport_Year", "ResourceSport")]
        public EntityCollection<ResourceSport> ResourceSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSport>("OTP.Ring.Data.Model.FK_ResourceSport_Year", "ResourceSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSport>("OTP.Ring.Data.Model.FK_ResourceSport_Year", "ResourceSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OTP.Ring.Data.Model", "FK_SportRanking_YearID", "SportRanking")]
        public EntityCollection<SportRanking> SportRankings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SportRanking>("OTP.Ring.Data.Model.FK_SportRanking_YearID", "SportRanking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SportRanking>("OTP.Ring.Data.Model.FK_SportRanking_YearID", "SportRanking", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="uspGetCompetitions_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uspGetCompetitions_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new uspGetCompetitions_Result object.
        /// </summary>
        /// <param name="competitionID">Initial value of the CompetitionID property.</param>
        /// <param name="sportID">Initial value of the SportID property.</param>
        /// <param name="sportName">Initial value of the SportName property.</param>
        /// <param name="yearID">Initial value of the YearID property.</param>
        /// <param name="competitionTypeID">Initial value of the CompetitionTypeID property.</param>
        /// <param name="competitionTypeName">Initial value of the CompetitionTypeName property.</param>
        /// <param name="benchmarkTypeID">Initial value of the BenchmarkTypeID property.</param>
        /// <param name="benchmarkTypeName">Initial value of the BenchmarkTypeName property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="competitionDate">Initial value of the CompetitionDate property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        /// <param name="downloadCount">Initial value of the DownloadCount property.</param>
        /// <param name="approveCount">Initial value of the ApproveCount property.</param>
        /// <param name="downloadStatus">Initial value of the DownloadStatus property.</param>
        /// <param name="approveStatus">Initial value of the ApproveStatus property.</param>
        /// <param name="totalRecords">Initial value of the TotalRecords property.</param>
        public static uspGetCompetitions_Result CreateuspGetCompetitions_Result(global::System.Int32 competitionID, global::System.String sportID, global::System.String sportName, global::System.String yearID, global::System.String competitionTypeID, global::System.String competitionTypeName, global::System.Int32 benchmarkTypeID, global::System.String benchmarkTypeName, global::System.String name, global::System.DateTime competitionDate, global::System.String countryName, global::System.Int32 downloadCount, global::System.Int32 approveCount, global::System.String downloadStatus, global::System.String approveStatus, global::System.Int32 totalRecords)
        {
            uspGetCompetitions_Result uspGetCompetitions_Result = new uspGetCompetitions_Result();
            uspGetCompetitions_Result.CompetitionID = competitionID;
            uspGetCompetitions_Result.SportID = sportID;
            uspGetCompetitions_Result.SportName = sportName;
            uspGetCompetitions_Result.YearID = yearID;
            uspGetCompetitions_Result.CompetitionTypeID = competitionTypeID;
            uspGetCompetitions_Result.CompetitionTypeName = competitionTypeName;
            uspGetCompetitions_Result.BenchmarkTypeID = benchmarkTypeID;
            uspGetCompetitions_Result.BenchmarkTypeName = benchmarkTypeName;
            uspGetCompetitions_Result.Name = name;
            uspGetCompetitions_Result.CompetitionDate = competitionDate;
            uspGetCompetitions_Result.CountryName = countryName;
            uspGetCompetitions_Result.DownloadCount = downloadCount;
            uspGetCompetitions_Result.ApproveCount = approveCount;
            uspGetCompetitions_Result.DownloadStatus = downloadStatus;
            uspGetCompetitions_Result.ApproveStatus = approveStatus;
            uspGetCompetitions_Result.TotalRecords = totalRecords;
            return uspGetCompetitions_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionID
        {
            get
            {
                return _CompetitionID;
            }
            set
            {
                OnCompetitionIDChanging(value);
                ReportPropertyChanging("CompetitionID");
                _CompetitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionID");
                OnCompetitionIDChanged();
            }
        }
        private global::System.Int32 _CompetitionID;
        partial void OnCompetitionIDChanging(global::System.Int32 value);
        partial void OnCompetitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportID
        {
            get
            {
                return _SportID;
            }
            set
            {
                OnSportIDChanging(value);
                ReportPropertyChanging("SportID");
                _SportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportID");
                OnSportIDChanged();
            }
        }
        private global::System.String _SportID;
        partial void OnSportIDChanging(global::System.String value);
        partial void OnSportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportName
        {
            get
            {
                return _SportName;
            }
            set
            {
                OnSportNameChanging(value);
                ReportPropertyChanging("SportName");
                _SportName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportName");
                OnSportNameChanged();
            }
        }
        private global::System.String _SportName;
        partial void OnSportNameChanging(global::System.String value);
        partial void OnSportNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearID
        {
            get
            {
                return _YearID;
            }
            set
            {
                OnYearIDChanging(value);
                ReportPropertyChanging("YearID");
                _YearID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearID");
                OnYearIDChanged();
            }
        }
        private global::System.String _YearID;
        partial void OnYearIDChanging(global::System.String value);
        partial void OnYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompetitionTypeID
        {
            get
            {
                return _CompetitionTypeID;
            }
            set
            {
                OnCompetitionTypeIDChanging(value);
                ReportPropertyChanging("CompetitionTypeID");
                _CompetitionTypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompetitionTypeID");
                OnCompetitionTypeIDChanged();
            }
        }
        private global::System.String _CompetitionTypeID;
        partial void OnCompetitionTypeIDChanging(global::System.String value);
        partial void OnCompetitionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompetitionTypeName
        {
            get
            {
                return _CompetitionTypeName;
            }
            set
            {
                OnCompetitionTypeNameChanging(value);
                ReportPropertyChanging("CompetitionTypeName");
                _CompetitionTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompetitionTypeName");
                OnCompetitionTypeNameChanged();
            }
        }
        private global::System.String _CompetitionTypeName;
        partial void OnCompetitionTypeNameChanging(global::System.String value);
        partial void OnCompetitionTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenchmarkTypeID
        {
            get
            {
                return _BenchmarkTypeID;
            }
            set
            {
                OnBenchmarkTypeIDChanging(value);
                ReportPropertyChanging("BenchmarkTypeID");
                _BenchmarkTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenchmarkTypeID");
                OnBenchmarkTypeIDChanged();
            }
        }
        private global::System.Int32 _BenchmarkTypeID;
        partial void OnBenchmarkTypeIDChanging(global::System.Int32 value);
        partial void OnBenchmarkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BenchmarkTypeName
        {
            get
            {
                return _BenchmarkTypeName;
            }
            set
            {
                OnBenchmarkTypeNameChanging(value);
                ReportPropertyChanging("BenchmarkTypeName");
                _BenchmarkTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BenchmarkTypeName");
                OnBenchmarkTypeNameChanged();
            }
        }
        private global::System.String _BenchmarkTypeName;
        partial void OnBenchmarkTypeNameChanging(global::System.String value);
        partial void OnBenchmarkTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CompetitionDate
        {
            get
            {
                return _CompetitionDate;
            }
            set
            {
                OnCompetitionDateChanging(value);
                ReportPropertyChanging("CompetitionDate");
                _CompetitionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitionDate");
                OnCompetitionDateChanged();
            }
        }
        private global::System.DateTime _CompetitionDate;
        partial void OnCompetitionDateChanging(global::System.DateTime value);
        partial void OnCompetitionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownloadCount
        {
            get
            {
                return _DownloadCount;
            }
            set
            {
                OnDownloadCountChanging(value);
                ReportPropertyChanging("DownloadCount");
                _DownloadCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownloadCount");
                OnDownloadCountChanged();
            }
        }
        private global::System.Int32 _DownloadCount;
        partial void OnDownloadCountChanging(global::System.Int32 value);
        partial void OnDownloadCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApproveCount
        {
            get
            {
                return _ApproveCount;
            }
            set
            {
                OnApproveCountChanging(value);
                ReportPropertyChanging("ApproveCount");
                _ApproveCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveCount");
                OnApproveCountChanged();
            }
        }
        private global::System.Int32 _ApproveCount;
        partial void OnApproveCountChanging(global::System.Int32 value);
        partial void OnApproveCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DownloadStatus
        {
            get
            {
                return _DownloadStatus;
            }
            set
            {
                OnDownloadStatusChanging(value);
                ReportPropertyChanging("DownloadStatus");
                _DownloadStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DownloadStatus");
                OnDownloadStatusChanged();
            }
        }
        private global::System.String _DownloadStatus;
        partial void OnDownloadStatusChanging(global::System.String value);
        partial void OnDownloadStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApproveStatus
        {
            get
            {
                return _ApproveStatus;
            }
            set
            {
                OnApproveStatusChanging(value);
                ReportPropertyChanging("ApproveStatus");
                _ApproveStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApproveStatus");
                OnApproveStatusChanged();
            }
        }
        private global::System.String _ApproveStatus;
        partial void OnApproveStatusChanging(global::System.String value);
        partial void OnApproveStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Editable
        {
            get
            {
                return _Editable;
            }
            set
            {
                OnEditableChanging(value);
                ReportPropertyChanging("Editable");
                _Editable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Editable");
                OnEditableChanged();
            }
        }
        private Nullable<global::System.Boolean> _Editable;
        partial void OnEditableChanging(Nullable<global::System.Boolean> value);
        partial void OnEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalRecords
        {
            get
            {
                return _TotalRecords;
            }
            set
            {
                OnTotalRecordsChanging(value);
                ReportPropertyChanging("TotalRecords");
                _TotalRecords = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalRecords");
                OnTotalRecordsChanged();
            }
        }
        private global::System.Int32 _TotalRecords;
        partial void OnTotalRecordsChanging(global::System.Int32 value);
        partial void OnTotalRecordsChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="uspGetReportFields_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uspGetReportFields_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new uspGetReportFields_Result object.
        /// </summary>
        /// <param name="dataType">Initial value of the DataType property.</param>
        /// <param name="columnID">Initial value of the ColumnID property.</param>
        /// <param name="maxLength">Initial value of the MaxLength property.</param>
        public static uspGetReportFields_Result CreateuspGetReportFields_Result(global::System.String dataType, global::System.Int32 columnID, global::System.Int16 maxLength)
        {
            uspGetReportFields_Result uspGetReportFields_Result = new uspGetReportFields_Result();
            uspGetReportFields_Result.DataType = dataType;
            uspGetReportFields_Result.ColumnID = columnID;
            uspGetReportFields_Result.MaxLength = maxLength;
            return uspGetReportFields_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Nullable
        {
            get
            {
                return _Nullable;
            }
            set
            {
                OnNullableChanging(value);
                ReportPropertyChanging("Nullable");
                _Nullable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Nullable");
                OnNullableChanged();
            }
        }
        private Nullable<global::System.Boolean> _Nullable;
        partial void OnNullableChanging(Nullable<global::System.Boolean> value);
        partial void OnNullableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColumnID
        {
            get
            {
                return _ColumnID;
            }
            set
            {
                OnColumnIDChanging(value);
                ReportPropertyChanging("ColumnID");
                _ColumnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColumnID");
                OnColumnIDChanged();
            }
        }
        private global::System.Int32 _ColumnID;
        partial void OnColumnIDChanging(global::System.Int32 value);
        partial void OnColumnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 MaxLength
        {
            get
            {
                return _MaxLength;
            }
            set
            {
                OnMaxLengthChanging(value);
                ReportPropertyChanging("MaxLength");
                _MaxLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxLength");
                OnMaxLengthChanged();
            }
        }
        private global::System.Int16 _MaxLength;
        partial void OnMaxLengthChanging(global::System.Int16 value);
        partial void OnMaxLengthChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="uspGetValidAggregations_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uspGetValidAggregations_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new uspGetValidAggregations_Result object.
        /// </summary>
        /// <param name="decodeID">Initial value of the DecodeID property.</param>
        /// <param name="decodeID_EN">Initial value of the DecodeID_EN property.</param>
        /// <param name="decodeID_FR">Initial value of the DecodeID_FR property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static uspGetValidAggregations_Result CreateuspGetValidAggregations_Result(global::System.String decodeID, global::System.String decodeID_EN, global::System.String decodeID_FR, global::System.Int32 sortOrder)
        {
            uspGetValidAggregations_Result uspGetValidAggregations_Result = new uspGetValidAggregations_Result();
            uspGetValidAggregations_Result.DecodeID = decodeID;
            uspGetValidAggregations_Result.DecodeID_EN = decodeID_EN;
            uspGetValidAggregations_Result.DecodeID_FR = decodeID_FR;
            uspGetValidAggregations_Result.SortOrder = sortOrder;
            return uspGetValidAggregations_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeID
        {
            get
            {
                return _DecodeID;
            }
            set
            {
                OnDecodeIDChanging(value);
                ReportPropertyChanging("DecodeID");
                _DecodeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DecodeID");
                OnDecodeIDChanged();
            }
        }
        private global::System.String _DecodeID;
        partial void OnDecodeIDChanging(global::System.String value);
        partial void OnDecodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeID_EN
        {
            get
            {
                return _DecodeID_EN;
            }
            set
            {
                OnDecodeID_ENChanging(value);
                ReportPropertyChanging("DecodeID_EN");
                _DecodeID_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DecodeID_EN");
                OnDecodeID_ENChanged();
            }
        }
        private global::System.String _DecodeID_EN;
        partial void OnDecodeID_ENChanging(global::System.String value);
        partial void OnDecodeID_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeID_FR
        {
            get
            {
                return _DecodeID_FR;
            }
            set
            {
                OnDecodeID_FRChanging(value);
                ReportPropertyChanging("DecodeID_FR");
                _DecodeID_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DecodeID_FR");
                OnDecodeID_FRChanged();
            }
        }
        private global::System.String _DecodeID_FR;
        partial void OnDecodeID_FRChanging(global::System.String value);
        partial void OnDecodeID_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="uspGetValidFormatStrings_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uspGetValidFormatStrings_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new uspGetValidFormatStrings_Result object.
        /// </summary>
        /// <param name="decodeID">Initial value of the DecodeID property.</param>
        /// <param name="decodeID_EN">Initial value of the DecodeID_EN property.</param>
        /// <param name="decodeID_FR">Initial value of the DecodeID_FR property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static uspGetValidFormatStrings_Result CreateuspGetValidFormatStrings_Result(global::System.String decodeID, global::System.String decodeID_EN, global::System.String decodeID_FR, global::System.Int32 sortOrder)
        {
            uspGetValidFormatStrings_Result uspGetValidFormatStrings_Result = new uspGetValidFormatStrings_Result();
            uspGetValidFormatStrings_Result.DecodeID = decodeID;
            uspGetValidFormatStrings_Result.DecodeID_EN = decodeID_EN;
            uspGetValidFormatStrings_Result.DecodeID_FR = decodeID_FR;
            uspGetValidFormatStrings_Result.SortOrder = sortOrder;
            return uspGetValidFormatStrings_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeID
        {
            get
            {
                return _DecodeID;
            }
            set
            {
                OnDecodeIDChanging(value);
                ReportPropertyChanging("DecodeID");
                _DecodeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DecodeID");
                OnDecodeIDChanged();
            }
        }
        private global::System.String _DecodeID;
        partial void OnDecodeIDChanging(global::System.String value);
        partial void OnDecodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeID_EN
        {
            get
            {
                return _DecodeID_EN;
            }
            set
            {
                OnDecodeID_ENChanging(value);
                ReportPropertyChanging("DecodeID_EN");
                _DecodeID_EN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DecodeID_EN");
                OnDecodeID_ENChanged();
            }
        }
        private global::System.String _DecodeID_EN;
        partial void OnDecodeID_ENChanging(global::System.String value);
        partial void OnDecodeID_ENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DecodeID_FR
        {
            get
            {
                return _DecodeID_FR;
            }
            set
            {
                OnDecodeID_FRChanging(value);
                ReportPropertyChanging("DecodeID_FR");
                _DecodeID_FR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DecodeID_FR");
                OnDecodeID_FRChanged();
            }
        }
        private global::System.String _DecodeID_FR;
        partial void OnDecodeID_FRChanging(global::System.String value);
        partial void OnDecodeID_FRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OTP.Ring.Data.Model", Name="uspLoadDownloadStagingResults_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uspLoadDownloadStagingResults_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceColumn
        {
            get
            {
                return _SourceColumn;
            }
            set
            {
                OnSourceColumnChanging(value);
                ReportPropertyChanging("SourceColumn");
                _SourceColumn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceColumn");
                OnSourceColumnChanged();
            }
        }
        private global::System.String _SourceColumn;
        partial void OnSourceColumnChanging(global::System.String value);
        partial void OnSourceColumnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceColumnName
        {
            get
            {
                return _SourceColumnName;
            }
            set
            {
                OnSourceColumnNameChanging(value);
                ReportPropertyChanging("SourceColumnName");
                _SourceColumnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceColumnName");
                OnSourceColumnNameChanged();
            }
        }
        private global::System.String _SourceColumnName;
        partial void OnSourceColumnNameChanging(global::System.String value);
        partial void OnSourceColumnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceRow
        {
            get
            {
                return _SourceRow;
            }
            set
            {
                OnSourceRowChanging(value);
                ReportPropertyChanging("SourceRow");
                _SourceRow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceRow");
                OnSourceRowChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceRow;
        partial void OnSourceRowChanging(Nullable<global::System.Int32> value);
        partial void OnSourceRowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldLength
        {
            get
            {
                return _FieldLength;
            }
            set
            {
                OnFieldLengthChanging(value);
                ReportPropertyChanging("FieldLength");
                _FieldLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldLength");
                OnFieldLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldLength;
        partial void OnFieldLengthChanging(Nullable<global::System.Int32> value);
        partial void OnFieldLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DownloadValue
        {
            get
            {
                return _DownloadValue;
            }
            set
            {
                OnDownloadValueChanging(value);
                ReportPropertyChanging("DownloadValue");
                _DownloadValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DownloadValue");
                OnDownloadValueChanged();
            }
        }
        private global::System.String _DownloadValue;
        partial void OnDownloadValueChanging(global::System.String value);
        partial void OnDownloadValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorMessage
        {
            get
            {
                return _ErrorMessage;
            }
            set
            {
                OnErrorMessageChanging(value);
                ReportPropertyChanging("ErrorMessage");
                _ErrorMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorMessage");
                OnErrorMessageChanged();
            }
        }
        private global::System.String _ErrorMessage;
        partial void OnErrorMessageChanging(global::System.String value);
        partial void OnErrorMessageChanged();

        #endregion
    }

    #endregion
    
}
