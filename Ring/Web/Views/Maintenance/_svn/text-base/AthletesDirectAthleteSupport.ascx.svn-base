<%@ Control Language="C#" Inherits="System.Web.Mvc.ViewUserControl<MaintenanceEditableViewModel>" %>

<input type="hidden" id="tabResourceId" value="<%= ViewData["resourceId"] %>" />

    <div class="groupbox_title_background gradientHToWhite">
        <div class="groupbox_title" >
            <%= ViewData["resourceName"] %>
        </div>
    </div>


    <% if (ViewData["resourceId"] != null)
       { %>
       
        <%= Html.Telerik().Grid<MaintenanceAthletesDirectAthleteSupportViewModel>()
            .Name("DirectAthleteSupport")
            .TableHtmlAttributes(new { style = "font-size:8pt;" })
            .HtmlAttributes(new { style = "height:385px" })
            .DataKeys(k => k.Add(k2 => k2.ResourceDirectAthleteSupportId))
            .ToolBar(t =>
                {
                    if (Model.Editable) t.Insert().ButtonType(GridButtonType.ImageAndText);
                })
            .Editable(e => e.Mode(GridEditMode.InLine).Enabled(true))
            .ClientEvents(e => e.OnError("grid_OnError"))
            .DataBinding(dataBinding => dataBinding.Ajax()
                .Select("AthletesDirectAthleteSupportAjax", "Maintenance")
                .Update("UpdateAthletesDirectAthleteSupport", "Maintenance")
                .Insert("InsertAthletesDirectAthleteSupport", "Maintenance")
                .Delete("DeleteAthletesDirectAthleteSupport", "Maintenance", new { ResourceId = "<#= ResourceId #>" })
            )
            .Pageable(paging => paging.PageSize(14))
                .Scrollable(scrolling => scrolling.Height(326))
            .Resizable(resize => resize.Columns(true))
            .Sortable()
            .Filterable()
            .Columns(columns =>
            {
                columns.Bound(s => s.DirectAthleteSupportTypeId)
                    .ClientTemplate("<#= DirectAthleteSupportTypeName #>")
                    .Width(130);
                columns.Bound(s => s.DirectAthleteSupportCode)
                    .ClientTemplate("<#= DirectAthleteSupportName #>")
                    .Width(160);
                columns.Bound(s => s.YearId)
                    .Width(115);
                columns.Bound(s => s.SupportName)
                    .Width(250);
                columns.Bound(s => s.Amount)
                    .Format("{0:C}")
                    .Width(75);
                columns.Bound(s => s.Description)
                    .Width(275);
                columns.Bound(s => s.SupportContact)
                    .Width(250);
                columns.Bound(s => s.SupportEmail)
                    .Width(250);
                columns.Bound(s => s.HasComments)
                        .ClientTemplate("<span onclick=\"openCommentWindow('ResourceDirectAthleteSupport', '<#= ResourceDirectAthleteSupportId #>', '<#= DirectAthleteSupportCode #>', '" + Model.Editable + "', 'true');\" class=\"comment sprite sprite-<#= HasComments ? \"note\" : \"note_none\" #>\"></span>")
                        .Width(37)
                        .Title("")
                        .Filterable(false);
                columns.Command(commands =>
                {
                    if (Model.Editable)
                    {
                        commands.Edit().ButtonType(GridButtonType.ImageAndText);
                        commands.Delete().ButtonType(GridButtonType.ImageAndText);
                    }
                }).Width(95);
                columns.Bound(s => s.ResourceDirectAthleteSupportId).Hidden(true);
                columns.Bound(s => s.ResourceId).Hidden(true);
            })

                    %>

            <br />
            <br />
            <div class="clear"></div>

    <% } %>

    


           