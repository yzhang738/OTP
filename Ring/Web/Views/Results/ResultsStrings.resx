<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Index_Title" xml:space="preserve">
    <value>Results</value>
  </data>
  <data name="LoadResults_BenchmarkLabel" xml:space="preserve">
    <value>Benchmark</value>
  </data>
  <data name="LoadResults_ButtonUploadFile" xml:space="preserve">
    <value>Upload File</value>
  </data>
  <data name="LoadResults_Competition" xml:space="preserve">
    <value>Competition</value>
  </data>
  <data name="LoadResults_DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="LoadResults_DownloadTemplate" xml:space="preserve">
    <value>Click to Download Template</value>
  </data>
  <data name="LoadResults_ErrorsInstructions" xml:space="preserve">
    <value>Correct the following errors in the template and try to {0}upload the file again{1}</value>
  </data>
  <data name="LoadResults_ErrorsOccured" xml:space="preserve">
    <value>The Following Errors Have Occured</value>
  </data>
  <data name="LoadResults_EventDateLabel" xml:space="preserve">
    <value>Event Date</value>
  </data>
  <data name="LoadResults_EventLabel" xml:space="preserve">
    <value>Event</value>
  </data>
  <data name="LoadResults_PleaseWait" xml:space="preserve">
    <value>Please Wait....</value>
  </data>
  <data name="LoadResults_ProcessingSuccesful" xml:space="preserve">
    <value>All records processed successfully.</value>
  </data>
  <data name="LoadResults_Step1Title" xml:space="preserve">
    <value>Step 1 - Select And Download a Template</value>
  </data>
  <data name="LoadResults_Step2Title" xml:space="preserve">
    <value>Step 2 - Scrape The Data From The Target Website</value>
  </data>
  <data name="LoadResults_Step3Title" xml:space="preserve">
    <value>Step 3 - Choose The Event You Wish To Upload Results For</value>
  </data>
  <data name="LoadResults_Step4Title" xml:space="preserve">
    <value>Step 4 - Upload The Results</value>
  </data>
  <data name="LoadResults_Step5Title" xml:space="preserve">
    <value>Step 5 - Manage The Results</value>
  </data>
  <data name="LoadResults_Template" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="LoadResults_Title" xml:space="preserve">
    <value>Load Results</value>
  </data>
  <data name="LoadTemplates_Error_FirstNameNeedsLastName" xml:space="preserve">
    <value>DownloadLastName must be defined.</value>
  </data>
  <data name="LoadTemplates_Error_FullNameOrOtherNames" xml:space="preserve">
    <value>Only DownloadLastName or DownloadFirstName &amp; DownloadLastName can be defined at once.  Remove one of the definitions.</value>
  </data>
  <data name="LoadTemplates_Error_LastNameNeedsFirstName" xml:space="preserve">
    <value>DownloadFirstName must be defined.</value>
  </data>
  <data name="LoadTemplates_Error_NoColumnName" xml:space="preserve">
    <value>A value for Source Column Name must be supplied.</value>
  </data>
  <data name="LoadTemplates_Error_NoFormatType" xml:space="preserve">
    <value>A format type must be supplied.</value>
  </data>
  <data name="LoadTemplates_Error_NoSourceOrDefault" xml:space="preserve">
    <value>A value for Source Column or a Default Value must be supplied.</value>
  </data>
  <data name="LoadTemplates_Error_Required" xml:space="preserve">
    <value>{0} is Required.</value>
  </data>
  <data name="LoadTemplates_Error_TeamOrResourceTracking" xml:space="preserve">
    <value>Team Sport and/or Resource Tracking must be enabled.</value>
  </data>
  <data name="LoadTemplates_Mappings" xml:space="preserve">
    <value>Mappings</value>
  </data>
  <data name="LoadTemplates_Title" xml:space="preserve">
    <value>Results - Load Templates</value>
  </data>
  <data name="Maintenance_Title" xml:space="preserve">
    <value>Results Maintenance</value>
  </data>
  <data name="ManageResults_Button_Approve" xml:space="preserve">
    <value>Approve All Results</value>
  </data>
  <data name="ManageResults_Button_Discard" xml:space="preserve">
    <value>Discard Results</value>
  </data>
  <data name="ManageResults_Button_PostReplace" xml:space="preserve">
    <value>Post Results</value>
  </data>
  <data name="ManageResults_Button_Unapprove" xml:space="preserve">
    <value>Unapprove All Results</value>
  </data>
  <data name="ManageResults_DeleteResultsConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete these results?</value>
  </data>
  <data name="ManageResults_Error_NoCompetition" xml:space="preserve">
    <value>Competition doesn't exist</value>
  </data>
  <data name="ManageResults_PostResultsConfirmation" xml:space="preserve">
    <value>Are you sure you want to post these results?</value>
  </data>
  <data name="ManageResults_TeamManagementWindow_Title" xml:space="preserve">
    <value>Manage Team</value>
  </data>
  <data name="ManageResults_Title" xml:space="preserve">
    <value>Manage Results</value>
  </data>
  <data name="ResultsStatusSelector_Status" xml:space="preserve">
    <value>Select Event:</value>
  </data>
  <data name="SummaryStatusSelector_Status" xml:space="preserve">
    <value>Select Status:</value>
  </data>
  <data name="Summary_ApproveConfirmation" xml:space="preserve">
    <value>Are you sure you want to manage results of this competition?</value>
  </data>
  <data name="Summary_Error_NoSelectedSport" xml:space="preserve">
    <value>Select a sport at Season or Sport level from the left menu.</value>
  </data>
  <data name="Summary_Title" xml:space="preserve">
    <value>Results Summary</value>
  </data>
</root>